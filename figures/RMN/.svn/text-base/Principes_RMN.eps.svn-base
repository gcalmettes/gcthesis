%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Principes_RMN.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Gui
%%CreationDate: 11/02/10
%%BoundingBox: 0 0 713 554
%%HiResBoundingBox: 0 0 712.3077 553.0767
%%CropBox: 0 0 712.3077 553.0767
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 100 8%%BeginData: 7328 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFDFCFFFD11FFA87DA8FD43FF5252527DFD10FFA97FFD24FF%7DF827FD10FFA9A9A9FD2FFF7DF82752F852FD0EFFA97F7FFD24FF2727F8%FD0FFFA9A955FD30FFA8F8FFFF5227FD0EFF7F2B7FFD23FFA8F8A82752FD%09FFA9FD04FFA92B7FFD30FF7DF8F827F87DFD08FF2B55FD04FF552B2BA9%FD22FF7DF852F852FD08FFA9F9A9FFFFFF7F552BFD12FFCACAFD1CFFA8F8%FFFF52F8FD07FFA92B2BFD04FFA9557F2BA9FD21FFF8275252F8A8FD07FF%7FF97FFFFFFF7F2B5555A9FD0AFFA8FD04FFCABCCAFD1CFF7DF8A8FF27F8%FD08FF7FA9FD07FF7FA9FD20FFA8F8A8FFFF2752FD08FF7FFD05FFA9A955%7FFD09FF7DF8A8FFFFCAC3C3C3FD1CFFA8F827F8277DFD08FFA97FFD2AFF%A8FFFFFFA8FD09FF55FD07FFA9FD0AFF7DF8A8FFFFA1B58CC3FD1CFFA8FF%A8FFA8FD09FF7FA9FD38FF7FFD12FFA8A8FFFFFFCAB5BCC3FD2AFF7FA9FD%37FFA954FD13FF52FFFFFFCAFFCAFD2BFF7FA9FD35FF7E9A7778937DA8FD%0FFFA87DFD31FFA3A2FD34FF7D7DB5BD71B5CA7DA8FD0DFF7D7D27A8A8FD%2FFF7EA2CACA93BCFD30FFBC689AA1789A7D7DFD0DFF7DB5A1689384A8FD%2EFFA9A9FFCAC3C3C3FD2FFFC3BCA19A689A8CBCFD0CFF7676B5C36FC37D%A8FD2EFF7FA9FD05FFCAC3FD2EFFC3CAB5B5C3C3C3FD0CFFBC6F7D766F76%93CAFD2EFF7FA9FD07FFCAFD2DFFC3C3C393CABCFD0DFFCAC3C3938CC3B5%CAFD2EFF7FA9FD06FFA8CACAFD2CFFCAC3C3B6C3C3FD04FFA8FD09FFC3C3%93B5C3CAFD2FFF7F7FFD05FFA8A8C3FCCAFD2AFFA8FF9ABC8DBCA1FFA8FF%A8A8A8FD08FFCABC9A93C3CAFD29FFFD05A8CF547EFD04A87DA8FFFFB5CA%FD27FFFD05A8C393B09ACAA8A8A87DA8FD09FFCAC393BCBCFD29FFA8A8A8%FD04FFA9A9FFFFFFFD05A8CACAFD1CFFA8A8A8FD06FFA87DA8A8FFFFFFCA%B58CBCFFFFFD04A87DA8A8FD07FFBCB593C3FD20FF7DFD04A8FFA8A8A8FD%07FF55A9FFFFA8A8FD04FF7DA1FD1EFFFD04A8FFFFA8A8FD07FFB5FCC3FF%FFA8FD04FFA8A8A8FD06FFC393B5C3FD23FFA8FFA87DA8FD08FF7FA9FFA8%A8FD06FFA1A8FD04FFCACAFD19FFA8FFA87D7DFFA8FD06FFBC8CCAA8A8FD%07FFA8A8FD05FFCAB58CCAFD24FFFD04A87EA8A8FFA8FFFFFF55FFA8A8FD%07FFCAA8A8FFFFC3C3BCFD1BFFA8FFFFFD05A8FFFFFFC3B5A8A8FD09FFA8%A8FD05FFFCB5FD25FFA8A8FD05FFA8A8A8FFFF7F7EFD09FFCAFFA8FFCAB5%BCBCFD1AFFA8A8FD05FFA8A87DA8A8A845A8FD0AFFA8A8FD05FFBCB5FD25%FFA8FD09FFA8A82E949BCACAFD05FFCACAFFFFA8CA8CB593FD1AFFA8FD0B%FF52057DFFA8FD09FFA8FD05FF769AFD25FFA8FD0AFF5EA8CAC4BCBCBCCA%CAFFFFFFCAFFA8FFFFC3C3CAFD1AFFA8A8FD09FFA89A8DFFFD05A8FD06FF%A8FD05FF5227FD25FFA8FD09FF5884FD04FFCBCA9ABD9AB593CAFFA8A8FD%1FFFA8FD08FFA8AFBCFCCAFFFFFFA8FFA8A8A8FFFFA8A8FD2DFFA8FD07FF%58A8FD0AFFB5BCA1A87DFD20FFA8A8FD06FFA8A8FFB68CCAFD08FFA8A87D%A8A8FD2DFF7DFD05FF3484FD0DFFA87DFFA8A8A8FD1EFFA8A8A9FFFFFFA8%A8FFFF8D8EBCFD09FFA8FFA8FFA8FD2DFFA8A8FFFF58AEFD0CFFA8A8A8FD%24FFA8A8A8FFA8A8FFFFC3946ABCFD06FFA8A8A8FD33FFA8A8337DA8FFAF%FD05FFA8FFFD04A8FD29FF7DA8A8FFAFC39A71BCCAA8FFA8A8A8FD37FF58%AEFFFD0AA8FD2CFFA8A8FFFFA8A89A774CA1A1A8A8FFA8FD37FF34A8FD06%FFA8FFA8FD2EFFA8A8FD04FFC3C3A178C9C3FD38FFAEAE58AEFD37FFA8A8%FD05FFC3C39A46C9C3CAFD37FF830AA8FD3EFFCAC3CA9A6BC2BCBCFD37FF%8383A8FFFFFFAEAEFD08FFA8FF83AEFF83FF83FFAEA8FD26FFBC6F76774D%A04BA1FD36FFA8FD05FFA8A858FD08FFAE838358AE33AE33AE83A8588383%5883FD21FFA176BC9B9BBCFF7DFD3DFF5883FD08FFAEFD0883AEA85E5883%33AEFD21FFA87D6E9B70937DA8FD3CFF835833FD09FF5883835E835E8383%83FF58835883FD24FFA8537EA1AFFD3DFFAE585F58FD08FF8383AE58FF33%FF58A8FD2AFFA97FFD3FFFAEAEAE8383FD07FFA8FFAEAEFFAEFFAEA8FD2A%FFA9FDFCFFFDFCFFFDFCFFFDFCFFFD1CFFA9A9FD7DFF7F2BA9FD66FF7D27%7DFD10FFA9FFFFFF552B7FFD65FF52F852F827FD0EFF552BFFFFA9552B7F%FD64FFA8F8A8FFFF52FD0EFF7F2BA9FFFFFD047FFD63FF7DF8FD12FFA97F%FD05FFA92BFD63FF7DF8FFFFFF52FD0EFFA97FFD6AFFA8F852FF27F8A8FD%0DFF7F7FFD2DFF7D7DFD3CFFA827F827A8FD0EFFA97FFD2DFF527DFD4FFF%A97FFD2DFF5252FD4FFFA97FFD2DFF527DFD4FFF7F7FFD2DFF5252FD4FFF%A97FFD2DFF527DFFA8FD4DFF5253FD2DFF5252FF27FD4DFF5252FD2DFF52%52A852FD4DFF5227A8FD2CFF5252A827A8FD4CFF52F8FD2DFF527DA852FF%A8A8FD21FFA8FFFFFFA8FD24FFF8F8A8FD2BFFA85252A827FF527DFD20FF%52527DFD04527DFD21FFA8F8F852FD1BFFA8FD10FF527D7D52A87D52FFA8%FD1EFF5227FF52527DA827FD21FF52002827FD09FFA8FD11FF7D5252FD0D%FFA85252A827A8277DA852A8FD1DFF2752FF5227525252FD20FFA8272801%267DFD07FF7EFD13FFA827F87DA8FD0BFF527D7D527D7D52A827FFA8A8FD%1BFFA8A8FF7DA8527DFD1FFFA8FF5227282927277DFFAFFFFFFF7DA8FD0D%FFA8FD05527D27F8F8F8277DA8FD07FFA852527D527D527D7D27A85252FF%7DFD3CFFA8A8A8FF525252272752F852A8FFA8A87DA8FD0EFF7DFD08F827%F8F8F8277DFD07FF527D7D527D7D52A852A8277DA827FF7DA8FFA8FD34FF%A8A87EA8A8FFA82727A7537EA7A87D52A8FF7DFD04A8FD0CFFA8F8FD0627%FD04F8527DFD07FFA87D527D527D527D7D527D52527D27A8277D7D27A852%7DA852A87DA87DA8A87D7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%A8FD06FFA8A9A8FD08FFA9A8FD05FFA8527D52515353A77D7DF87DA8FD05%FFA8A8FD11FF27F8277DFD0BFFA87D7D7D52FD077D527D27A852527D527D%7D527D527D52FD187DFD08FFFD05A8FFFFFFA8A8A8FD06FF27527D7DA854%547DA8A8A85252A8FD05FFA8A8A8FD0DFFA85227A8FD0EFF527D527D7D7D%527D27A85252A827A8A87DFF7DFFA8FD2AFFA8A8A87DA8FD05FFA87D5227%7DA87D5454A77D7D52522752FD07FFA8A8FD0CFFA8A8FD10FF7D527D527D%7D52A827A87D52FFA8FD32FFFD04A87DA8A8FFA827527D52522752285352%522752277D7D5252FD06FFA8A8FD1DFF52527D277D7D27FF27A8A8A8FD34%FFA8FD05FFA8522727A8A8FD04FFA97ECF7DFD06FFA852FFFFFFCACACAA8%FD1DFF7D52A827A87D52FFA8FD36FFA8A8FD04FFA852A8A85252A8A8FFA8%FF7FA9A8FD07FF7D52FFFFCACAA1CAA8A8FD1CFF5252A8277D7D27FD38FF%A8FD05FF52FD04FF7D527D7DA8A87E70CAFD04FFA87D527DFFFFFFCAB5BC%BCFFA8FD1CFF7D27FF27A8A8A8FD38FFA8A8FFFFFF527DFD06FFFD047D27%5245FD044B7D7DFD05FFA1B58CBCAFA8FD1CFF7D27A8277DFD3AFFA8FD04%FFA852FD09FFA8FD05FFA1C3BCC3C3FFFFFFCAFFC3C3CAFFA8FD1CFF7D27%FF52A8FD3BFFA8FD04FF5252FD07FF7DFD09FFCAC394BCBCB5C3FFFFFFA8%FD1DFF7D27FF7DA8FD3BFFA8A8FD04FF7D527DA8FFFFFFA8FD0DFFCA9A8C%B5A1FFA8A8FD1DFF7D27FD3FFFA8A8FD05FF7D7D527D52FD04A8FFA8FFA8%FFA8A87D7D525952A8FFFF7E7DA8A8A8FD1BFF7D52FD40FFA8A8FD06FFA8%7DA8FD047D527D7D7D527D7DA87DFD05FFA8A8FD04FFA8A8A8FD18FFA852%FD41FFA87DA8FD04FF7DFD07FFA8FD0BFF7DA8FD20FF7D52FD43FFFD04A8%7DFD11FFA8A8A8FD23FFA8FD45FFA87DFD04A8FFA8FFA8FFA8FFA8FFFD04%A87DFD6CFFA8FFFFFFA8FFA8FFA8A8A8FFA8A8A8FFA8FD6DFFA87DFD7EFF%A8FD7DFFA87EFD7EFFA8FDFCFFFDF3FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">RVB de base</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2010-02-11T16:27:12+01:00</xmp:CreateDate>
         <xmp:ModifyDate>2010-02-11T16:27:12+01:00</xmp:ModifyDate>
         <xmp:MetadataDate>2010-02-11T16:27:12+01:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>200</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAyAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXy/wDnn598&#xA;+t+Yep3XlHUrq30b8urayutbtbaaWOK5nuLlC0cqRkLIojccgwIAV8VfSukapaatpVnqlm/O0v4I&#xA;7m3fxjlQOp+5sVReKqclxBHJFFJIqSzEiFCQGcqCxCjvQCuSECQSBsFW310lpZXF25VUt4nlZnJV&#xA;QEUsSxAYgbb0B+WHFAzkIjqaQSxzyX5y/wAS3OptDJZSWNq0ItmtZpnmpJHyYzRyxQ8VLA8GH2t9&#xA;tqnY9o9n/lowsTEpXdgVsehEj8R0+LGE7ZTmrZuxV2KuxV2KuxV2KuxV2KuxV2KvJP8AnKPW9a0X&#xA;8prm+0e/udNvVvLVFurOaSCUKzkMA8ZVqHvviryFfO2lW/mjylD+Wv5leYvMusX2pQW+paZrtzO9&#xA;kbZ95K/WobVKkjiKEt/LQ0qq+ucVdiqWaF5l0XXVvm0u4W4GnXcthdlf2Z4Kc1/HrmVqdHkwcPiC&#xA;uOIkPceTGMgeTF/za8xX+jabpSWNu1zPqd41mVT60zBfq00xYR2hDyf3PShHfNn2FpIZpzMjQhHi&#xA;/h/nRHOWw5sMsqTP8s9Ts7/yRozQEpItnD61tJcNczREgjjI8hMlaqftfLtmN2zhlj1WS/5x34eE&#xA;H3AbfJljNxDKM1bN2KuxV2KuxV2KuxVbM7pC7pGZXVSyxKVDMQKhQWKrU+5pir518n/84469ruj6&#xA;/qnnfWda0DzB5mvLmbUtK02+gFm8TsTEtwkazpMAXbbnQKaUGKvSPyE0bzpoX5cWWg+brL6nqOky&#xA;S21v+9hmEtqG5xOGheQADmUAah+Hpir0TFXnPnjytd6l+ZHlHUV1e4tHtDctYwRKnpI0cYaUyKRy&#xA;k9Zfgb4h8PTffOi7N1sceizQ4Iy4uHiJ589q7uHmOe7TONyG7O9YsDqOkX2nh/SN5by2/qU5cfVQ&#xA;pypUVpXxzR6fL4eSM+fDIH5FtIsPMPLnkLzx5Hv7P9E3EGp2+oz2dvqvCJ0WK2tn4lybm5uJamGW&#xA;U/A3EMqAIOTZ02r7U0uthLxAYGAkY7jeUunphEcxHnvRkTLYNMYSjyetZybe7FWA+ZPzPk0f8ytB&#xA;8pppdzcWGoxynUtVWGVoreQ8BAPUA4EcnHqnogdCTviqfed/M0Xl3R476VZTHJcRQM8JQMiuSWf9&#xA;4rrRQtTtlOfLwRt2fZWgOqymAqxEne966bEIb8vNdOsabqUv1i4uVt9TuoI5bn06lAwkj4emqfBw&#xA;kHGu/wBFAI6bJxA+8tvbWk8DJAVGPFjiajfPkbsnex+DuZTmQ6d2KuxV2KuxV2KvMf8AnIzyb5k8&#xA;4flncaL5cs/r2pvdW8q2/qRQ1SNqseczxpt88VYV558ufnF+aEOg6BqnkqDylp+nX8N7c63Lqlrf&#xA;SKkSlGSFLcCRWYNXwJAqRir6DxVbNEssTxMWCyKVYozI1CKfCykMp9wa4Yyo2rBvyt8raBop8wS6&#xA;TaLah9UuLc+mz8Gjt24oCpYqWViw5U5dic3nbety5vCGSXF+7ifif17bcmrHEC6ZXrfl3Qddtktd&#xA;a0621K2jcSxw3USTIrgFeQVwQDRiK5qtNq8uCXFilKBO3pNNhiDzSvy/5D0TQde1DV9ODQ/X44oh&#xA;ZqsaQQpEioFjCKrUpGuxJC9qZk6rtPLnxRxz34STe9m999/P49WMYAG2SZrmbsVdirsVdirsVdir&#xA;sVdirsVSzzD5hs9DsUubhWllnmjtbK0iKCWe4mNI4o/UZE5Hc/EwAAJOwxZCJPJ47rP5xXs+oaJr&#xA;0WmW3p2d1d2gsxczPK/MJEJOS21AhDAqVDV6ddsswdoYxpcp75QH+yO/u/sd9/oZz/mI4iQLxmd3&#xA;/Rvh997Hy9XJ655e8yDVZLq0ntjZ6lZCJ7i35rNGY5wxhmhlTZ45ODcSQrbGqjK3QSiQaPNOcUOx&#xA;VxIAqdgMVee6t5w8pP8AmZ5cRdb0+kOn6t6jfWoaCRpbGNIj8X235EqO/E+GKTEhmWs6HpOuWS2m&#xA;oxfWLXkJAnJlBPErWqkV2Y5CeMTFFyNLq8mnlx4zUmtD8v6Todq1ppcH1eB2DsnJ3qyxpEDVyx+x&#xA;Eoxx44wFBOr1mXUS4shs/DvJ6eZKY5NxXYq7FXYq7FXYq7FXYq7FXYqw7yRqltBZ6ysqTKI9b1BS&#xA;4hlZCZb2ULxZVYEAj4j+z3pmf2pMccef91j/ANwGzFp5SFgx34v4h0+Py7+if6J5h0nWkum0+dZT&#xA;ZXM1pcoCOSSwuUNQOzceSnuM1mPJGV10NN2q0WTAY8YriiJDzBF/sPmmWWOK7FXYq7FXYq7FXYq7&#xA;FXYq7FXYqw/81fKtp5h8pzrdJJOumn9IR2kblPVe3HLgWWjglOSrxYUJr1AyjURuNj+Hd23Y2oEM&#xA;3BIDhy+gki6vr8DR+DyXWdIvG/MHRtH0/ULxtIfVTc20j3HrOVeGyueavKpmJX1a8mkJPzGVfmMg&#xA;uEa4JSF+fIj5O9w6HF+WOWcp+LHFIV0G+SBBO53r4fF6h+UWiXunaJfXVxdm+TVr2W8huZS7Tslf&#xA;RjMjyNIzBooUZasSK07VNmmMiCZG7Ozpe2hgjkjDFHg4IgS3u5czv32SD7unITrMh0zsVYH+cUfm&#xA;GXy/Yx6TFBJbi/t21VLxiLV7Uv6ZinCh3MbSSqzUVhRTyBHwmnNMxojl1dl2bpseYyjI+rhJiP5x&#xA;G9eWwI95DxS4sLmPzV5Y8uNZ3tzdaLLrZ+pi4t5VUNPHND6LLGXYFbNiyvCQx3VfipmEBEVDiNiR&#xA;P3+T1Mp55ieq8KAxyxRh0ETxcHP1dPKqHM7Pb/yeumu/KT3Zthp63N5PLFpKBhBZxMR6UMHKlYyl&#xA;JKgBeTniAtAM7DlGSNjZ5TtLQHSZfDJEthuOXn8jYZxlrr3Yq7FXYq7FXYq7FXYq7FXYq7FWMeRF&#xA;Dabqyno2saqDQkHe8k7jNl2p9cP+FY/9wGOM180da+T/AC9YUfSrKHTbhA3pz2qCIlmUrWUJxE1K&#xA;1pJUV365qBhiPpFOxydpZ8m2WRyR7pb/ACv6f82kTp+qpIJYLiRfXtZEtpZ6COKaUopYxDnJT424&#xA;8C3IHbwJkJd7RkxDnDcGzXMx3O0th03uqTDJuO7FXYq7FXYq7FXYqprcW7zPAsqNNHQyRBgWUHcV&#xA;XqK4qqYqg7zWNPs5Vgll5XLjkltErSzEdKiNAzU96UxVQ+v6vcLSDS+CHY/XJkiqPlELk/eBioL5&#xA;41O91jS/zA0/TUWNb/S4bq1tQHZh6pha2tAWKqSSkcB6dx07acyMZcI5j9RA/Q+oYcUM2kOQ/Tk4&#xA;ZH3cUZZPtOT5Pd4p9Q8u6La28lnbtZ2MUVrCIZ3MrhFEaLHE0IqxoAF5ZtoREQAOj5pqMxy5JTPO&#xA;RJ+Zt1jqpF2brXll06epS1gm2to0OwrMhaF5H/ymqOijqTJqZHiqD1rTItV0e902U0jvYJIGbuPU&#xA;UryHuK1GQnHiiR3t+lznDljkHOMgfk+fDqlxN56XURGBqQs7lok4g8b65tLa1pt0IvZGFf45qeMm&#xA;V9f0kAfe+hfl4xxcF/u/T/pI5Jz/AOmYD6H02xh0/TrWwgFILSGOCIf5EahF/AZt4x4QAOj53nzH&#xA;JOUzzkSfnuiMk1OxV2KuxV2KuxVbLII43kILBAWKqCzGgrQAbk4qgYdf0iWRYvrIhnb7MFwGglPy&#xA;jlCOfuxVE3t9aWUBnupVhiBC8m7seiqOpY9gNziqBXUNZu97KxFvCelxfMY2PusChn+hyh9sVXiw&#xA;1mQ/vtU9P2tYI4/+TxuMVY35D029fTNSkTVbpVbWNVC/BbEMY7+aNiQYa/bQ13Htmz7U+uA/2rH/&#xA;ALiJYQ5fEo6WXzLeTz2WnXkM9rDVLq8dGgfmDvDFKhdeQGzMI/h/1vs6xmkWraDpcPmLy9rF1FLo&#xA;9xpU6woJJXlsJI5wYuMbjkqSGR1ILKhY9a9cx8uEGcZ9Q7rQdozjp8unq45I3sBdx9XPqKB58uj0&#xA;XMh0rsVdirsVdirsVdiqFvNL029obu1inZfsO6AsvurdR9GKpNqOn3kd1Bp+j39zazXCtJM7v9Zj&#xA;ihSgLUnEjcmZgqBWA6n9mmKq1hY6tpMbJDbW14rfFNNGzwXEjeL+qZvUb3aUYqiv0/ax7XsFxYHu&#xA;Z4yYx85ojJCPpfFXk/nCz0g/nX5a1ZJo7myvYXuQtuyyyS3NkvwCMKTyJKwgZgZMBOcGvTzPw/Ae&#xA;w0PakY9k5cZP7wHhiP6M+f8Avr+D1ixsLiadNR1QKbwV+rW6nlHbKwpQH9qQj7T/AEDbrnvHpkyq&#xA;ylWAZWFGU7gg9jiqTPAdEmhktSRpEsixTWnVYGkYIkkP8qcyA6fZH2hShqqnWKvEP8M3a/8AOQq2&#xA;wT/caYX1WlP2XkWYt/0mpmr8M/mK6c/x8XvDrInsbj/j/u/0f9M3t+bR4N2KuxV2KuxV2KuxV2Kr&#xA;JoIZ4zFNGssbfaRwGU/MHFWNaT5csbr/AHKR87Ji7/o6O3bgkEIqgKxENFykA5NVfbtiqa+h5ht/&#xA;7q5gvkH7FwhhkPzli5J90OKu/TF1D/vbp1xEBsZYALmM/IRVm++MYqwfyD5m03Vre70Kz1GKBv0r&#xA;rEtwfVWO6dLjVLmaNbeMkP8AFE6sZKbA/D8W65naOox5Mo4ZA/u8Q+IxQB+RFNsNJl8IZeGXhm6l&#xA;Xp59/J6PbW1va28dvbxrFBEoWONRQADsMw2pB6+ITpFys3HgwC/vIvXWpYBaxEHl8VMhk5ORpATk&#xA;H666b7oew9TTrq403kZLVIfrFhyJLIlSrwknfih48a9jT9nJloiLNPPvy/8APup+YfNelG5kmBut&#xA;Mme6tfUAt45BLyj4xqiVb0uLVJrRs1un1BnMX3PZ9s9j49Npp8IHpyCjXqIrfeztxX8nrObJ4t2K&#xA;uxV2KuxV2KpVfSix1i3vZjSzuI/qssp6Ryc+URY9lcsy18ePjiqa4qhdR1G3sLf1ZeTs7BIYUFZJ&#xA;ZD9lEXuT+HU7Yq8Q1yy0m5/5yD0CbVraM3wtHWd7d3j9CaQN6C84yjM6eqnxnqX9lpiyzEZKH07A&#xA;+83+p6TTdkwn2dPOf72yY/1YmN/775PZv0XqEH+8WpSqo+zFdKtzGPp/dzH6ZMynm3G7163/AL+x&#xA;S7Qft2koVz7+lP6aj/kYcVSzW/MmlTRppcrtaXN08YlW7RoFSEOC7l5AEOylV4sasR74qyVHR1Do&#xA;wZG3Vgagj2IxViJ8iX5/NFfO/wCm5hbDTv0adF9KP0yvP1P737XHn8fTly/a4/Dg4Rd1u2+PPg8O&#xA;zwXddL5XXfTL8LU7FXYq7FXYq7FXYq7FXYqk+m3A06f9EXfwKXY6bMdkljYlxFX/AH5HXjx7qOQ7&#xA;0VTjFWIy3dx5wmlsrB3g8rxMY73UYyVe9ZTRoLZh0hB2klH2vsr3OUX4mw+n73FMjlND6O/v8h5e&#xA;aeXfljy5eWUNjeaXa3NnbqEt4JYY3SNQKAIGB47eGWmESKI2dhp9RkwG8UjD+qa+5KB5BtrML+gd&#xA;V1HRuCkRwQ3BuLYE/wDLveC4jA9k45X4NciR+PNzv5VlP+9hDJ741L/TQ4T87SOdPzTtNceW6vLS&#xA;48vWscH1m8cjT2k9GUTM6KGugCwrG9eCuNqDZsq4cvH/AEfx73Pll7O/LWIyGc8VD6gLHDRNR/rD&#xA;6jE9+4ZBY6z617LqWo2dzZ28kKRWayQs49P7UjyGMOE5sQKPTZQe9My3nEw0jR/K8QjvtIsrNBxK&#xA;RXNtHGPhVViKq6DssSqR/k07ZCOKI5AOVl1ubIKnOUh5k95P3kn4prk3FdirsVdirsVdiq2SKOWN&#xA;o5UDxuCrowBUg7EEHqMVSC+W60GFW0+f14nYR22kT1dnc7iOCUfGnj8fJVH8qjFVtnLfQ3LX2sad&#xA;O14AypLD6csEMbH7EQV/U7Dm5QFvlQBV4HrM09/+Zdjr1urm4u4L69gQq4Jlg43dhRQOTViFupYb&#xA;UoelCceOLi0+Sf8AF4uOv9LmI3/0u3Xn0e/x6uGOMcB4uCOOUT6ZdZYoT2rofEPkduZfRNv5jgvL&#xA;eK4sLO7uo5kWSMrD6QKsAwIacwqdj1Bpl4Ni3gpwMZGJ5g0uJ8w3dAFi0yE9XJFxcU9lAESH3q49&#xA;sLFE2Gl2lkkgjDSSTGtxPKeckp6fGx607DoOwGKt22l6dazPNa20cEkgpI0ShOW9fiC0BPviqKxV&#xA;2KuxV2KuxV2KuxV2KuxV2KqV3bWtzbvDdxpLbsP3iSAFSBvvXwxVgYsdU80evaaRfzQeUE+B5rgm&#xA;X66yt8cMDgpOLf8AZaT1Dy6L8Ncos5P6n3/s+9xCTl2H93/uv2feyy3bWrSCOBNNtRBCoSJLecqA&#xA;qigCxtEqqKdByy8BygKVPr+rnZdLYHxeaMD/AIXmfwxStJ8yzGgWzs1/n5S3R/4GlsB95xVuLQoD&#xA;OlzfSyX9zGeUTT09ONhuDHEoWNSOzULe+KplirsVdirsVdirsVdirsVdiqCttNVLyS9uH+sXbckj&#xA;kI4iKImojjWpp0HI9WPtQBVIPzN8z2Og+V7j61ciyfUgbG1u32jjln+Dkz/ZXgrM/wAW3wnKNROo&#xA;11lsHbdj6bxM3Ga4MXrl7o7/AGmo/F4/f6/An5p6LqWnRyS6La3FwsZSyvGdbcQ6daUX4KOH9Lin&#xA;Hox36qMyscSNHkI5fmMP2Qyj9XzdsJwkBGZPiHTZCe6zkGQdPffeAAN3qn5Q+YRrHlmSGKForXR7&#xA;mXTbcyMpkKQGqKyqWC8IXjWnI7g9qZh6UnhoiuHZ1vbuPGMwyQmJ+LETPDys8/P6uI7gHle7OMyX&#xA;SuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsM8y+XPNGteY0VZ0h8rLCkV9ZmVke7+Iu4+BWKr0U7gnc&#xA;dDmNkxzlP+h97h5cU5z/AKHUd7LGe3sreNFjKQoBHHHDGzhQBsAkamgAHhTMgmnLJAC3TdQi1Cyj&#xA;u4o5YklrSOeN4ZBQkbo4B7beOCMrFohLiFonJMkp1bzHa6XJdJcRufq1jLqAK0+NITR0X/K+Jfvy&#xA;ueQRu+62rJmEbvoLQdp52sLm90W0EMiya1A0yVpSFlQv6UlP2j6cg2/lORGcEgfzmEdSCYj+cs0r&#xA;z1ZanZ6fc2ttKTqFy9uImKq0aRo0pmapA4emFYU3+IYIZxIAgcyiGpEgCBzP4KrH+YHk6S3Nwmpx&#xA;mJeG/GSp9WvAhePIhuPUCmS8aHeyGpx1dp3aXdvd20V1btzgmUPG9CKqehoQDlgNi26MgRYVcKXY&#xA;q7FXYq7FXYq7FUk82+VrbzFp8FvKyx3FlcxX1hNJGJo0uYK8GkhYqsiUYgrUdaqVYBgCAWcMko8j&#xA;V/2vHbj8sfOcXmK00a3vovrfp3N+l+L+7j/crfW78BH6MjRlewEhq3xFu2WR0X+Byon+9jvxHult&#xA;XL48x8Xff6Iic/iSx4z+6MK4RzquLl9nKtnsPlvy/c6bLfXt7cpcajqTRNcehGYYEEKenGsaM0jE&#xA;hftO7Fm9gAog8+TZtPMUOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVjH5i6bqmo+Xfq+mxPPOLmB3&#xA;ijKhjGkgL7PJCG2/Z5iuU54kx2cfVQlKFDvUPIE2p2loNA1S3livLWM3KSSujVgnuJRGtEkm4lFW&#xA;nHkaCgqcGEkDhLHTEgcMhuP1suy9ymJ+edH1K/udJayhMqvN9TviKUS0nkikmdq9RS3Ap4kZj54E&#xA;kV7vh+A4upxmRjXuPu2/Uxy78t+ZYrbWrm2s2ku7K6RNGiBUepAbi4kLJuKUjvyu/wDJlBxSokDc&#xA;Hb5n9bjSwzAkQNwdvmf+K+xOdD8sX9h5qeH0uOj29nytpxQqZ5YLa1KgdaqlmxP+vluPERP+jX6h&#xA;+hux4THJ/Rr9AH6ELa/lJawx2ML6hLNBbxWkdwjtMS7WpcsYnMpaBX5/YQ0FMRphtv3IGiArfu+z&#xA;47M8tbaK2toraEERQoscYZmchVFBVmJY7dycyQKc0ChSphS7FXYq7FXYq7FXYq7FVM2tsblbowob&#xA;pEaJZ+I9QRsQzIG68SVBI9slxy4eG/Tzrpa0qZFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q6grWm574q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWB+dfzm8seVtci8vLZalr/mGWP130fQ7U3l&#xA;zHDSokkXlGFB8K170piqZ+QPzK8r+erC4udFklS4sZBDqWnXcZgu7WU1+CaM1ofhO6kioO+xxVlO&#xA;KuxV2KpJ5f8AOOha/qGs6fps4ludCuhZ36+EhQNUf5PLkn+srZm6rs/LghjnMUMseKP4+R9xDGMw&#xA;bro8982edfMdv+Ztpo8dxcQ6NaajpomaFQiMLwcPTmnMLx8C0n2GYM23EhqEdBoezsMtEchETklD&#xA;JV/0d7A4gb25gUOuzVKZ4q6PXc5JvdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVeHflLPb2n59fmlY6o6x65ezWk+npLQSSWSLIf3Vdyqq8XKnt4YqzjyF5r8ieYPM&#xA;/moeWdKWK8064jttZ12O3t44r2cBtluImMk5joalxtXbrirOcVdiriKgg9Dttt+rFWDfl95Z8v6b&#xA;r/m2603ToLNhqa2sTwoEb0V0+yLI3HqPWDvv3YnqxrvO1dZmyYsMZyMv3d79/iZP97Q+AHQNcIgE&#xA;0neteR/LeqXE+ovp9tHrrxNFb60II2u4GKFEkjkI5Bo61XfMLT9pZsQEBKXhXZhZ4TvuCPPqyMAf&#xA;ereUNDutD8vWul3V2b2eAys09GApLM8qxqHaRuEauEWrH4QMhr9THPmM4x4Qa29wAvpuas+ZWIoU&#xA;nGYbJ2KuxV2KuxV2KuxV2KofUL+006wudQvJPSs7OJ7i5loW4xxKXdqKCxoo7DFW7G9tb+xt760k&#xA;EtrdRJPbygEBo5FDI1CAd1PfFVfFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqxPzr+VH5eed5IZf&#xA;M+iw39xbjjFchpYJgu/wGWB4pGXevEtTFU48s+VvL3ljSItH0Cxi07ToalLeIGnI9WZiSzse7MSc&#xA;VTTFXYq7FWNeTf8Ae/zV/wBtl/8AqDtc2XaH0Yf+Ff7+bCHX3slzWs3Yq7FXYq7FXYq7FXYq7FXY&#xA;qxb80pfT/LjzI3LhXT7ha1p9tCtPprTFVT8s5Wl/Lvy0xABGm2qbeCQqo/VirJcVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVeZ/kz5lfV9R/MG3uriN72y816hAluvFXW1hSGCFio3o&#xA;fSI5dyDluXNKYiD/AAih7tz95KAKemZUl2KuxV2KuxV2KuxV2KuxV2KsP/OD/wAll5i/5hG/4kMV&#xA;YB5O8yahb3v5T6Yl3Ilnd6fei7tkZgklISsPqKDxbg0fw16b4q9vxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2Kpb5m8wad5c8v6hrmpSLFZadA88zMeNeI2Uf5TtRVHcmmKvl3/nFnzPrV&#xA;l+ZnmGx1+zmjvfNDyT3c81u8ckV9A7zMkjPwCc/Weq0J5cemWZMUoVxCuIWPd3oBfWmVpdiqyGaG&#xA;aNZYXWSJ91dCGUj2I2xVfirsVdiqUeYfNOl+XolutXEtvppoJdSEZkt4STQesU5NGD/Oy8B3YYqj&#xA;tO1LTtTtI73TrqG9s5RWK4t3WWNh7OhIOKonFXYqw783wD+XWrgioItwQehBuYgRiryDQZHTzT+V&#xA;wU7W0UsC17pJcXUQ8PsrFirMPyz/ADDs7Dyt5n1nzBeO1rD5gnRJqmSi3JjCInX4VYk+wxV7Birs&#xA;VdirsVdirsVdirzb87PM3mbQ7fyrF5fubm3m1fXbfT7pbFLJ7mSCWKVmjh+vq1urlkFGeg96Yqw/&#xA;zB548/2XmZvL0WtXtojXnla0MlzBpj30K6vPOl3zMMElqZaIo+FWQFfh71VZ/wDlV5j1nVl8zWOp&#xA;3p1X9A61caba6qUijaeKOOOSkggWOIyRtIUYooG3QYqzrFXYq7FXYq7FVC8v7Kyi9a8njt4q0DSM&#xA;FBJ6AV6n2xVBjW2mANlp91cqf92FBAnz/wBIaJiPdVOKvEPzk876p5l1Sf8AL7TYrSO505obvVba&#xA;SXUbtbxZIpALJrfS4GnZQXSR/iC1Cg13GKvH/LXkDzrbXZ1TS/K9/wDpPStRM1kY4ZPqkVxbujJW&#xA;GRDJ8DrUct6dR45eqO0NuGoD47ndjF9TeR/zA1bWrUWN/ZRr5jsbeGTWLAC5s5laQEepHBeww1id&#xA;kbiyyMPfMRkmE/mGHVgqTpcadohr9YuJENJ6GnATxepEkR/afn8XQbb4qye1e1e3jNqUa24gRGIg&#xA;pxGw48dqfLFVXFXYq8K/P784/P3kbzJp2n+W7W3ntbmz+sTNNBJMRJ6rpQFHQAcVGKvLJv8AnJ/8&#xA;4p4ZIJ9KsJYZVKSxPYzMrKwoyspkoQR1GKvK9D86+avLWrTX2gX02iztIWe3tmZYhuT6bRSFw6r0&#xA;Ak5Yq+mfyZ/Pb80PNEsVpqXlKXWLSoWTXLEC1VRX4jJ6xW3dvZXX2BxV9B4qw783d/IN+naWexiY&#xA;+AkvoEJHvRsVeOaMB/iDybz2NlLaxK3YM2tX8LGv+UYwB86d8VY8YZJvy71OzQ0a/vbC7+HxOm3N&#xA;xwp3+K3p9OKvR7P8xNTtPzA1G/nuHl0WLy/zgti7eibm3s4L9iFJ+0VnK16/dirIdE/Oi2OjeXZN&#xA;dtDDq2sXc1jeRW4IitpIJxA0j8mZlTnJGNz367YqyVPzM8lN+mi+pJFHoEgi1KSQMqqzMYxw2+Me&#xA;opT4f2h8sVTODzZ5YnubW1i1W1e5voBdWcAlTnLCQWEiLWpWgJxVuPzV5XltRdxaxYyWrSGFZ1uY&#xA;TGZB1QMGpy9uuKq51zRRLLCdQthNAKzR+tHyQHuwrVfpxVw1zRSUA1C2Jk/u/wB9H8Xb4d98VQl9&#xA;c+UL4wS38un3RsJ1ntXnaCT0LhQQskZevCQAmjDfFUFqth+WupvOdWt9GvnuxEbk3aWsxlEIJh9T&#xA;1A3LgJG4V6VNOuKorS7zyVpNlHY6VPpun2MVfStbVoIYlqanikZVRU+2Kpnaajp95z+p3UVz6dOf&#xA;our8a1pXiTStMVRGKoK60mKeY3CT3FtcGn7yGVgNhTeJuUR+lMVUfQ8wW/8AdXUN8g6JcoYZD85Y&#xA;qp/yRxVLbrzHqkkklpBZSQPA4jvL+NDeRxEgNxiSIc5Hoe6AL1NemKovRk8um4L21yt5qYFJZp3D&#xA;3YB7FWo0Y/yVVR7YqwX8y/zOjB1fyhoF7a2Wsm3e3m1a8uGgS3nmj+FLWOFZbm5nRW5H0k4ptVuX&#xA;w4q8os4vKH6E04+bdE8yWTWpDQRWel2mlWayEDk8OozCK5l58QfUkuebdSMVVfKfmbylG+qGe/1R&#xA;Ijqc/wBUt/8AGUFmWiHHisi/pMF5OzOjEHs22bDtDg/d8Bv93G97o9R5e7owhe/vUDrGjC91M/l9&#xA;o/mWG+v42M0umSw67b3c0W0aXjyzzt6FSatyPIN8Jp117N755Q/MTR9St9N0zVGOj+aJbeP6xo93&#xA;BPYkzhB6qWq3Kp6yK1ePplvhxVPrjQYBK1zpznTr1jVpYQPTkP8AxdDsklfHZvBhiq/TdSllleyv&#xA;YxBqMI5NGpJjkjrT1YmNKrXqOqnY9iVUwxV2KpN5lj803NqbPy/Lb2M8w4vqtyDKLcHblFbrT1ZB&#xA;2DsqjY/FuuKsG8p/844/lxodwdQ1C3k8xavI5lmvtVYTBpWNXb0aCM1bf4wx98VeoRxRxRrHEgSN&#xA;AFRFACgDoABiq7FVk0MM0ZjmjWSMkEo4DCqmoND4EVxV8yxTCJJrqYlP0LdWSzheoX/EN9I3zILD&#xA;piqv5d05p/M3lvQygH6T0ayvAFAOy6TfR1YbD4jKtfoxVQ0Hyv5h80fl1pt/pkLy3k+rmxuWU8iL&#xA;KSwhsJJG6fCPRqfCvtir1Jvybt7jXfNFzd3dNM1uFo7CCIUktpJmjlmkFRxr61ujLTFU0sfyg8o2&#xA;76HNKktxc6Ip4SuwAuJDI03O4UCjlZnaRfAnFURF+Uf5dR2lxa/oWF4bmYXEgcuWDioUI/LkiKGI&#xA;CKQu/TFUWfy28gG4a4by9YNK0YhJa3jI4BQoHEjj9kUrSuKrU/LL8vEijiHlvTikR5JytomNTvuW&#xA;BLfTiq7/AJVp+Xnx/wDOtaZ+8+1/okO3+r8Pw/RirY/Lb8vQyt/hrS6qOI/0OClPccKE+5xVtfy4&#xA;/L5VoPLOl0rXezgJ616lMVXf8q7/AC//AOpZ0n/pBtv+aMVTDSfLvl/RvV/RGmWmnevx9f6pBHBz&#xA;4V48/TVeXHkaV8cVTDFXYqhdWu2stKvLxRya2gkmVfExoWp+GKu0ywSwsIbVCW9Nf3kh+08jHk8j&#xA;f5TsSx98VYTd2d5+YGqahZyymx8paRdPYyCFQLu/uYf7+k5HK3gjf4P3VJGYE81A3VS+2/LXU/JG&#xA;p3t/5FgSTS9RZZbzSRKsV2kiqFLQXFys6Sq/HkY5Sp5EkSAfDiqYf8rKvNPDfpjTb21CD4/rWn3c&#xA;QUDrW4s11G0Y/wDPRRirCND/ADg8lLc6haa/dyadpd5fXV8KxSSLcpJJ+6RvSDusXpqpaq/GTT7O&#xA;xytdqozlERBqMIxvzrf7dnJx6PihxCcLN+m6I/01A/Al6BafnL+X16OGj3dzq8qryEGmWF9dsB0+&#xA;L0YWCf7MimYgILVPFOP1AhL/ADDa+Z/zAtLfSjocmgaGbiC7m1XUni/SC/VpRIBZ20DymKRitBLI&#xA;6lQT8BwtbIPzH8xXHl/yy+oQQfWH9aGL0+ckZIdxXi0RV6+FDlGpymELDt+xNDHU6gQkeEUT0PIe&#xA;ezHvKGqRahZarqNsJFXTtcP1SWWaWcyW1x6XIj1GbiskM1Qo2rRuu+R02Tj4ve29uaTwDiB+o4xe&#xA;wFGyCNu6npGZLo3Yq7FXYq7FXYq7FXy5dgny/wDmbOdp9KvbNVjptU6zcuQ46/tYq9T8q+Q73/E3&#xA;k7zOOIsdO8s29g4Y0k9YR0X4aDqkpqfbFXo2maXp2l2i2enW0dpaozOsMShVDSMXY0HizE4qisVd&#xA;irsVdirsVdirsVdirsVdirsVdiqy4giuIJIJRyilVkkXxVhQj7sVS7Rb2QA6ZetTUbNQrFtvWiGy&#xA;Tp4hh9qn2WqPCqrHbvQ/NPlvWL3VvKsMOp6Xqkxu9U8vTOIJRcsoSSeynb92Gk4qXilopIJDKWOK&#xA;q8X5qeUYmWLW5J/Ldy23oa3C9ktSQPhuHrbSbmn7uVsVRdjqOn+baS2t3DcaClGEcUiublh0MgB+&#xA;GIdlP2+/w7MqyTFUm1vyj5V1jlNq2m208oG926BZlC7/AAzrxkWlOzZCWOMuYczT6/Ph2xzlEd17&#xA;fEciwvWb/wAuaG7R6Z+YjaZdFl46bczxaxVa04pbymS79vhfKzhI+mRH2/f+ty4dp45f32GE/OP7&#xA;uX+x9PzigPLmvfmPrWv3T6n5dGs+U5Xj9GWWD9H8WiAZLmC21BhMQ/cHau4I3BpgMpmRIAwdjqDo&#xA;I6aMsE549RvtuSQf4ZSiAPd5bSHdKkvfL0U0em2tmuj2NvPHNqbtEsMSyWyp6MJkjrFy+COvxbIt&#xA;O4zLjAR5Cnnc2oyZTc5GR8zfW/vJLL4Z4Z4xLDIssbfZdCGU/IjJNK/FXYq7FXYq7FXYq8P8j+Ur&#xA;fzBqX5saNdu0Eeo6rweePdgBcTyoQDtsWxV7XaW0draw2sVfSgjWJK7nigCj9WKquKuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxVCajplrfogmDLLEeUFxGSksTEU5I46e46HoQRiqCkvNY0uJpLxFv7O&#xA;JSz3cZSGZVG5aSNykZAHVlYf6uKpa2raXrNyE1GZbTS1IMNhdgwPdN1DyJKFrEP2UFeXVvDFURef&#xA;l9+X2pEzXXl3S7l3PL12tLdn5VryEnDkDXuDiqF/5VR+XgfnHosMJpQiBpYVNDXdY3UE++KrH/K/&#xA;8rLVTLceXNKK0AL3cEUq7bg/vgwrt164qj9OufKmmx+j5fsYmU7CPSrdfTNOxkjCwr/snGKoloNc&#xA;1Da4YaZZnrFC3O6YeDSj4IvfhyPgwxVMrSztrO3S3tY1igj+yiig3NSfck7k98VQ/wChdKF0LtLW&#xA;OK6BDGaIem7U7MycSw9m2xVG4q7FXYq7FXYq7FWMeUPKE2g6t5kvnmWVNcvzexItaopQAhq9+Rbp&#xA;2xVk+KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KrJ54beF553WKGJS8kjmiqo3JJOKpUlvNrEy&#xA;XN2hj0uMh7WzcFWlYbrLOp6AdUjPzbegVVN3RXUq4DKdipFQcVQDeXdAZi36Ntg53LrEit/wQAOK&#xA;tf4d0T/ljj+4/wBcVXw6BoUD+pDp1tHJ/OsMYb7wK4qjsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirTKrLxYBlPUHcYq3irsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVf/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:07801174072068119095CAD14CC33787</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:07801174072068119095CAD14CC33787</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D07F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:10+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T14:51:08-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T15:15:38-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0CC3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T17:07:17-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:03E540664A3DDD11BD33D3EB8D3A1068</stEvt:instanceID>
                  <stEvt:when>2008-06-18T22:24:35+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6D6AE2A5723EDD11A6F1BABF7C5A7A51</stEvt:instanceID>
                  <stEvt:when>2008-06-19T20:31:09-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BCE4CD276D42DD11A0BEF9B17C50C624</stEvt:instanceID>
                  <stEvt:when>2008-06-25T06:28:38+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E6A2668D200711689FE8CB9EA85C5459</stEvt:instanceID>
                  <stEvt:when>2008-06-26T05:52:17-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0F91C12D6B48DD1194DA8463B7D22218</stEvt:instanceID>
                  <stEvt:when>2008-07-02T12:20:06-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811ACAF9F0F41229DDF</stEvt:instanceID>
                  <stEvt:when>2008-07-21T13:59:19+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ED0DFC627ABDD6119286AC08E167C812</stEvt:instanceID>
                  <stEvt:when>2002-09-01T14:19:17+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:234F4C2C7BBDD6119286AC08E167C812</stEvt:instanceID>
                  <stEvt:when>2002-09-01T14:19:37+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:07801174072068119095CAD14CC33787</stEvt:instanceID>
                  <stEvt:when>2010-02-11T16:27:12+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:26839582-2c66-c849-8864-062ef6efdf17</stRef:instanceID>
            <stRef:documentID>xmp.did:234F4C2C7BBDD6119286AC08E167C812</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>251.286298</stDim:w>
            <stDim:h>195.113155</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica-Bold</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Bold</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>6.0d7e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.dfont</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Groupe de nuances par défaut</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Blanc</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Noir</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RVB Rouge</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RVB Jaune</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RVB Vert</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RVB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RVB Bleu</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RVB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 V=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 V=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 V=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 V=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 V=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 V=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 V=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 V=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 V=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 V=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 V=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 V=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 V=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 V=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 V=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 V=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 V=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 V=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 V=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 V=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 V=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 V=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 V=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 V=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 V=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 V=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 V=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 V=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 V=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 V=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 V=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 V=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Gris</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 V=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 V=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 V=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 V=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 V=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 V=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 V=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 V=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 V=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 V=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 V=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Eclaboussure</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=214 V=149 B=68</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>214</xmpG:red>
                           <xmpG:green>149</xmpG:green>
                           <xmpG:blue>68</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=71 V=152 B=237</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>71</xmpG:red>
                           <xmpG:green>152</xmpG:green>
                           <xmpG:blue>237</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=42 V=81 B=224</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>42</xmpG:red>
                           <xmpG:green>81</xmpG:green>
                           <xmpG:blue>224</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=180 V=58 B=228</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>180</xmpG:red>
                           <xmpG:green>58</xmpG:green>
                           <xmpG:blue>228</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -553.077 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 553.077 li
712.308 553.077 li
712.308 0 li
cp
clp
[1 0 0 1 0 0 ]ct
4 lw
0 lc
2 lj
1 ml
[] 0 dsh
true sadj
694.134 423.856 mo
694.28 423.856 li
694.416 423.856 li
694.488 423.856 li
694.63 423.856 li
694.771 423.856 li
694.913 423.856 li
695.054 423.856 li
695.195 423.856 li
695.337 423.856 li
695.478 423.856 li
695.619 423.856 li
695.761 423.856 li
695.901 423.856 li
696.043 423.856 li
696.185 423.856 li
696.325 423.856 li
696.467 423.856 li
696.608 423.856 li
696.749 423.856 li
696.891 423.856 li
697.032 423.856 li
697.105 423.856 li
697.241 423.856 li
697.389 423.856 li
697.524 423.856 li
697.671 423.856 li
697.807 423.856 li
697.953 423.856 li
698.089 423.856 li
698.236 423.856 li
698.372 423.856 li
698.519 423.856 li
698.654 423.856 li
698.801 423.856 li
698.937 423.856 li
699.084 423.856 li
699.22 423.856 li
699.366 423.856 li
699.502 423.856 li
699.575 423.856 li
699.716 423.856 li
699.857 423.856 li
699.999 423.856 li
700.14 423.856 li
700.281 423.856 li
700.423 423.856 li
700.563 423.856 li
700.705 423.856 li
700.847 423.856 li
556.806 423.997 mo
556.952 423.856 li
557.088 423.782 li
557.234 423.647 li
557.37 423.5 li
557.518 423.432 li
557.653 423.292 li
557.727 423.217 li
557.868 423.083 li
558.009 423.008 li
558.15 422.868 li
558.292 422.799 li
558.433 422.725 li
558.574 422.653 li
558.716 422.584 li
558.856 422.516 li
558.998 422.444 li
559.14 422.37 li
559.28 422.301 li
559.422 422.301 li
559.563 422.235 li
559.704 422.235 li
559.846 422.161 li
559.987 422.161 li
560.128 422.161 li
560.196 422.161 li
560.343 422.161 li
560.479 422.161 li
560.626 422.161 li
560.762 422.235 li
560.908 422.235 li
561.044 422.235 li
561.191 422.301 li
561.327 422.37 li
561.474 422.444 li
561.609 422.444 li
561.756 422.516 li
561.892 422.584 li
562.039 422.653 li
562.175 422.725 li
562.321 422.868 li
562.457 422.934 li
562.604 423.008 li
562.671 423.083 li
562.813 423.217 li
562.954 423.292 li
563.095 423.364 li
563.236 423.5 li
563.378 423.573 li
563.519 423.647 li
563.66 423.782 li
563.802 423.856 li
563.942 423.997 li
564.084 424.065 li
564.226 424.139 li
564.366 424.28 li
564.508 424.348 li
564.649 424.42 li
564.79 424.495 li
564.932 424.629 li
565.073 424.704 li
565.214 424.778 li
565.283 424.844 li
565.43 424.913 li
565.565 424.987 li
565.712 424.987 li
565.848 425.061 li
565.995 425.127 li
566.131 425.127 li
566.277 425.196 li
566.413 425.196 li
566.56 425.268 li
566.695 425.268 li
566.843 425.268 li
566.979 425.268 li
567.125 425.268 li
567.261 425.268 li
567.407 425.268 li
567.543 425.268 li
567.69 425.268 li
567.758 425.196 li
567.898 425.196 li
568.04 425.127 li
568.182 425.127 li
568.322 425.061 li
568.464 425.061 li
568.605 424.987 li
568.746 424.913 li
568.888 424.844 li
569.029 424.778 li
569.17 424.704 li
569.312 424.629 li
569.453 424.563 li
569.594 424.495 li
569.735 424.42 li
569.877 424.348 li
570.019 424.28 li
570.159 424.211 li
570.301 424.139 li
570.369 424.065 li
570.516 423.93 li
570.651 423.856 li
570.799 423.782 li
570.935 423.715 li
571.081 423.647 li
571.217 423.573 li
571.363 423.5 li
571.499 423.432 li
571.646 423.364 li
571.782 423.292 li
571.929 423.217 li
572.064 423.149 li
572.211 423.083 li
572.347 423.008 li
572.494 423.008 li
572.63 422.934 li
572.776 422.868 li
572.844 422.868 li
572.985 422.799 li
573.126 422.799 li
573.268 422.799 li
573.409 422.725 li
573.55 422.725 li
573.691 422.725 li
573.833 422.725 li
573.974 422.725 li
574.115 422.725 li
574.257 422.725 li
574.397 422.725 li
574.539 422.725 li
574.681 422.799 li
574.821 422.799 li
574.963 422.799 li
575.104 422.868 li
575.245 422.868 li
575.387 422.934 li
575.455 423.008 li
575.603 423.008 li
575.737 423.083 li
575.885 423.149 li
576.021 423.149 li
576.167 423.217 li
576.303 423.292 li
576.45 423.364 li
576.586 423.432 li
576.732 423.5 li
576.868 423.573 li
577.015 423.647 li
577.15 423.647 li
577.298 423.715 li
577.434 423.782 li
577.58 423.856 li
577.716 423.93 li
577.862 423.997 li
577.93 424.065 li
578.071 424.139 li
578.213 424.211 li
578.354 424.28 li
578.495 424.28 li
578.637 424.348 li
578.777 424.42 li
578.919 424.495 li
579.061 424.495 li
579.201 424.563 li
579.343 424.629 li
579.484 424.629 li
579.625 424.704 li
579.767 424.704 li
579.908 424.704 li
580.049 424.778 li
580.19 424.778 li
580.332 424.778 li
580.473 424.844 li
580.541 424.844 li
580.688 424.844 li
580.824 424.844 li
580.971 424.844 li
581.106 424.844 li
581.253 424.844 li
581.39 424.778 li
581.536 424.778 li
581.672 424.778 li
581.818 424.704 li
581.954 424.704 li
582.101 424.704 li
582.237 424.629 li
582.384 424.629 li
582.52 424.563 li
582.666 424.563 li
582.802 424.495 li
582.949 424.42 li
583.017 424.42 li
583.157 424.348 li
583.299 424.28 li
583.44 424.28 li
583.581 424.211 li
583.723 424.139 li
583.864 424.065 li
584.005 424.065 li
584.146 423.997 li
584.288 423.93 li
584.429 423.856 li
584.57 423.856 li
584.712 423.782 li
584.853 423.715 li
584.994 423.647 li
585.136 423.647 li
585.276 423.573 li
585.418 423.5 li
585.492 423.5 li
585.628 423.432 li
585.774 423.364 li
585.91 423.364 li
586.057 423.292 li
586.192 423.292 li
586.34 423.217 li
586.476 423.217 li
586.622 423.217 li
586.758 423.149 li
586.904 423.149 li
587.04 423.149 li
587.188 423.149 li
587.323 423.083 li
587.47 423.083 li
587.605 423.083 li
587.753 423.083 li
587.888 423.083 li
588.035 423.083 li
588.103 423.083 li
588.243 423.149 li
588.385 423.149 li
588.526 423.149 li
588.667 423.149 li
588.809 423.217 li
588.95 423.217 li
589.091 423.217 li
589.232 423.292 li
589.374 423.292 li
589.515 423.364 li
589.656 423.364 li
589.798 423.432 li
589.938 423.432 li
590.08 423.5 li
590.222 423.5 li
590.363 423.573 li
590.504 423.647 li
590.578 423.647 li
590.714 423.715 li
590.86 423.715 li
590.996 423.782 li
591.144 423.856 li
591.279 423.856 li
591.426 423.93 li
591.562 423.997 li
591.708 423.997 li
591.844 424.065 li
591.991 424.065 li
592.127 424.139 li
592.273 424.139 li
592.409 424.211 li
592.556 424.211 li
592.691 424.28 li
592.839 424.28 li
592.975 424.348 li
593.121 424.348 li
593.188 424.42 li
593.33 424.42 li
593.471 424.42 li
593.612 424.42 li
593.754 424.495 li
593.895 424.495 li
594.036 424.495 li
594.178 424.495 li
594.318 424.495 li
594.46 424.495 li
594.602 424.495 li
594.742 424.495 li
594.884 424.495 li
595.025 424.495 li
595.167 424.495 li
595.308 424.495 li
595.449 424.495 li
595.591 424.42 li
595.664 424.42 li
595.8 424.42 li
595.947 424.42 li
596.083 424.348 li
596.229 424.348 li
596.365 424.348 li
596.512 424.28 li
596.647 424.28 li
596.795 424.211 li
596.931 424.211 li
597.077 424.139 li
597.213 424.139 li
597.359 424.065 li
597.495 424.065 li
597.643 423.997 li
597.778 423.997 li
597.925 423.93 li
598.061 423.93 li
598.207 423.856 li
598.274 423.856 li
598.416 423.782 li
598.558 423.782 li
598.698 423.715 li
598.84 423.715 li
598.981 423.647 li
599.122 423.647 li
599.264 423.573 li
599.405 423.573 li
599.546 423.573 li
599.688 423.5 li
599.829 423.5 li
599.97 423.5 li
600.111 423.432 li
600.253 423.432 li
600.394 423.432 li
600.535 423.432 li
600.677 423.364 li
600.751 423.364 li
600.886 423.364 li
601.033 423.364 li
601.169 423.364 li
601.315 423.364 li
601.451 423.364 li
601.599 423.364 li
601.734 423.364 li
601.881 423.364 li
602.017 423.364 li
602.163 423.364 li
602.299 423.364 li
602.446 423.432 li
602.582 423.432 li
602.729 423.432 li
602.864 423.432 li
603.011 423.5 li
603.146 423.5 li
603.294 423.5 li
603.361 423.573 li
603.502 423.573 li
603.644 423.573 li
603.785 423.647 li
603.926 423.647 li
604.067 423.647 li
604.209 423.715 li
604.35 423.715 li
604.491 423.782 li
604.633 423.782 li
604.773 423.782 li
604.915 423.856 li
605.057 423.856 li
605.197 423.93 li
605.339 423.93 li
605.48 423.997 li
605.621 423.997 li
605.763 423.997 li
605.837 424.065 li
605.973 424.065 li
606.119 424.065 li
606.255 424.139 li
606.401 424.139 li
606.538 424.139 li
606.685 424.211 li
606.82 424.211 li
606.967 424.211 li
607.103 424.211 li
607.249 424.28 li
607.386 424.28 li
607.532 424.28 li
607.668 424.28 li
607.814 424.28 li
607.95 424.28 li
608.098 424.28 li
608.233 424.28 li
608.306 424.28 li
608.447 424.28 li
608.589 424.28 li
608.729 424.28 li
608.871 424.28 li
609.013 424.28 li
609.153 424.28 li
609.295 424.28 li
609.437 424.28 li
609.577 424.211 li
609.719 424.211 li
609.86 424.211 li
610.001 424.211 li
610.143 424.139 li
610.284 424.139 li
610.425 424.139 li
610.566 424.139 li
610.708 424.065 li
610.849 424.065 li
610.923 424.065 li
611.059 423.997 li
611.205 423.997 li
611.341 423.997 li
611.488 423.93 li
611.624 423.93 li
611.771 423.93 li
611.906 423.856 li
612.053 423.856 li
612.188 423.856 li
612.336 423.782 li
612.472 423.782 li
612.618 423.782 li
612.754 423.715 li
612.901 423.715 li
613.036 423.715 li
613.184 423.647 li
613.319 423.647 li
613.392 423.647 li
613.533 423.647 li
613.675 423.647 li
613.815 423.573 li
613.957 423.573 li
614.099 423.573 li
614.239 423.573 li
614.381 423.573 li
614.522 423.573 li
614.663 423.573 li
614.805 423.5 li
614.946 423.5 li
615.087 423.5 li
615.229 423.5 li
615.37 423.5 li
615.512 423.5 li
615.652 423.5 li
615.794 423.573 li
615.936 423.573 li
616.009 423.573 li
616.145 423.573 li
616.292 423.573 li
616.428 423.573 li
616.574 423.573 li
616.71 423.573 li
616.856 423.647 li
616.992 423.647 li
617.14 423.647 li
617.275 423.647 li
617.422 423.715 li
617.558 423.715 li
617.704 423.715 li
617.84 423.715 li
617.987 423.782 li
618.123 423.782 li
618.27 423.782 li
618.405 423.782 li
618.479 423.856 li
618.619 423.856 li
618.761 423.856 li
618.902 423.93 li
619.043 423.93 li
619.185 423.93 li
619.326 423.93 li
619.467 423.997 li
619.608 423.997 li
619.75 423.997 li
619.892 423.997 li
620.032 424.065 li
620.174 424.065 li
620.315 424.065 li
620.456 424.065 li
620.598 424.065 li
620.739 424.139 li
620.88 424.139 li
621.021 424.139 li
621.096 424.139 li
621.231 424.139 li
621.378 424.139 li
621.514 424.139 li
621.66 424.139 li
621.796 424.139 li
621.943 424.139 li
622.079 424.139 li
622.226 424.139 li
622.361 424.139 li
622.508 424.139 li
622.644 424.139 li
622.791 424.139 li
622.927 424.139 li
623.073 424.139 li
623.209 424.139 li
623.355 424.139 li
623.491 424.139 li
623.564 424.065 li
623.706 424.065 li
623.847 424.065 li
623.988 424.065 li
624.13 424.065 li
624.271 424.065 li
624.412 423.997 li
624.554 423.997 li
624.694 423.997 li
624.836 423.997 li
624.978 423.93 li
625.118 423.93 li
625.26 423.93 li
625.401 423.93 li
625.542 423.93 li
625.684 423.856 li
625.825 423.856 li
625.966 423.856 li
626.034 423.856 li
626.182 423.782 li
626.317 423.782 li
626.464 423.782 li
626.6 423.782 li
626.747 423.782 li
626.883 423.715 li
627.029 423.715 li
627.165 423.715 li
627.312 423.715 li
627.447 423.715 li
627.595 423.715 li
627.73 423.715 li
627.877 423.647 li
628.013 423.647 li
628.159 423.647 li
628.295 423.647 li
628.442 423.647 li
628.578 423.647 li
628.65 423.647 li
628.792 423.647 li
628.934 423.647 li
629.074 423.647 li
629.216 423.647 li
629.357 423.647 li
629.498 423.647 li
629.64 423.647 li
629.781 423.647 li
629.922 423.647 li
630.063 423.647 li
630.205 423.647 li
630.346 423.715 li
630.487 423.715 li
630.629 423.715 li
630.77 423.715 li
630.911 423.715 li
631.053 423.715 li
631.121 423.715 li
631.268 423.782 li
631.403 423.782 li
631.55 423.782 li
631.687 423.782 li
631.833 423.782 li
631.969 423.856 li
632.115 423.856 li
632.251 423.856 li
632.397 423.856 li
632.534 423.856 li
632.681 423.856 li
632.816 423.93 li
632.963 423.93 li
633.099 423.93 li
633.246 423.93 li
633.382 423.93 li
633.528 423.997 li
633.664 423.997 li
633.737 423.997 li
633.878 423.997 li
634.02 423.997 li
634.161 423.997 li
634.302 423.997 li
634.443 423.997 li
634.585 424.065 li
634.726 424.065 li
634.867 424.065 li
635.009 424.065 li
635.149 424.065 li
635.291 424.065 li
635.433 424.065 li
635.573 424.065 li
635.715 424.065 li
635.856 424.065 li
635.997 424.065 li
636.139 424.065 li
636.207 424.065 li
636.354 424.065 li
636.489 424.065 li
636.637 424.065 li
636.772 424.065 li
636.919 424.065 li
637.055 424.065 li
637.201 424.065 li
637.337 423.997 li
637.484 423.997 li
637.62 423.997 li
637.767 423.997 li
637.902 423.997 li
638.05 423.997 li
638.185 423.997 li
638.332 423.997 li
638.468 423.93 li
638.614 423.93 li
638.75 423.93 li
638.823 423.93 li
638.964 423.93 li
639.105 423.93 li
639.247 423.856 li
639.388 423.856 li
639.529 423.856 li
639.671 423.856 li
639.812 423.856 li
639.953 423.856 li
640.095 423.856 li
640.235 423.782 li
640.377 423.782 li
640.519 423.782 li
640.66 423.782 li
640.801 423.782 li
640.942 423.782 li
641.084 423.782 li
641.225 423.782 li
641.293 423.782 li
641.44 423.715 li
641.576 423.715 li
641.723 423.715 li
641.858 423.715 li
642.005 423.715 li
642.141 423.715 li
642.288 423.715 li
642.424 423.715 li
642.57 423.715 li
642.706 423.715 li
642.853 423.715 li
642.988 423.715 li
643.136 423.715 li
643.271 423.715 li
643.418 423.715 li
643.554 423.715 li
643.7 423.715 li
643.837 423.715 li
643.909 423.715 li
644.051 423.715 li
644.191 423.782 li
644.333 423.782 li
644.475 423.782 li
644.615 423.782 li
644.757 423.782 li
644.898 423.782 li
645.04 423.782 li
645.181 423.782 li
645.322 423.782 li
645.464 423.856 li
645.604 423.856 li
645.746 423.856 li
645.888 423.856 li
646.028 423.856 li
646.17 423.856 li
646.312 423.856 li
646.38 423.856 li
646.526 423.93 li
646.662 423.93 li
646.809 423.93 li
646.944 423.93 li
647.092 423.93 li
647.228 423.93 li
647.374 423.93 li
647.51 423.93 li
647.656 423.93 li
647.792 423.997 li
647.939 423.997 li
648.075 423.997 li
648.222 423.997 li
648.357 423.997 li
648.504 423.997 li
648.64 423.997 li
648.787 423.997 li
648.854 423.997 li
648.995 423.997 li
649.137 423.997 li
649.278 423.997 li
649.419 423.997 li
649.561 423.997 li
649.702 423.997 li
649.843 423.997 li
649.984 423.997 li
650.126 423.997 li
650.267 423.997 li
650.408 423.997 li
650.55 423.997 li
650.69 423.997 li
650.832 423.997 li
650.974 423.997 li
651.114 423.997 li
651.256 423.997 li
651.397 423.997 li
651.466 423.93 li
651.612 423.93 li
651.748 423.93 li
651.896 423.93 li
652.031 423.93 li
652.178 423.93 li
652.313 423.93 li
652.46 423.93 li
652.596 423.93 li
652.743 423.93 li
652.879 423.93 li
653.025 423.856 li
653.161 423.856 li
653.308 423.856 li
653.443 423.856 li
653.591 423.856 li
653.727 423.856 li
653.873 423.856 li
653.94 423.856 li
654.082 423.856 li
654.223 423.856 li
654.364 423.782 li
654.506 423.782 li
654.646 423.782 li
654.788 423.782 li
654.93 423.782 li
655.07 423.782 li
655.212 423.782 li
655.354 423.782 li
655.494 423.782 li
655.636 423.782 li
655.777 423.782 li
655.918 423.782 li
656.06 423.782 li
656.201 423.782 li
656.342 423.782 li
656.483 423.782 li
656.552 423.782 li
656.698 423.782 li
656.835 423.782 li
656.981 423.782 li
657.117 423.782 li
657.264 423.782 li
657.399 423.782 li
657.546 423.782 li
657.683 423.782 li
657.829 423.782 li
657.965 423.782 li
658.111 423.782 li
658.247 423.782 li
658.395 423.782 li
658.53 423.782 li
658.677 423.782 li
658.813 423.856 li
658.959 423.856 li
659.026 423.856 li
659.168 423.856 li
659.31 423.856 li
659.45 423.856 li
659.592 423.856 li
659.733 423.856 li
659.874 423.856 li
660.016 423.856 li
660.157 423.856 li
660.298 423.856 li
660.439 423.93 li
660.581 423.93 li
660.722 423.93 li
660.863 423.93 li
661.005 423.93 li
661.146 423.93 li
661.287 423.93 li
661.429 423.93 li
661.569 423.93 li
661.638 423.93 li
661.785 423.93 li
661.921 423.93 li
662.067 423.93 li
662.203 423.93 li
662.35 423.93 li
662.485 423.93 li
662.633 423.93 li
662.769 423.93 li
662.915 423.93 li
663.051 423.997 li
663.198 423.997 li
663.333 423.997 li
663.48 423.997 li
663.616 423.997 li
663.763 423.93 li
663.898 423.93 li
664.046 423.93 li
664.112 423.93 li
664.254 423.93 li
664.396 423.93 li
664.536 423.93 li
664.678 423.93 li
664.819 423.93 li
664.96 423.93 li
665.102 423.93 li
665.243 423.93 li
665.385 423.93 li
665.525 423.93 li
665.667 423.93 li
665.809 423.93 li
665.949 423.93 li
666.091 423.93 li
666.232 423.93 li
666.373 423.93 li
666.515 423.93 li
666.656 423.856 li
666.725 423.856 li
666.871 423.856 li
667.007 423.856 li
667.153 423.856 li
667.289 423.856 li
667.437 423.856 li
667.572 423.856 li
667.719 423.856 li
667.854 423.856 li
668.001 423.856 li
668.137 423.856 li
668.284 423.856 li
668.42 423.856 li
668.566 423.856 li
668.702 423.856 li
668.849 423.782 li
668.985 423.782 li
669.132 423.782 li
669.199 423.782 li
669.34 423.782 li
669.481 423.782 li
669.623 423.782 li
669.764 423.782 li
669.905 423.782 li
670.047 423.782 li
670.188 423.782 li
670.329 423.782 li
670.471 423.782 li
670.612 423.782 li
670.753 423.782 li
670.895 423.782 li
671.036 423.782 li
671.177 423.782 li
671.318 423.782 li
671.46 423.782 li
671.601 423.782 li
671.675 423.856 li
671.811 423.856 li
671.957 423.856 li
672.093 423.856 li
672.24 423.856 li
672.376 423.856 li
672.522 423.856 li
672.658 423.856 li
672.805 423.856 li
672.94 423.856 li
673.088 423.856 li
673.224 423.856 li
673.37 423.856 li
673.506 423.856 li
673.652 423.856 li
673.788 423.856 li
673.936 423.856 li
674.071 423.856 li
674.218 423.856 li
674.285 423.93 li
674.427 423.93 li
674.567 423.93 li
674.709 423.93 li
674.851 423.93 li
674.991 423.93 li
675.133 423.93 li
675.274 423.93 li
675.415 423.93 li
675.557 423.93 li
675.698 423.93 li
675.839 423.93 li
675.98 423.93 li
676.122 423.93 li
676.263 423.93 li
676.404 423.93 li
676.546 423.93 li
676.687 423.93 li
676.761 423.93 li
676.896 423.93 li
677.044 423.93 li
677.18 423.93 li
677.326 423.93 li
677.462 423.93 li
677.608 423.93 li
677.744 423.93 li
677.892 423.93 li
678.027 423.93 li
678.174 423.93 li
678.31 423.93 li
678.456 423.93 li
678.592 423.93 li
678.739 423.93 li
678.875 423.93 li
679.021 423.93 li
679.157 423.93 li
679.304 423.93 li
679.371 423.93 li
679.513 423.93 li
679.654 423.93 li
679.795 423.93 li
679.937 423.93 li
680.078 423.856 li
680.219 423.856 li
680.36 423.856 li
680.502 423.856 li
680.643 423.856 li
680.784 423.856 li
680.926 423.856 li
681.066 423.856 li
681.208 423.856 li
681.35 423.856 li
681.49 423.856 li
681.632 423.856 li
681.773 423.856 li
681.847 423.856 li
681.983 423.856 li
682.13 423.856 li
682.266 423.856 li
682.412 423.856 li
682.548 423.856 li
682.694 423.856 li
682.831 423.856 li
682.978 423.856 li
683.113 423.856 li
683.26 423.856 li
683.396 423.856 li
683.543 423.856 li
683.679 423.856 li
683.825 423.856 li
683.961 423.856 li
684.107 423.856 li
684.243 423.856 li
684.391 423.856 li
684.458 423.856 li
684.599 423.856 li
684.74 423.856 li
684.882 423.856 li
685.022 423.856 li
685.164 423.856 li
685.306 423.856 li
685.446 423.856 li
685.588 423.856 li
685.729 423.856 li
685.87 423.856 li
686.012 423.856 li
686.153 423.856 li
686.294 423.856 li
686.436 423.856 li
686.577 423.856 li
686.718 423.856 li
686.859 423.856 li
686.934 423.856 li
687.069 423.856 li
687.216 423.856 li
687.352 423.856 li
687.498 423.856 li
687.634 423.856 li
687.781 423.856 li
687.917 423.856 li
688.063 423.856 li
688.199 423.856 li
688.347 423.93 li
688.481 423.93 li
688.629 423.93 li
688.765 423.93 li
688.911 423.93 li
689.047 423.93 li
689.194 423.93 li
689.33 423.93 li
689.477 423.93 li
689.544 423.93 li
689.685 423.93 li
689.826 423.93 li
689.968 423.93 li
690.108 423.93 li
690.25 423.93 li
690.392 423.93 li
690.533 423.93 li
690.674 423.93 li
690.815 423.93 li
690.957 423.93 li
691.098 423.93 li
691.239 423.93 li
691.381 423.93 li
691.521 423.93 li
691.663 423.93 li
691.805 423.93 li
691.945 423.93 li
692.02 423.93 li
692.155 423.93 li
692.302 423.93 li
692.438 423.93 li
692.585 423.93 li
692.721 423.93 li
692.867 423.93 li
693.003 423.93 li
693.149 423.93 li
693.285 423.93 li
693.433 423.93 li
693.568 423.856 li
693.715 423.856 li
693.851 423.856 li
693.997 423.856 li
694.134 423.856 li
419.478 423.856 mo
419.625 417.358 li
419.761 410.932 li
419.907 404.569 li
420.043 398.352 li
420.19 392.282 li
420.325 386.417 li
420.473 380.696 li
420.608 375.254 li
420.755 369.959 li
420.823 365.008 li
420.964 360.278 li
421.105 355.831 li
421.247 351.729 li
421.388 347.918 li
421.529 344.456 li
421.671 341.274 li
421.812 338.52 li
421.953 336.12 li
422.095 334 li
422.235 332.305 li
422.377 331.034 li
422.519 330.118 li
422.659 329.551 li
422.801 329.338 li
422.942 329.551 li
423.083 330.118 li
423.225 331.034 li
423.298 332.305 li
423.434 333.926 li
423.581 335.905 li
423.716 338.239 li
423.863 340.854 li
423.999 343.817 li
424.146 346.999 li
424.281 350.53 li
424.429 354.344 li
424.564 358.301 li
424.711 362.54 li
424.847 366.987 li
424.993 371.655 li
425.129 376.458 li
425.276 381.397 li
425.412 386.483 li
425.559 391.717 li
425.694 396.938 li
425.842 402.307 li
425.909 407.676 li
426.05 413.118 li
426.191 418.487 li
426.333 423.856 li
426.474 429.225 li
426.615 434.52 li
426.757 439.68 li
426.897 444.766 li
427.039 449.711 li
427.181 454.583 li
427.322 459.25 li
427.463 463.698 li
427.604 468.01 li
427.746 472.1 li
427.887 475.922 li
428.028 479.596 li
428.17 482.987 li
428.311 486.094 li
428.385 488.92 li
428.52 491.463 li
428.667 493.792 li
428.803 495.77 li
428.949 497.465 li
429.085 498.811 li
429.232 499.94 li
429.368 500.641 li
429.515 501.137 li
429.65 501.28 li
429.797 501.137 li
429.933 500.641 li
430.08 499.94 li
430.216 498.877 li
430.362 497.532 li
430.498 495.911 li
430.646 494.006 li
430.78 491.813 li
430.854 489.411 li
430.995 486.795 li
431.137 483.901 li
431.277 480.86 li
431.419 477.543 li
431.561 474.079 li
431.701 470.405 li
431.843 466.665 li
431.984 462.709 li
432.125 458.612 li
432.267 454.514 li
432.408 450.209 li
432.55 445.897 li
432.69 441.516 li
432.832 437.137 li
432.974 432.69 li
433.114 428.303 li
433.256 423.856 li
433.397 419.477 li
433.471 415.17 li
433.606 410.932 li
433.753 406.76 li
433.889 402.737 li
434.036 398.782 li
434.171 394.961 li
434.318 391.288 li
434.454 387.76 li
434.601 384.438 li
434.736 381.262 li
434.884 378.29 li
435.019 375.538 li
435.166 372.92 li
435.302 370.592 li
435.448 368.545 li
435.584 366.637 li
435.731 365.008 li
435.866 363.668 li
435.94 362.54 li
436.081 361.618 li
436.223 360.985 li
436.364 360.635 li
436.505 360.487 li
436.646 360.635 li
436.788 360.985 li
436.929 361.618 li
437.07 362.465 li
437.212 363.596 li
437.353 364.94 li
437.494 366.495 li
437.636 368.264 li
437.776 370.168 li
437.918 372.356 li
438.06 374.69 li
438.2 377.233 li
438.342 379.917 li
438.483 382.743 li
438.557 385.784 li
438.692 388.891 li
438.84 392.067 li
438.975 395.391 li
439.122 398.848 li
439.258 402.307 li
439.404 405.844 li
439.54 409.446 li
439.688 413.045 li
439.822 416.651 li
439.97 420.256 li
440.105 423.856 li
440.252 427.456 li
440.388 430.995 li
440.535 434.452 li
440.67 437.911 li
440.817 441.233 li
440.953 444.409 li
441.026 447.592 li
441.168 450.559 li
441.309 453.452 li
441.45 456.209 li
441.592 458.752 li
441.732 461.229 li
441.874 463.489 li
442.016 465.534 li
442.156 467.446 li
442.298 469.208 li
442.439 470.762 li
442.58 472.034 li
442.722 473.165 li
442.863 474.079 li
443.004 474.86 li
443.146 475.358 li
443.287 475.639 li
443.428 475.774 li
443.569 475.639 li
443.644 475.358 li
443.778 474.86 li
443.926 474.153 li
444.062 473.231 li
444.208 472.174 li
444.344 470.903 li
444.491 469.422 li
444.626 467.795 li
444.773 466.032 li
444.909 464.122 li
445.056 462.077 li
445.191 459.883 li
445.339 457.555 li
445.474 455.081 li
445.621 452.536 li
445.757 449.926 li
445.903 447.168 li
446.039 444.409 li
446.112 441.516 li
446.254 438.624 li
446.396 435.723 li
446.536 432.756 li
446.678 429.79 li
446.819 426.823 li
446.96 423.856 li
447.102 420.958 li
447.243 418.063 li
447.384 415.237 li
447.525 412.413 li
447.667 409.655 li
447.808 407.043 li
447.949 404.5 li
448.091 402.026 li
448.231 399.629 li
448.373 397.436 li
448.515 395.317 li
448.655 393.338 li
448.729 391.434 li
448.864 389.739 li
449.012 388.178 li
449.147 386.766 li
449.294 385.5 li
449.43 384.438 li
449.577 383.522 li
449.713 382.743 li
449.859 382.178 li
449.995 381.754 li
450.142 381.471 li
450.277 381.397 li
450.425 381.471 li
450.561 381.754 li
450.707 382.178 li
450.843 382.743 li
450.99 383.45 li
451.125 384.37 li
451.198 385.426 li
451.34 386.557 li
451.481 387.897 li
451.622 389.383 li
451.764 390.936 li
451.905 392.633 li
452.046 394.395 li
452.188 396.305 li
452.329 398.352 li
452.471 400.403 li
452.611 402.59 li
452.753 404.784 li
452.895 407.112 li
453.035 409.446 li
453.177 411.78 li
453.318 414.176 li
453.459 416.583 li
453.601 419.053 li
453.668 421.454 li
453.815 423.856 li
453.951 426.258 li
454.098 428.659 li
454.233 430.995 li
454.381 433.254 li
454.517 435.516 li
454.663 437.627 li
454.799 439.754 li
454.945 441.799 li
455.081 443.709 li
455.229 445.54 li
455.364 447.309 li
455.511 448.93 li
455.646 450.417 li
455.794 451.831 li
455.929 453.102 li
456.076 454.233 li
456.212 455.295 li
456.285 456.143 li
456.426 456.917 li
456.567 457.555 li
456.709 458.047 li
456.85 458.403 li
456.991 458.612 li
457.133 458.686 li
457.274 458.612 li
457.415 458.403 li
457.557 458.047 li
457.698 457.555 li
457.839 456.991 li
457.98 456.209 li
458.122 455.362 li
458.263 454.448 li
458.404 453.317 li
458.546 452.112 li
458.687 450.84 li
458.755 449.497 li
458.901 448.016 li
459.037 446.461 li
459.185 444.766 li
459.319 443.071 li
459.467 441.301 li
459.603 439.471 li
459.749 437.627 li
459.885 435.723 li
460.032 433.747 li
460.167 431.842 li
460.314 429.864 li
460.45 427.811 li
460.597 425.834 li
460.732 423.856 li
460.88 421.877 li
461.015 419.973 li
461.162 418.063 li
461.298 416.153 li
461.371 414.389 li
461.513 412.627 li
461.653 410.858 li
461.795 409.237 li
461.937 407.676 li
462.077 406.127 li
462.219 404.715 li
462.36 403.37 li
462.501 402.172 li
462.643 400.967 li
462.784 399.979 li
462.925 398.991 li
463.066 398.143 li
463.208 397.436 li
463.349 396.803 li
463.49 396.305 li
463.632 395.881 li
463.772 395.6 li
463.841 395.458 li
463.988 395.391 li
464.123 395.458 li
464.271 395.6 li
464.406 395.881 li
464.553 396.305 li
464.688 396.803 li
464.836 397.368 li
464.971 398.069 li
465.118 398.848 li
465.254 399.764 li
465.4 400.758 li
465.536 401.815 li
465.684 402.946 li
465.818 404.149 li
465.966 405.417 li
466.102 406.76 li
466.248 408.174 li
466.384 409.586 li
466.457 411.067 li
466.599 412.627 li
466.74 414.176 li
466.881 415.803 li
467.022 417.358 li
467.164 418.979 li
467.305 420.606 li
467.446 422.235 li
467.588 423.856 li
467.729 425.477 li
467.87 427.106 li
468.012 428.659 li
468.152 430.147 li
468.294 431.694 li
468.436 433.106 li
468.576 434.52 li
468.718 435.866 li
468.859 437.137 li
468.927 438.409 li
469.074 439.538 li
469.21 440.668 li
469.356 441.659 li
469.492 442.579 li
469.64 443.495 li
469.774 444.274 li
469.922 444.907 li
470.058 445.54 li
470.204 446.038 li
470.34 446.461 li
470.487 446.745 li
470.622 447.026 li
470.77 447.168 li
470.905 447.168 li
471.052 447.168 li
471.188 447.026 li
471.335 446.745 li
471.47 446.461 li
471.544 446.038 li
471.685 445.54 li
471.826 444.975 li
471.968 444.342 li
472.108 443.635 li
472.25 442.862 li
472.392 441.94 li
472.532 441.018 li
472.674 440.036 li
472.815 438.973 li
472.956 437.911 li
473.098 436.78 li
473.239 435.583 li
473.38 434.385 li
473.521 433.106 li
473.663 431.842 li
473.804 430.497 li
473.945 429.225 li
474.013 427.885 li
474.16 426.54 li
474.296 425.196 li
474.442 423.856 li
474.578 422.584 li
474.726 421.239 li
474.861 419.973 li
475.008 418.696 li
475.144 417.499 li
475.29 416.299 li
475.426 415.17 li
475.573 414.04 li
475.709 412.977 li
475.855 411.989 li
475.991 411.067 li
476.139 410.151 li
476.273 409.303 li
476.421 408.524 li
476.488 407.823 li
476.63 407.184 li
476.771 406.62 li
476.912 406.127 li
477.054 405.698 li
477.194 405.417 li
477.336 405.133 li
477.478 404.924 li
477.619 404.85 li
477.76 404.784 li
477.901 404.85 li
478.043 404.924 li
478.184 405.133 li
478.325 405.417 li
478.467 405.698 li
478.607 406.127 li
478.749 406.62 li
478.891 407.112 li
479.031 407.676 li
479.1 408.389 li
479.246 409.088 li
479.382 409.801 li
479.529 410.649 li
479.665 411.497 li
479.812 412.413 li
479.947 413.329 li
480.094 414.323 li
480.229 415.305 li
480.377 416.299 li
480.513 417.358 li
480.659 418.415 li
480.795 419.543 li
480.942 420.606 li
481.077 421.668 li
481.225 422.799 li
481.36 423.856 li
481.507 424.987 li
481.574 426.043 li
481.716 427.038 li
481.857 428.094 li
481.998 429.084 li
482.14 430.073 li
482.281 430.995 li
482.423 431.909 li
482.563 432.756 li
482.705 433.604 li
482.847 434.385 li
482.987 435.084 li
483.129 435.797 li
483.271 436.43 li
483.411 436.995 li
483.553 437.561 li
483.694 437.985 li
483.835 438.409 li
483.977 438.758 li
484.118 439.042 li
484.186 439.256 li
484.333 439.397 li
484.468 439.471 li
484.615 439.538 li
484.751 439.471 li
484.897 439.397 li
485.033 439.256 li
485.181 439.042 li
485.315 438.758 li
485.463 438.409 li
485.599 438.059 li
485.745 437.627 li
485.881 437.137 li
486.028 436.571 li
486.163 436.006 li
486.311 435.368 li
486.446 434.735 li
486.593 434.028 li
486.661 433.254 li
486.802 432.542 li
486.943 431.694 li
487.085 430.92 li
487.226 430.073 li
487.367 429.225 li
487.509 428.303 li
487.649 427.456 li
487.791 426.54 li
487.933 425.692 li
488.073 424.778 li
488.215 423.856 li
488.356 423.008 li
488.497 422.086 li
488.639 421.239 li
488.78 420.391 li
488.921 419.618 li
489.063 418.842 li
489.204 418.063 li
489.271 417.284 li
489.419 416.583 li
489.555 415.872 li
489.701 415.237 li
489.837 414.672 li
489.984 414.108 li
490.119 413.61 li
490.267 413.118 li
490.402 412.694 li
490.549 412.344 li
490.685 411.989 li
490.832 411.706 li
490.967 411.497 li
491.114 411.282 li
491.25 411.213 li
491.396 411.141 li
491.532 411.067 li
491.68 411.141 li
491.747 411.213 li
491.889 411.282 li
492.029 411.497 li
492.171 411.706 li
492.313 411.989 li
492.453 412.27 li
492.595 412.627 li
492.736 413.045 li
492.877 413.475 li
493.019 413.965 li
493.16 414.458 li
493.301 415.024 li
493.442 415.588 li
493.584 416.153 li
493.725 416.792 li
493.866 417.43 li
494.008 418.131 li
494.148 418.842 li
494.29 419.543 li
494.358 420.256 li
494.505 420.958 li
494.641 421.668 li
494.788 422.444 li
494.923 423.149 li
495.07 423.856 li
495.206 424.629 li
495.353 425.342 li
495.488 426.043 li
495.636 426.682 li
495.771 427.387 li
495.918 428.02 li
496.054 428.659 li
496.2 429.299 li
496.336 429.864 li
496.483 430.428 li
496.618 430.92 li
496.766 431.411 li
496.833 431.842 li
496.975 432.258 li
497.116 432.69 li
497.257 433.04 li
497.398 433.323 li
497.54 433.604 li
497.681 433.819 li
497.822 434.028 li
497.964 434.17 li
498.104 434.237 li
498.246 434.311 li
498.388 434.385 li
498.528 434.311 li
498.67 434.237 li
498.812 434.17 li
498.952 434.028 li
499.094 433.819 li
499.235 433.604 li
499.309 433.389 li
499.444 433.106 li
499.591 432.756 li
499.727 432.407 li
499.874 431.977 li
500.01 431.559 li
500.156 431.129 li
500.292 430.637 li
500.438 430.147 li
500.574 429.649 li
500.722 429.151 li
500.857 428.586 li
501.004 428.02 li
501.14 427.456 li
501.287 426.891 li
501.422 426.258 li
501.569 425.692 li
501.705 425.061 li
501.852 424.495 li
501.919 423.856 li
502.061 423.292 li
502.202 422.725 li
502.343 422.161 li
502.484 421.596 li
502.626 421.03 li
502.768 420.465 li
502.908 419.973 li
503.05 419.477 li
503.191 418.979 li
503.332 418.561 li
503.474 418.131 li
503.615 417.713 li
503.756 417.358 li
503.897 417 li
504.039 416.651 li
504.18 416.368 li
504.321 416.153 li
504.396 415.944 li
504.53 415.735 li
504.678 415.588 li
504.813 415.452 li
504.96 415.379 li
505.096 415.305 li
505.243 415.305 li
505.378 415.305 li
505.525 415.379 li
505.661 415.452 li
505.808 415.588 li
505.943 415.735 li
506.091 415.872 li
506.226 416.084 li
506.373 416.368 li
506.509 416.583 li
506.655 416.934 li
506.791 417.215 li
506.938 417.567 li
507.006 417.922 li
507.146 418.346 li
507.288 418.696 li
507.43 419.125 li
507.571 419.543 li
507.712 420.042 li
507.854 420.465 li
507.995 420.958 li
508.136 421.454 li
508.277 421.952 li
508.419 422.444 li
508.56 422.868 li
508.701 423.364 li
508.843 423.856 li
508.983 424.348 li
509.125 424.844 li
509.267 425.342 li
509.407 425.76 li
509.481 426.258 li
509.616 426.682 li
509.764 427.106 li
509.899 427.456 li
510.047 427.885 li
510.182 428.235 li
510.329 428.586 li
510.464 428.942 li
510.611 429.225 li
510.747 429.508 li
510.895 429.79 li
511.029 429.999 li
511.177 430.213 li
511.312 430.428 li
511.459 430.563 li
511.595 430.711 li
511.742 430.78 li
511.877 430.846 li
512.024 430.92 li
512.092 430.92 li
512.233 430.846 li
512.374 430.846 li
512.516 430.78 li
512.657 430.711 li
512.798 430.563 li
512.939 430.428 li
513.081 430.213 li
513.222 430.073 li
513.363 429.79 li
513.505 429.581 li
513.646 429.299 li
513.787 429.016 li
513.929 428.733 li
514.069 428.452 li
514.211 428.094 li
514.353 427.739 li
514.493 427.387 li
514.567 427.038 li
514.703 426.682 li
514.851 426.258 li
514.985 425.909 li
515.133 425.477 li
515.268 425.061 li
515.415 424.704 li
515.551 424.28 li
515.698 423.856 li
515.833 423.5 li
515.98 423.083 li
516.115 422.725 li
516.263 422.301 li
516.398 421.952 li
516.546 421.596 li
516.681 421.239 li
516.828 420.889 li
516.964 420.606 li
517.037 420.325 li
517.178 420.042 li
517.319 419.758 li
517.461 419.477 li
517.602 419.262 li
517.743 419.053 li
517.885 418.842 li
518.025 418.696 li
518.167 418.561 li
518.309 418.415 li
518.449 418.278 li
518.591 418.206 li
518.732 418.206 li
518.873 418.131 li
519.015 418.131 li
519.156 418.131 li
519.297 418.206 li
519.438 418.206 li
519.58 418.278 li
519.653 418.415 li
519.789 418.561 li
519.937 418.696 li
520.071 418.842 li
520.219 418.979 li
520.354 419.194 li
520.502 419.409 li
520.637 419.618 li
520.784 419.901 li
520.919 420.182 li
521.066 420.391 li
521.202 420.674 li
521.35 420.958 li
521.484 421.313 li
521.632 421.596 li
521.767 421.952 li
521.914 422.235 li
522.05 422.584 li
522.123 422.868 li
522.265 423.217 li
522.405 423.573 li
522.547 423.856 li
522.688 424.211 li
522.829 424.495 li
522.971 424.844 li
523.112 425.127 li
523.253 425.477 li
523.395 425.76 li
523.536 426.043 li
523.677 426.325 li
523.818 426.54 li
523.96 426.823 li
524.101 427.038 li
524.242 427.247 li
524.384 427.456 li
524.524 427.67 li
524.666 427.811 li
524.74 427.954 li
524.875 428.094 li
525.022 428.235 li
525.158 428.377 li
525.306 428.452 li
525.44 428.518 li
525.588 428.518 li
525.723 428.586 li
525.87 428.586 li
526.006 428.586 li
526.153 428.518 li
526.288 428.518 li
526.436 428.452 li
526.57 428.377 li
526.718 428.235 li
526.854 428.168 li
527.001 428.02 li
527.136 427.885 li
527.209 427.67 li
527.351 427.53 li
527.491 427.321 li
527.633 427.106 li
527.774 426.963 li
527.916 426.682 li
528.057 426.473 li
528.198 426.258 li
528.34 425.975 li
528.48 425.76 li
528.622 425.477 li
528.764 425.196 li
528.904 424.987 li
529.046 424.704 li
529.188 424.42 li
529.328 424.139 li
529.47 423.856 li
529.611 423.647 li
529.752 423.364 li
529.826 423.083 li
529.962 422.868 li
530.108 422.584 li
530.244 422.37 li
530.392 422.086 li
530.526 421.877 li
530.674 421.668 li
530.81 421.454 li
530.956 421.313 li
531.092 421.104 li
531.239 420.958 li
531.374 420.749 li
531.521 420.606 li
531.657 420.54 li
531.804 420.391 li
531.939 420.325 li
532.087 420.182 li
532.222 420.11 li
532.296 420.11 li
532.437 420.042 li
532.578 420.042 li
532.72 420.042 li
532.86 420.042 li
533.002 420.042 li
533.144 420.11 li
533.284 420.11 li
533.426 420.182 li
533.567 420.325 li
533.708 420.391 li
533.85 420.465 li
533.991 420.606 li
534.132 420.749 li
534.273 420.889 li
534.415 421.03 li
534.556 421.172 li
534.697 421.387 li
534.839 421.522 li
534.912 421.737 li
535.048 421.952 li
535.195 422.161 li
535.33 422.37 li
535.478 422.584 li
535.612 422.799 li
535.76 423.008 li
535.896 423.217 li
536.043 423.432 li
536.178 423.647 li
536.325 423.856 li
536.46 424.065 li
536.607 424.28 li
536.743 424.495 li
536.891 424.704 li
537.025 424.913 li
537.173 425.127 li
537.309 425.342 li
537.382 425.477 li
537.522 425.692 li
537.664 425.834 li
537.806 425.975 li
537.946 426.116 li
538.088 426.258 li
538.229 426.399 li
538.37 426.54 li
538.512 426.608 li
538.653 426.756 li
538.794 426.823 li
538.936 426.891 li
539.077 426.963 li
539.218 426.963 li
539.359 427.038 li
539.501 427.038 li
539.642 427.038 li
539.783 427.038 li
539.852 427.038 li
539.999 426.963 li
540.134 426.963 li
540.281 426.891 li
540.416 426.823 li
540.563 426.756 li
540.699 426.682 li
540.847 426.54 li
540.981 426.473 li
541.129 426.325 li
541.264 426.19 li
541.411 426.043 li
541.547 425.909 li
541.694 425.76 li
541.829 425.625 li
541.977 425.477 li
542.112 425.268 li
542.259 425.127 li
542.395 424.987 li
542.468 424.778 li
542.609 424.563 li
542.75 424.42 li
542.892 424.211 li
543.033 424.065 li
543.174 423.856 li
543.315 423.715 li
543.457 423.5 li
543.598 423.364 li
543.739 423.149 li
543.881 423.008 li
544.021 422.868 li
544.163 422.725 li
544.305 422.516 li
544.445 422.37 li
544.587 422.301 li
544.729 422.161 li
544.87 422.02 li
544.938 421.877 li
545.085 421.805 li
545.22 421.737 li
545.367 421.596 li
545.503 421.522 li
545.65 421.454 li
545.785 421.454 li
545.933 421.387 li
546.067 421.313 li
546.215 421.313 li
546.351 421.313 li
546.498 421.313 li
546.633 421.313 li
546.78 421.313 li
546.915 421.313 li
547.063 421.387 li
547.198 421.454 li
547.346 421.454 li
547.48 421.522 li
547.554 421.596 li
547.695 421.668 li
547.837 421.805 li
547.978 421.877 li
548.119 421.952 li
548.261 422.086 li
548.401 422.235 li
548.543 422.301 li
548.685 422.444 li
548.825 422.584 li
548.967 422.725 li
549.108 422.868 li
549.249 423.008 li
549.391 423.149 li
549.532 423.292 li
549.673 423.432 li
549.814 423.573 li
549.956 423.715 li
550.023 423.856 li
550.171 423.997 li
550.307 424.139 li
550.453 424.28 li
550.589 424.42 li
550.735 424.563 li
550.871 424.704 li
551.019 424.844 li
551.154 424.987 li
551.301 425.061 li
551.437 425.196 li
551.583 425.268 li
551.719 425.411 li
551.866 425.477 li
552.002 425.551 li
552.148 425.625 li
552.284 425.692 li
552.431 425.76 li
552.566 425.834 li
552.64 425.909 li
552.781 425.909 li
552.923 425.975 li
553.064 425.975 li
553.205 425.975 li
553.347 425.975 li
553.488 425.975 li
553.629 425.975 li
553.771 425.975 li
553.912 425.909 li
554.053 425.909 li
554.194 425.834 li
554.336 425.76 li
554.477 425.76 li
554.618 425.692 li
554.76 425.625 li
554.9 425.551 li
555.042 425.411 li
555.11 425.342 li
555.257 425.268 li
555.393 425.127 li
555.539 425.061 li
555.675 424.913 li
555.821 424.844 li
555.958 424.704 li
556.104 424.563 li
556.24 424.495 li
556.387 424.348 li
556.522 424.211 li
556.67 424.139 li
556.806 423.997 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.3 .3 .3 rgb
@
2.5 lw
0 lj
4 ml
233.838 162.491 mo
238.95 94.0132 li
1 0 0 rgb
@
239.511 86.4902 mo
240.561 90.1284 242.474 94.6875 244.643 97.5864 cv
238.876 95.0005 li
232.789 96.7017 li
235.365 94.1567 237.934 89.9321 239.511 86.4902 cv
cp
f
123.134 156.361 mo
138.529 215.832 li
@
140.42 223.135 mo
138.255 220.029 134.976 216.328 131.988 214.282 cv
138.281 214.874 li
143.496 211.303 li
141.877 214.542 140.805 219.369 140.42 223.135 cv
cp
f
123.906 159.349 mo
106.357 220.585 li
@
104.279 227.837 mo
103.99 224.062 103.043 219.208 101.508 215.929 cv
106.63 219.633 li
112.936 219.204 li
109.896 221.173 106.522 224.787 104.279 227.837 cv
cp
f
123.816 156.125 mo
124.677 212.059 li
@
124.793 219.602 mo
123.422 216.073 121.107 211.703 118.686 209.011 cv
124.662 211.069 li
130.572 208.828 li
128.235 211.594 126.055 216.032 124.793 219.602 cv
cp
f
2 lw
142.524 226.803 mo
142.524 221.97 134.18 218.052 123.882 218.052 cv
113.586 218.052 105.239 221.97 105.239 226.803 cv
.101961 .0901961 .105882 rgb
@
105.646 87.1689 mo
105.646 82.334 113.995 78.416 124.291 78.416 cv
134.586 78.416 142.936 82.334 142.936 87.1689 cv
@
69.7593 210.782 mo
170.362 113.221 li
.529412 .533333 .541176 rgb
@
213.194 181.165 mo
28.7529 132.384 li
@
3 lw
123.15 247.249 mo
125.467 50.6182 li
0 0 1 rgb
@
125.573 41.5659 mo
127.104 45.8442 129.738 51.1606 132.554 54.4692 cv
125.453 51.8062 li
118.291 54.3013 li
121.184 51.0601 123.943 45.8071 125.573 41.5659 cv
cp
f
153.309 34.4185 mo
164.006 34.4185 li
f
167.023 34.4185 mo
165.604 34.9453 163.842 35.8442 162.75 36.7959 cv
163.61 34.4185 li
162.75 32.041 li
163.842 32.9927 165.604 33.8921 167.023 34.4185 cv
cp
f
1 lw
153.309 34.4185 mo
164.006 34.4185 li
@
167.023 34.4185 mo
165.604 34.9453 163.842 35.8442 162.75 36.7959 cv
163.61 34.4185 li
162.75 32.041 li
163.842 32.9927 165.604 33.8921 167.023 34.4185 cv
cp
f
%ADOBeginSubsetFont: Helvetica-Bold Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Helvetica-Bold def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 66 /B putdef/FontBBox {-1018 -481 1437 1159} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/.notdef <1C60D8A8C9B6079F6C9C5B6880C89408E8AD9743F80D45518E28653C59C8B376144C36> |-/B <1C60D8A8C9B6079F6D86D2961CAF81439F91370DD118B66018550AD01E9FB9B811FB259D586568107A41A9FC4447F7E941703E573C108ACEFF9EEDCC441475625059AB6F9DE01EE73B9E3B5A59D72DF9A62E0B93E3EC5CC78FB4B07333FEB5838906C427072CD8963E0047555D77242142A6A1CFE1F8DA50B582E38A720E5C3B2BAF84E910386279078C5309261DF084C30054C5F7785118231EF63C44D47C5D3A0E12F0CD98913A840F49DFFA5D> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/PDHCTS+Helvetica-Bold /Helvetica-Bold findfont ct_VMDictPut/PDHCTS+Helvetica-Bold*1 [66{/.notdef}rp /B 189{/.notdef}rp]PDHCTS+Helvetica-Bold nfPDHCTS+Helvetica-Bold*1 [21 0 0 -21 0 0 ]msf153.309 54.3726 mo(B)sh%ADOBeginSubsetFont: Helvetica-Bold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginPDHCTS+Helvetica-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/zero <1C60D8A8C9B7EF322B577C35405FE980B30B5532DD3CBB7365584877E20F92311A1F459466CF34AF5F89F0C196C16D374E3F6BD544BCC9EF33D0D39AEB12EEF06FCF64E0DF163253C52FB4744A6220E7FE064A251B513CDA6F2589D7EC47093F246ECE2926DF73BEECF3FE22CB5A0FF5193F54C1CA84442D2DE0C58BC520CD55B948ABE5D90ABBC6> |-systemdict /gcheck known {setglobal} if end {end} ifendPDHCTS+Helvetica-Bold /Encoding getdup 48 /zero putpop%ADOEndSubsetFont
/PDHCTS+Helvetica-Bold*1 [48{/.notdef}rp /zero 17{/.notdef}rp /B 189{/.notdef}rp]PDHCTS+Helvetica-Bold nfPDHCTS+Helvetica-Bold*1 [12.243 0 0 -12.243 0 0 ]msf168.474 61.3657 mo(0)sh261.021 51.375 mo
271.719 51.375 li
1 0 0 rgb
f
274.736 51.375 mo
273.316 51.9019 271.555 52.8008 270.463 53.7524 cv
271.323 51.375 li
270.463 48.9976 li
271.555 49.9492 273.316 50.8481 274.736 51.375 cv
cp
f
261.021 51.375 mo
271.719 51.375 li
@
274.736 51.375 mo
273.316 51.9019 271.555 52.8008 270.463 53.7524 cv
271.323 51.375 li
270.463 48.9976 li
271.555 49.9492 273.316 50.8481 274.736 51.375 cv
cp
f
%ADOBeginSubsetFont: Helvetica-Bold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginPDHCTS+Helvetica-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/M <1C60D8A8C9B6B41CB4F0B3BEE1A6CAEFC0BF482EC1CC7D2F0198309C9F0FDCD50F606DDBD44D23F589330B462EBB855D5C7D5E33D1AB31D947D9B1D0155EEAFD60545ACDB4485F1DD800CF449A8552776F4F18221C> |-systemdict /gcheck known {setglobal} if end {end} ifendPDHCTS+Helvetica-Bold /Encoding getdup 77 /M putpop%ADOEndSubsetFont
/PDHCTS+Helvetica-Bold*1 [48{/.notdef}rp /zero 17{/.notdef}rp /B 10{/.notdef}rp /M 178{/.notdef}rp]PDHCTS+Helvetica-Bold nfPDHCTS+Helvetica-Bold*1 [21 0 0 -21 0 0 ]msf258.623 71.3296 mo(M)sh2.5 lw
123.816 156.125 mo
129.207 228.354 li
@
129.769 235.877 mo
128.191 232.436 125.622 228.211 123.046 225.666 cv
129.133 227.367 li
134.9 224.781 li
132.731 227.68 130.817 232.24 129.769 235.877 cv
cp
f
123.724 160.445 mo
115.865 227.531 li
@
114.987 235.023 mo
114.092 231.344 112.372 226.708 110.327 223.721 cv
115.98 226.547 li
122.133 225.104 li
119.453 227.538 116.708 231.651 114.987 235.023 cv
cp
f
2 lw
197.785 159.442 mo
197.785 179.792 165.833 196.285 126.418 196.285 cv
87.0049 196.285 55.0537 179.792 55.0537 159.442 cv
55.0537 139.095 87.0049 122.601 126.418 122.601 cv
165.833 122.601 197.785 139.095 197.785 159.442 cv
cp
.529412 .533333 .541176 rgb
@
2.5 lw
124.058 157.296 mo
129.449 85.0679 li
1 0 0 rgb
@
130.011 77.5449 mo
131.06 81.1831 132.973 85.7422 135.143 88.6411 cv
129.375 86.0552 li
123.289 87.7563 li
125.864 85.2114 128.434 80.9868 130.011 77.5449 cv
cp
f
123.966 152.977 mo
116.107 85.8911 li
@
115.229 78.3984 mo
116.951 81.771 119.695 85.8838 122.375 88.3179 cv
116.222 86.8745 li
110.569 89.7012 li
112.614 86.7134 114.335 82.0771 115.229 78.3984 cv
cp
f
123.376 157.062 mo
138.771 97.5903 li
@
140.662 90.2871 mo
141.048 94.0537 142.12 98.8809 143.739 102.119 cv
138.523 98.5488 li
132.231 99.1401 li
135.218 97.0942 138.498 93.3936 140.662 90.2871 cv
cp
f
124.148 154.074 mo
106.599 92.8374 li
@
104.521 85.5854 mo
106.765 88.6348 110.138 92.2495 113.177 94.2183 cv
106.872 93.7891 li
101.75 97.4932 li
103.285 94.2139 104.232 89.3604 104.521 85.5854 cv
cp
f
124.058 157.296 mo
124.919 101.364 li
@
125.036 93.8208 mo
126.298 97.3901 128.477 101.829 130.814 104.595 cv
124.904 102.354 li
118.928 104.412 li
121.349 101.719 123.665 97.3496 125.036 93.8208 cv
cp
f
2 lw
142.766 86.6191 mo
142.766 91.4521 134.422 95.3701 124.125 95.3701 cv
113.828 95.3701 105.48 91.4521 105.48 86.6191 cv
.101961 .0901961 .105882 rgb
@
128.598 158.01 mo
128.598 160.042 126.589 161.688 124.113 161.688 cv
121.636 161.688 119.628 160.042 119.628 158.01 cv
119.628 155.979 121.636 154.332 124.113 154.332 cv
126.589 154.332 128.598 155.979 128.598 158.01 cv
cp
f
128.598 158.01 mo
128.598 160.042 126.589 161.688 124.113 161.688 cv
121.636 161.688 119.628 160.042 119.628 158.01 cv
119.628 155.979 121.636 154.332 124.113 154.332 cv
126.589 154.332 128.598 155.979 128.598 158.01 cv
cp
@
105.404 226.253 mo
105.404 231.088 113.753 235.006 124.049 235.006 cv
134.344 235.006 142.694 231.088 142.694 226.253 cv
@
216.383 96.0049 mo
216.383 91.4214 224.298 87.7065 234.059 87.7065 cv
243.819 87.7065 251.736 91.4214 251.736 96.0049 cv
@
3 lw
233.659 163.167 mo
235.855 61.3525 li
0 0 0 rgb
@
236.05 52.3018 mo
237.539 56.5947 240.121 61.937 242.904 65.2729 cv
235.829 62.5405 li
228.643 64.9653 li
231.568 61.7524 234.379 56.5269 236.05 52.3018 cv
cp
f
2.5 lw
233.751 158.396 mo
226.3 94.7935 li
1 0 0 rgb
@
225.422 87.3008 mo
227.143 90.6733 229.888 94.7861 232.568 97.2202 cv
226.415 95.7769 li
220.762 98.6035 li
222.807 95.6157 224.527 90.9795 225.422 87.3008 cv
cp
f
233.192 162.269 mo
247.788 105.885 li
@
249.678 98.582 mo
250.063 102.349 251.136 107.176 252.755 110.414 cv
247.54 106.844 li
241.247 107.435 li
244.234 105.389 247.514 101.688 249.678 98.582 cv
cp
f
233.923 159.436 mo
217.286 101.379 li
@
215.208 94.1274 mo
217.452 97.1772 220.825 100.792 223.864 102.76 cv
217.559 102.331 li
212.437 106.035 li
213.972 102.756 214.92 97.9023 215.208 94.1274 cv
cp
f
233.838 162.491 mo
234.655 109.463 li
@
234.771 101.92 mo
236.034 105.49 238.213 109.928 240.55 112.694 cv
234.64 110.453 li
228.664 112.511 li
231.085 109.818 233.4 105.449 234.771 101.92 cv
cp
f
2 lw
251.575 95.4839 mo
251.575 100.066 243.664 103.78 233.901 103.78 cv
224.14 103.78 216.226 100.066 216.226 95.4839 cv
.101961 .0901961 .105882 rgb
@
238.143 163.167 mo
238.143 165.094 236.238 166.655 233.89 166.655 cv
231.542 166.655 229.639 165.094 229.639 163.167 cv
229.639 161.242 231.542 159.681 233.89 159.681 cv
236.238 159.681 238.143 161.242 238.143 163.167 cv
cp
f
238.143 163.167 mo
238.143 165.094 236.238 166.655 233.89 166.655 cv
231.542 166.655 229.639 165.094 229.639 163.167 cv
229.639 161.242 231.542 159.681 233.89 159.681 cv
236.238 159.681 238.143 161.242 238.143 163.167 cv
cp
@
0 0 0 rgb
%ADOBeginSubsetFont: Helvetica-Bold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginPDHCTS+Helvetica-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/A <1C60D8A8C9B6079F6D8BCAB13EAF1F64F3C3ED827606376F9F4A528D2C08D43C9621FD70D4EC5667AD384CAC91739649352B61D94F> |-systemdict /gcheck known {setglobal} if end {end} ifendPDHCTS+Helvetica-Bold /Encoding getdup 65 /A putpop%ADOEndSubsetFont
/PDHCTS+Helvetica-Bold*1 [48{/.notdef}rp /zero 16{/.notdef}rp /A /B 10{/.notdef}rp /M 178{/.notdef}rp]PDHCTS+Helvetica-Bold nfPDHCTS+Helvetica-Bold*1 [48 0 0 -48 0 0 ]msf41.5391 61.3525 mo(A)sh590.527 155.299 mo
590.527 175.718 558.467 192.268 518.914 192.268 cv
479.365 192.268 447.302 175.718 447.302 155.299 cv
447.302 134.881 479.365 118.33 518.914 118.33 cv
558.467 118.33 590.527 134.881 590.527 155.299 cv
cp
.529412 .533333 .541176 rgb
@
462.059 206.817 mo
563.01 108.917 li
@
605.99 177.097 mo
420.911 128.147 li
@
3 lw
516.213 153.418 mo
517.382 46.0981 li
0 0 1 rgb
@
517.48 37.0459 mo
519.015 41.3228 521.653 46.6367 524.473 49.9434 cv
517.369 47.2861 li
510.209 49.7876 li
513.1 46.5435 515.854 41.2881 517.48 37.0459 cv
cp
f
546.866 26.4897 mo
557.563 26.4897 li
f
560.581 26.4897 mo
559.161 27.0166 557.399 27.9155 556.308 28.8672 cv
557.168 26.4897 li
556.308 24.1123 li
557.399 25.064 559.161 25.9634 560.581 26.4897 cv
cp
f
1 lw
546.866 26.4897 mo
557.563 26.4897 li
@
560.581 26.4897 mo
559.161 27.0166 557.399 27.9155 556.308 28.8672 cv
557.168 26.4897 li
556.308 24.1123 li
557.399 25.064 559.161 25.9634 560.581 26.4897 cv
cp
f
PDHCTS+Helvetica-Bold*1 [21 0 0 -21 0 0 ]msf546.866 46.4438 mo(B)shPDHCTS+Helvetica-Bold*1 [12.243 0 0 -12.243 0 0 ]msf562.032 53.437 mo(0)sh3 lw
516.031 153.78 mo
458.184 209.621 li
0 .6 .2 rgb
@
451.67 215.908 mo
453.638 211.813 455.567 206.202 455.94 201.873 cv
459.038 208.796 li
465.848 212.136 li
461.509 212.357 455.832 214.086 451.67 215.908 cv
cp
f
516.642 153.085 mo
567.214 166.861 li
1 0 0 rgb
@
575.948 169.24 mo
571.423 169.646 565.615 170.858 561.704 172.752 cv
566.067 166.549 li
565.453 158.989 li
567.863 162.604 572.254 166.596 575.948 169.24 cv
cp
f
481.759 218.129 mo
492.456 218.129 li
0 .564706 .211765 rgb
f
495.474 218.129 mo
494.054 218.656 492.292 219.555 491.2 220.507 cv
492.061 218.129 li
491.2 215.752 li
492.292 216.704 494.054 217.603 495.474 218.129 cv
cp
f
1 lw
481.759 218.129 mo
492.456 218.129 li
0 .603922 .196078 rgb
@
495.474 218.129 mo
494.054 218.656 492.292 219.555 491.2 220.507 cv
492.061 218.129 li
491.2 215.752 li
492.292 216.704 494.054 217.603 495.474 218.129 cv
cp
f
0 .564706 .211765 rgb
PDHCTS+Helvetica-Bold*1 [21 0 0 -21 0 0 ]msf481.759 238.084 mo(B)sh%ADOBeginSubsetFont: Helvetica-Bold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginPDHCTS+Helvetica-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/one <1C60D8A8C9B7EF322B95725327D721A78FE0D59AD4E04529F324F6D510C193519C49DD51CFCFDC3D3422114B050140740B4A8D8EC36935C401> |-systemdict /gcheck known {setglobal} if end {end} ifendPDHCTS+Helvetica-Bold /Encoding getdup 49 /one putpop%ADOEndSubsetFont
/PDHCTS+Helvetica-Bold*1 [48{/.notdef}rp /zero /one 15{/.notdef}rp /A /B 10{/.notdef}rp /M 178{/.notdef}rp]PDHCTS+Helvetica-Bold nfPDHCTS+Helvetica-Bold*1 [12.243 0 0 -12.243 0 0 ]msf496.924 245.077 mo(1)sh601.841 139.249 mo
612.538 139.249 li
1 0 0 rgb
f
615.556 139.249 mo
614.136 139.775 612.374 140.674 611.282 141.626 cv
612.143 139.249 li
611.282 136.871 li
612.374 137.823 614.136 138.722 615.556 139.249 cv
cp
f
601.841 139.249 mo
612.538 139.249 li
@
615.556 139.249 mo
614.136 139.775 612.374 140.674 611.282 141.626 cv
612.143 139.249 li
611.282 136.871 li
612.374 137.823 614.136 138.722 615.556 139.249 cv
cp
f
PDHCTS+Helvetica-Bold*1 [21 0 0 -21 0 0 ]msf599.442 159.203 mo(M)sh2 lw
[5 5 ] 0 dsh
517.57 83.7744 mo
574.641 88.0835 581.128 134.247 573.624 168.692 cv
@
[] 0 dsh
536.976 87.5557 mo
538.464 88.0439 li
@
546.492 90.6777 mo
542.255 90.8403 536.783 91.6938 533.048 93.2729 cv
537.41 87.6982 li
537.198 80.6226 li
539.271 84.1074 543.174 88.0376 546.492 90.6777 cv
cp
f
569.316 113.493 mo
569.906 114.773 li
@
573.441 122.447 mo
570.438 119.453 566.088 116.026 562.389 114.365 cv
569.442 113.766 li
574.48 108.793 li
573.34 112.685 573.117 118.219 573.441 122.447 cv
cp
f
3 lw
2 lj
1 ml
595.134 214.03 mo
595.167 214.03 li
595.185 214.03 li
595.219 214.03 li
595.235 214.03 li
595.253 214.046 li
595.287 214.046 li
595.304 214.046 li
595.34 214.064 li
595.356 214.082 li
595.391 214.098 li
595.408 214.115 li
595.441 214.133 li
595.459 214.151 li
595.493 214.167 li
595.51 214.202 li
595.546 214.219 li
595.563 214.252 li
595.597 214.288 li
595.614 214.321 li
595.647 214.357 li
595.665 214.389 li
595.699 214.425 li
595.716 214.476 li
595.752 214.51 li
595.769 214.563 li
595.803 214.614 li
595.82 214.648 li
595.854 214.7 li
595.871 214.75 li
595.905 214.82 li
595.922 214.871 li
595.958 214.922 li
595.975 214.992 li
596.009 215.043 li
596.026 215.112 li
596.06 215.181 li
596.077 215.25 li
596.111 215.318 li
596.128 215.387 li
596.164 215.456 li
596.181 215.541 li
596.215 215.609 li
596.232 215.695 li
596.266 215.763 li
596.283 215.85 li
596.317 215.936 li
596.334 216.021 li
596.37 216.107 li
596.387 216.193 li
569.604 214.03 mo
569.619 214.03 li
569.638 214.03 li
569.672 214.03 li
569.688 214.046 li
569.724 214.046 li
569.74 214.046 li
569.774 214.064 li
569.793 214.082 li
569.825 214.098 li
569.844 214.115 li
569.878 214.133 li
569.895 214.151 li
569.93 214.167 li
569.946 214.202 li
569.98 214.219 li
569.999 214.252 li
570.031 214.288 li
570.05 214.321 li
570.084 214.357 li
570.101 214.389 li
570.136 214.425 li
570.152 214.476 li
570.187 214.51 li
570.205 214.563 li
570.237 214.614 li
570.256 214.648 li
570.29 214.7 li
570.307 214.75 li
570.342 214.82 li
570.358 214.871 li
570.393 214.922 li
570.41 214.992 li
570.443 215.043 li
570.462 215.112 li
570.496 215.181 li
570.513 215.25 li
570.548 215.318 li
570.564 215.387 li
570.599 215.456 li
570.616 215.541 li
570.649 215.609 li
570.668 215.695 li
570.702 215.763 li
570.719 215.85 li
570.754 215.936 li
570.771 216.021 li
570.805 216.107 li
570.822 216.193 li
570.839 216.28 li
570.874 216.381 li
570.892 216.467 li
570.925 216.571 li
570.942 216.656 li
570.977 216.76 li
570.993 216.862 li
571.028 216.966 li
571.045 217.068 li
571.08 217.172 li
571.098 217.274 li
571.131 217.378 li
571.148 217.498 li
571.183 217.601 li
571.199 217.722 li
571.234 217.824 li
571.251 217.944 li
571.286 218.065 li
571.304 218.185 li
571.336 218.288 li
571.354 218.425 li
571.389 218.545 li
571.405 218.666 li
571.44 218.785 li
571.457 218.906 li
571.492 219.043 li
571.51 219.164 li
571.542 219.301 li
571.561 219.42 li
571.595 219.558 li
571.611 219.696 li
571.646 219.815 li
571.663 219.953 li
571.697 220.089 li
571.716 220.227 li
571.748 220.365 li
571.767 220.501 li
571.801 220.657 li
571.817 220.794 li
571.853 220.931 li
571.869 221.069 li
571.903 221.224 li
571.922 221.362 li
571.954 221.515 li
571.973 221.653 li
571.99 221.806 li
572.023 221.944 li
572.041 222.099 li
572.075 222.254 li
572.092 222.408 li
572.128 222.545 li
572.145 222.7 li
572.179 222.854 li
572.196 223.009 li
572.229 223.164 li
572.247 223.317 li
572.281 223.472 li
572.298 223.627 li
572.334 223.782 li
572.351 223.935 li
572.385 224.09 li
572.402 224.246 li
572.436 224.417 li
572.453 224.572 li
572.487 224.727 li
572.504 224.88 li
572.539 225.035 li
572.557 225.208 li
572.591 225.361 li
572.608 225.515 li
572.642 225.688 li
572.659 225.842 li
572.693 225.996 li
572.71 226.168 li
572.746 226.323 li
572.762 226.476 li
572.797 226.65 li
572.814 226.803 li
572.848 226.958 li
572.865 227.13 li
572.899 227.284 li
572.916 227.438 li
572.951 227.611 li
572.969 227.765 li
573.003 227.918 li
573.021 228.091 li
573.054 228.246 li
573.071 228.399 li
573.105 228.573 li
573.122 228.726 li
573.14 228.88 li
573.174 229.035 li
573.19 229.19 li
573.227 229.361 li
573.243 229.516 li
573.277 229.671 li
573.295 229.825 li
573.328 229.979 li
573.346 230.134 li
573.38 230.29 li
573.396 230.443 li
573.433 230.597 li
573.449 230.752 li
573.483 230.908 li
573.501 231.061 li
573.534 231.199 li
573.552 231.352 li
573.586 231.507 li
573.603 231.663 li
573.639 231.8 li
573.655 231.954 li
573.689 232.091 li
573.707 232.245 li
573.74 232.382 li
573.758 232.538 li
573.792 232.675 li
573.809 232.812 li
573.845 232.95 li
573.861 233.105 li
573.896 233.243 li
573.913 233.379 li
573.946 233.517 li
573.964 233.654 li
573.998 233.792 li
574.015 233.911 li
574.051 234.048 li
574.067 234.186 li
574.102 234.305 li
574.119 234.443 li
574.152 234.563 li
574.17 234.701 li
574.204 234.822 li
574.221 234.941 li
574.257 235.061 li
574.273 235.181 li
574.289 235.319 li
574.325 235.422 li
574.342 235.542 li
574.376 235.663 li
574.394 235.784 li
574.427 235.885 li
574.444 236.005 li
574.479 236.109 li
574.495 236.228 li
574.531 236.333 li
574.548 236.434 li
574.582 236.539 li
574.6 236.64 li
574.633 236.745 li
574.65 236.846 li
574.686 236.951 li
574.701 237.036 li
574.737 237.139 li
574.754 237.225 li
574.788 237.327 li
574.806 237.414 li
574.839 237.5 li
574.856 237.585 li
574.891 237.67 li
574.907 237.756 li
574.943 237.843 li
574.96 237.913 li
574.994 237.998 li
575.012 238.066 li
575.045 238.151 li
575.063 238.22 li
575.098 238.289 li
575.113 238.357 li
575.149 238.426 li
575.166 238.495 li
575.2 238.563 li
575.218 238.616 li
575.251 238.684 li
575.269 238.736 li
575.303 238.787 li
575.319 238.856 li
575.355 238.907 li
575.372 238.958 li
575.406 238.993 li
575.424 239.043 li
575.457 239.096 li
575.475 239.13 li
575.492 239.181 li
575.525 239.217 li
575.544 239.25 li
575.578 239.286 li
575.594 239.319 li
575.63 239.354 li
575.646 239.387 li
575.681 239.405 li
575.698 239.439 li
575.731 239.456 li
575.75 239.474 li
575.784 239.492 li
575.801 239.508 li
575.836 239.525 li
575.853 239.542 li
575.887 239.56 li
575.904 239.56 li
575.938 239.56 li
575.955 239.577 li
575.99 239.577 li
576.006 239.577 li
576.042 239.577 li
576.059 239.577 li
576.093 239.56 li
576.11 239.56 li
576.144 239.56 li
576.162 239.542 li
576.196 239.525 li
576.212 239.508 li
576.248 239.492 li
576.265 239.474 li
576.299 239.456 li
576.316 239.439 li
576.35 239.405 li
576.367 239.387 li
576.402 239.354 li
576.418 239.319 li
576.454 239.286 li
576.471 239.25 li
576.505 239.217 li
576.522 239.181 li
576.556 239.13 li
576.573 239.096 li
576.608 239.043 li
576.624 238.993 li
576.643 238.958 li
576.677 238.907 li
576.693 238.856 li
576.729 238.787 li
576.745 238.736 li
576.779 238.684 li
576.797 238.616 li
576.83 238.563 li
576.849 238.495 li
576.883 238.426 li
576.899 238.357 li
576.935 238.289 li
576.951 238.22 li
576.985 238.151 li
577.004 238.066 li
577.036 237.998 li
577.055 237.913 li
577.089 237.843 li
577.105 237.756 li
577.141 237.67 li
577.157 237.585 li
577.191 237.5 li
577.209 237.414 li
577.242 237.327 li
577.261 237.225 li
577.295 237.139 li
577.312 237.036 li
577.347 236.951 li
577.363 236.846 li
577.397 236.745 li
577.415 236.64 li
577.448 236.539 li
577.467 236.434 li
577.501 236.333 li
577.518 236.228 li
577.553 236.109 li
577.569 236.005 li
577.604 235.885 li
577.621 235.784 li
577.654 235.663 li
577.673 235.542 li
577.707 235.422 li
577.723 235.319 li
577.759 235.181 li
577.775 235.061 li
577.792 234.941 li
577.827 234.822 li
577.844 234.701 li
577.879 234.563 li
577.896 234.443 li
577.93 234.305 li
577.947 234.186 li
577.981 234.048 li
577.998 233.911 li
578.033 233.792 li
578.05 233.654 li
578.084 233.517 li
578.103 233.379 li
578.135 233.243 li
578.153 233.105 li
578.188 232.95 li
578.204 232.812 li
578.239 232.675 li
578.256 232.538 li
578.291 232.382 li
578.309 232.245 li
578.341 232.091 li
578.359 231.954 li
578.394 231.8 li
578.41 231.663 li
578.445 231.507 li
578.462 231.352 li
578.496 231.199 li
578.515 231.061 li
578.547 230.908 li
578.565 230.752 li
578.6 230.597 li
578.616 230.443 li
578.651 230.29 li
578.668 230.134 li
578.702 229.979 li
578.721 229.825 li
578.753 229.671 li
578.771 229.516 li
578.806 229.361 li
578.822 229.19 li
578.857 229.035 li
578.874 228.88 li
578.908 228.726 li
578.927 228.573 li
578.943 228.399 li
578.978 228.246 li
578.995 228.091 li
579.028 227.918 li
579.046 227.765 li
579.08 227.611 li
579.097 227.438 li
579.133 227.284 li
579.149 227.13 li
579.184 226.958 li
579.201 226.803 li
579.234 226.65 li
579.252 226.476 li
579.286 226.323 li
579.303 226.168 li
579.338 225.996 li
579.355 225.842 li
579.39 225.688 li
579.407 225.515 li
579.44 225.361 li
579.458 225.208 li
579.492 225.035 li
579.509 224.88 li
579.544 224.727 li
579.561 224.572 li
579.596 224.417 li
579.613 224.246 li
579.646 224.09 li
579.664 223.935 li
579.698 223.782 li
579.715 223.627 li
579.75 223.472 li
579.767 223.317 li
579.802 223.164 li
579.819 223.009 li
579.852 222.854 li
579.87 222.7 li
579.904 222.545 li
579.921 222.408 li
579.956 222.254 li
579.973 222.099 li
580.008 221.944 li
580.025 221.806 li
580.059 221.653 li
580.076 221.515 li
580.11 221.362 li
580.127 221.224 li
580.145 221.069 li
580.179 220.931 li
580.195 220.794 li
580.231 220.657 li
580.248 220.501 li
580.282 220.365 li
580.3 220.227 li
580.333 220.089 li
580.351 219.953 li
580.385 219.815 li
580.401 219.696 li
580.438 219.558 li
580.454 219.42 li
580.488 219.301 li
580.506 219.164 li
580.539 219.043 li
580.557 218.906 li
580.591 218.785 li
580.607 218.666 li
580.644 218.545 li
580.66 218.425 li
580.694 218.288 li
580.712 218.185 li
580.745 218.065 li
580.763 217.944 li
580.797 217.824 li
580.813 217.722 li
580.85 217.601 li
580.866 217.498 li
580.9 217.378 li
580.918 217.274 li
580.951 217.172 li
580.969 217.068 li
581.003 216.966 li
581.02 216.862 li
581.056 216.76 li
581.072 216.656 li
581.106 216.571 li
581.124 216.467 li
581.157 216.381 li
581.175 216.28 li
581.209 216.193 li
581.226 216.107 li
581.262 216.021 li
581.278 215.936 li
581.294 215.85 li
581.33 215.763 li
581.347 215.695 li
581.381 215.609 li
581.398 215.541 li
581.432 215.456 li
581.449 215.387 li
581.484 215.318 li
581.5 215.25 li
581.536 215.181 li
581.553 215.112 li
581.587 215.043 li
581.604 214.992 li
581.638 214.922 li
581.655 214.871 li
581.689 214.82 li
581.706 214.75 li
581.742 214.7 li
581.759 214.648 li
581.793 214.614 li
581.811 214.563 li
581.844 214.51 li
581.861 214.476 li
581.896 214.425 li
581.912 214.389 li
581.948 214.357 li
581.965 214.321 li
581.999 214.288 li
582.017 214.252 li
582.05 214.219 li
582.067 214.202 li
582.102 214.167 li
582.118 214.151 li
582.154 214.133 li
582.171 214.115 li
582.205 214.098 li
582.223 214.082 li
582.256 214.064 li
582.273 214.046 li
582.308 214.046 li
582.324 214.046 li
582.36 214.03 li
582.377 214.03 li
582.411 214.03 li
582.429 214.03 li
582.445 214.03 li
582.479 214.046 li
582.497 214.046 li
582.53 214.046 li
582.549 214.064 li
582.583 214.082 li
582.599 214.098 li
582.635 214.115 li
582.651 214.133 li
582.686 214.151 li
582.703 214.167 li
582.736 214.202 li
582.754 214.219 li
582.789 214.252 li
582.805 214.288 li
582.841 214.321 li
582.857 214.357 li
582.892 214.389 li
582.909 214.425 li
582.942 214.476 li
582.96 214.51 li
582.995 214.563 li
583.011 214.614 li
583.047 214.648 li
583.063 214.7 li
583.098 214.75 li
583.115 214.82 li
583.148 214.871 li
583.166 214.922 li
583.201 214.992 li
583.217 215.043 li
583.253 215.112 li
583.27 215.181 li
583.304 215.25 li
583.321 215.318 li
583.354 215.387 li
583.372 215.456 li
583.407 215.541 li
583.423 215.609 li
583.459 215.695 li
583.476 215.763 li
583.51 215.85 li
583.527 215.936 li
583.561 216.021 li
583.578 216.107 li
583.596 216.193 li
583.629 216.28 li
583.647 216.381 li
583.682 216.467 li
583.698 216.571 li
583.733 216.656 li
583.75 216.76 li
583.784 216.862 li
583.803 216.966 li
583.835 217.068 li
583.854 217.172 li
583.888 217.274 li
583.904 217.378 li
583.939 217.498 li
583.956 217.601 li
583.99 217.722 li
584.008 217.824 li
584.041 217.944 li
584.06 218.065 li
584.094 218.185 li
584.11 218.288 li
584.146 218.425 li
584.162 218.545 li
584.196 218.666 li
584.214 218.785 li
584.247 218.906 li
584.266 219.043 li
584.3 219.164 li
584.316 219.301 li
584.352 219.42 li
584.368 219.558 li
584.402 219.696 li
584.42 219.815 li
584.453 219.953 li
584.472 220.089 li
584.506 220.227 li
584.521 220.365 li
584.558 220.501 li
584.574 220.657 li
584.608 220.794 li
584.626 220.931 li
584.659 221.069 li
584.678 221.224 li
584.712 221.362 li
584.728 221.515 li
584.764 221.653 li
584.78 221.806 li
584.797 221.944 li
584.832 222.099 li
584.849 222.254 li
584.883 222.408 li
584.901 222.545 li
584.934 222.7 li
584.952 222.854 li
584.986 223.009 li
585.003 223.164 li
585.038 223.317 li
585.055 223.472 li
585.09 223.627 li
585.107 223.782 li
585.14 223.935 li
585.158 224.09 li
585.192 224.246 li
585.209 224.417 li
585.244 224.572 li
585.261 224.727 li
585.295 224.88 li
585.313 225.035 li
585.346 225.208 li
585.364 225.361 li
585.398 225.515 li
585.415 225.688 li
585.45 225.842 li
585.467 225.996 li
585.501 226.168 li
585.52 226.323 li
585.552 226.476 li
585.57 226.65 li
585.604 226.803 li
585.621 226.958 li
585.656 227.13 li
585.673 227.284 li
585.707 227.438 li
585.725 227.611 li
585.758 227.765 li
585.776 227.918 li
585.811 228.091 li
585.827 228.246 li
585.862 228.399 li
585.879 228.573 li
585.913 228.726 li
585.932 228.88 li
585.947 229.035 li
585.982 229.19 li
586 229.361 li
586.033 229.516 li
586.051 229.671 li
586.085 229.825 li
586.102 229.979 li
586.137 230.134 li
586.154 230.29 li
586.188 230.443 li
586.206 230.597 li
586.239 230.752 li
586.257 230.908 li
586.291 231.061 li
586.308 231.199 li
586.343 231.352 li
586.359 231.507 li
586.395 231.663 li
586.412 231.8 li
586.445 231.954 li
586.463 232.091 li
586.497 232.245 li
586.514 232.382 li
586.549 232.538 li
586.565 232.675 li
586.601 232.812 li
586.618 232.95 li
586.65 233.105 li
586.669 233.243 li
586.703 233.379 li
586.72 233.517 li
586.755 233.654 li
586.771 233.792 li
586.807 233.911 li
586.824 234.048 li
586.856 234.186 li
586.875 234.305 li
586.909 234.443 li
586.926 234.563 li
586.961 234.701 li
586.978 234.822 li
587.012 234.941 li
587.03 235.061 li
587.063 235.181 li
587.081 235.319 li
587.099 235.422 li
587.132 235.542 li
587.149 235.663 li
587.184 235.784 li
587.2 235.885 li
587.236 236.005 li
587.253 236.109 li
587.287 236.228 li
587.305 236.333 li
587.338 236.434 li
587.355 236.539 li
587.39 236.64 li
587.406 236.745 li
587.442 236.846 li
587.459 236.951 li
587.493 237.036 li
587.511 237.139 li
587.544 237.225 li
587.562 237.327 li
587.596 237.414 li
587.612 237.5 li
587.648 237.585 li
587.665 237.67 li
587.699 237.756 li
587.717 237.843 li
587.75 237.913 li
587.768 237.998 li
587.802 238.066 li
587.818 238.151 li
587.854 238.22 li
587.871 238.289 li
587.905 238.357 li
587.923 238.426 li
587.956 238.495 li
587.974 238.563 li
588.008 238.616 li
588.024 238.684 li
588.061 238.736 li
588.076 238.787 li
588.111 238.856 li
588.129 238.907 li
588.162 238.958 li
588.18 238.993 li
588.214 239.043 li
588.23 239.096 li
588.248 239.13 li
588.283 239.181 li
588.299 239.217 li
588.335 239.25 li
588.352 239.286 li
588.386 239.319 li
588.403 239.354 li
588.437 239.387 li
588.454 239.405 li
588.488 239.439 li
588.505 239.456 li
588.541 239.474 li
588.558 239.492 li
588.592 239.508 li
588.609 239.525 li
588.643 239.542 li
588.66 239.56 li
588.694 239.56 li
588.711 239.56 li
588.747 239.577 li
588.764 239.577 li
588.798 239.577 li
588.815 239.577 li
588.849 239.577 li
588.866 239.56 li
588.9 239.56 li
588.917 239.56 li
588.953 239.542 li
588.97 239.525 li
589.004 239.508 li
589.021 239.492 li
589.055 239.474 li
589.072 239.456 li
589.106 239.439 li
589.123 239.405 li
589.159 239.387 li
589.176 239.354 li
589.21 239.319 li
589.228 239.286 li
589.261 239.25 li
589.278 239.217 li
589.313 239.181 li
589.329 239.13 li
589.365 239.096 li
589.382 239.043 li
589.416 238.993 li
589.434 238.958 li
589.45 238.907 li
589.484 238.856 li
589.502 238.787 li
589.535 238.736 li
589.553 238.684 li
589.588 238.616 li
589.604 238.563 li
589.64 238.495 li
589.656 238.426 li
589.69 238.357 li
589.708 238.289 li
589.741 238.22 li
589.759 238.151 li
589.794 238.066 li
589.81 237.998 li
589.846 237.913 li
589.862 237.843 li
589.896 237.756 li
589.914 237.67 li
589.947 237.585 li
589.965 237.5 li
590 237.414 li
590.016 237.327 li
590.052 237.225 li
590.068 237.139 li
590.103 237.036 li
590.12 236.951 li
590.153 236.846 li
590.171 236.745 li
590.205 236.64 li
590.222 236.539 li
590.258 236.434 li
590.274 236.333 li
590.309 236.228 li
590.326 236.109 li
590.359 236.005 li
590.377 235.885 li
590.412 235.784 li
590.428 235.663 li
590.464 235.542 li
590.48 235.422 li
590.515 235.319 li
590.532 235.181 li
590.565 235.061 li
590.583 234.941 li
590.601 234.822 li
590.634 234.701 li
590.652 234.563 li
590.687 234.443 li
590.703 234.305 li
590.738 234.186 li
590.755 234.048 li
590.789 233.911 li
590.807 233.792 li
590.84 233.654 li
590.858 233.517 li
590.893 233.379 li
590.908 233.243 li
590.944 233.105 li
590.961 232.95 li
590.995 232.812 li
591.013 232.675 li
591.046 232.538 li
591.064 232.382 li
591.099 232.245 li
591.115 232.091 li
591.15 231.954 li
591.167 231.8 li
591.201 231.663 li
591.219 231.507 li
591.252 231.352 li
591.271 231.199 li
591.305 231.061 li
591.32 230.908 li
591.356 230.752 li
591.373 230.597 li
591.407 230.443 li
591.425 230.29 li
591.458 230.134 li
591.477 229.979 li
591.511 229.825 li
591.526 229.671 li
591.563 229.516 li
591.579 229.361 li
591.613 229.19 li
591.631 229.035 li
591.664 228.88 li
591.682 228.726 li
591.717 228.573 li
591.732 228.399 li
591.751 228.246 li
591.785 228.091 li
591.802 227.918 li
591.837 227.765 li
591.854 227.611 li
591.888 227.438 li
591.906 227.284 li
591.938 227.13 li
591.957 226.958 li
591.991 226.803 li
592.008 226.65 li
592.043 226.476 li
592.06 226.323 li
592.094 226.168 li
592.112 225.996 li
592.145 225.842 li
592.163 225.688 li
592.197 225.515 li
592.214 225.361 li
592.249 225.208 li
592.266 225.035 li
592.3 224.88 li
592.318 224.727 li
592.351 224.572 li
592.369 224.417 li
592.403 224.246 li
592.42 224.09 li
592.455 223.935 li
592.472 223.782 li
592.506 223.627 li
592.523 223.472 li
592.557 223.317 li
592.575 223.164 li
592.609 223.009 li
592.626 222.854 li
592.661 222.7 li
592.678 222.545 li
592.712 222.408 li
592.729 222.254 li
592.763 222.099 li
592.781 221.944 li
592.815 221.806 li
592.832 221.653 li
592.867 221.515 li
592.884 221.362 li
592.9 221.224 li
592.936 221.069 li
592.952 220.931 li
592.987 220.794 li
593.005 220.657 li
593.037 220.501 li
593.056 220.365 li
593.09 220.227 li
593.106 220.089 li
593.142 219.953 li
593.158 219.815 li
593.193 219.696 li
593.211 219.558 li
593.244 219.42 li
593.262 219.301 li
593.296 219.164 li
593.313 219.043 li
593.348 218.906 li
593.364 218.785 li
593.399 218.666 li
593.417 218.545 li
593.449 218.425 li
593.468 218.288 li
593.502 218.185 li
593.519 218.065 li
593.554 217.944 li
593.57 217.824 li
593.605 217.722 li
593.623 217.601 li
593.655 217.498 li
593.674 217.378 li
593.708 217.274 li
593.725 217.172 li
593.76 217.068 li
593.776 216.966 li
593.811 216.862 li
593.829 216.76 li
593.861 216.656 li
593.88 216.571 li
593.914 216.467 li
593.931 216.381 li
593.966 216.28 li
593.982 216.193 li
594.017 216.107 li
594.035 216.021 li
594.067 215.936 li
594.086 215.85 li
594.104 215.763 li
594.137 215.695 li
594.154 215.609 li
594.188 215.541 li
594.205 215.456 li
594.241 215.387 li
594.258 215.318 li
594.292 215.25 li
594.31 215.181 li
594.343 215.112 li
594.36 215.043 li
594.395 214.992 li
594.411 214.922 li
594.447 214.871 li
594.464 214.82 li
594.498 214.75 li
594.516 214.7 li
594.549 214.648 li
594.566 214.614 li
594.601 214.563 li
594.617 214.51 li
594.652 214.476 li
594.67 214.425 li
594.704 214.389 li
594.722 214.357 li
594.755 214.321 li
594.772 214.288 li
594.807 214.252 li
594.823 214.219 li
594.858 214.202 li
594.875 214.167 li
594.91 214.151 li
594.928 214.133 li
594.961 214.115 li
594.979 214.098 li
595.013 214.082 li
595.029 214.064 li
595.064 214.046 li
595.081 214.046 li
595.116 214.046 li
595.134 214.03 li
544.056 214.03 mo
544.072 214.03 li
544.108 214.03 li
544.125 214.046 li
544.159 214.046 li
544.177 214.046 li
544.21 214.064 li
544.228 214.082 li
544.262 214.098 li
544.278 214.115 li
544.314 214.133 li
544.331 214.151 li
544.365 214.167 li
544.383 214.202 li
544.416 214.219 li
544.434 214.252 li
544.468 214.288 li
544.484 214.321 li
544.521 214.357 li
544.537 214.389 li
544.571 214.425 li
544.589 214.476 li
544.622 214.51 li
544.64 214.563 li
544.674 214.614 li
544.69 214.648 li
544.727 214.7 li
544.743 214.75 li
544.777 214.82 li
544.795 214.871 li
544.828 214.922 li
544.846 214.992 li
544.88 215.043 li
544.896 215.112 li
544.933 215.181 li
544.949 215.25 li
544.983 215.318 li
545.001 215.387 li
545.034 215.456 li
545.052 215.541 li
545.086 215.609 li
545.103 215.695 li
545.139 215.763 li
545.155 215.85 li
545.189 215.936 li
545.207 216.021 li
545.224 216.107 li
545.258 216.193 li
545.275 216.28 li
545.309 216.381 li
545.326 216.467 li
545.361 216.571 li
545.377 216.656 li
545.413 216.76 li
545.43 216.862 li
545.464 216.966 li
545.481 217.068 li
545.515 217.172 li
545.532 217.274 li
545.566 217.378 li
545.583 217.498 li
545.619 217.601 li
545.636 217.722 li
545.67 217.824 li
545.688 217.944 li
545.721 218.065 li
545.738 218.185 li
545.772 218.288 li
545.789 218.425 li
545.825 218.545 li
545.842 218.666 li
545.876 218.785 li
545.894 218.906 li
545.927 219.043 li
545.944 219.164 li
545.979 219.301 li
545.995 219.42 li
546.031 219.558 li
546.048 219.696 li
546.082 219.815 li
546.1 219.953 li
546.133 220.089 li
546.15 220.227 li
546.185 220.365 li
546.201 220.501 li
546.237 220.657 li
546.254 220.794 li
546.288 220.931 li
546.306 221.069 li
546.339 221.224 li
546.356 221.362 li
546.375 221.515 li
546.407 221.653 li
546.426 221.806 li
546.46 221.944 li
546.477 222.099 li
546.512 222.254 li
546.528 222.408 li
546.563 222.545 li
546.58 222.7 li
546.613 222.854 li
546.631 223.009 li
546.666 223.164 li
546.683 223.317 li
546.718 223.472 li
546.734 223.627 li
546.769 223.782 li
546.786 223.935 li
546.819 224.09 li
546.837 224.246 li
546.872 224.417 li
546.889 224.572 li
546.924 224.727 li
546.94 224.88 li
546.975 225.035 li
546.992 225.208 li
547.025 225.361 li
547.043 225.515 li
547.078 225.688 li
547.094 225.842 li
547.13 225.996 li
547.146 226.168 li
547.181 226.323 li
547.198 226.476 li
547.231 226.65 li
547.249 226.803 li
547.284 226.958 li
547.3 227.13 li
547.336 227.284 li
547.353 227.438 li
547.387 227.611 li
547.404 227.765 li
547.438 227.918 li
547.455 228.091 li
547.49 228.246 li
547.506 228.399 li
547.542 228.573 li
547.559 228.726 li
547.575 228.88 li
547.61 229.035 li
547.627 229.19 li
547.661 229.361 li
547.68 229.516 li
547.712 229.671 li
547.73 229.825 li
547.765 229.979 li
547.781 230.134 li
547.816 230.29 li
547.833 230.443 li
547.867 230.597 li
547.886 230.752 li
547.918 230.908 li
547.937 231.061 li
547.971 231.199 li
547.987 231.352 li
548.022 231.507 li
548.039 231.663 li
548.073 231.8 li
548.092 231.954 li
548.124 232.091 li
548.143 232.245 li
548.177 232.382 li
548.193 232.538 li
548.229 232.675 li
548.245 232.812 li
548.279 232.95 li
548.298 233.105 li
548.33 233.243 li
548.349 233.379 li
548.383 233.517 li
548.399 233.654 li
548.435 233.792 li
548.451 233.911 li
548.485 234.048 li
548.504 234.186 li
548.536 234.305 li
548.555 234.443 li
548.589 234.563 li
548.605 234.701 li
548.641 234.822 li
548.657 234.941 li
548.691 235.061 li
548.709 235.181 li
548.726 235.319 li
548.76 235.422 li
548.778 235.542 li
548.812 235.663 li
548.829 235.784 li
548.863 235.885 li
548.88 236.005 li
548.916 236.109 li
548.932 236.228 li
548.966 236.333 li
548.984 236.434 li
549.018 236.539 li
549.035 236.64 li
549.069 236.745 li
549.086 236.846 li
549.121 236.951 li
549.138 237.036 li
549.172 237.139 li
549.19 237.225 li
549.223 237.327 li
549.241 237.414 li
549.275 237.5 li
549.292 237.585 li
549.327 237.67 li
549.344 237.756 li
549.378 237.843 li
549.396 237.913 li
549.429 237.998 li
549.447 238.066 li
549.481 238.151 li
549.498 238.22 li
549.533 238.289 li
549.55 238.357 li
549.584 238.426 li
549.603 238.495 li
549.635 238.563 li
549.653 238.616 li
549.688 238.684 li
549.704 238.736 li
549.739 238.787 li
549.756 238.856 li
549.79 238.907 li
549.809 238.958 li
549.841 238.993 li
549.859 239.043 li
549.877 239.096 li
549.91 239.13 li
549.928 239.181 li
549.962 239.217 li
549.979 239.25 li
550.015 239.286 li
550.03 239.319 li
550.065 239.354 li
550.083 239.387 li
550.116 239.405 li
550.134 239.439 li
550.168 239.456 li
550.185 239.474 li
550.221 239.492 li
550.236 239.508 li
550.271 239.525 li
550.289 239.542 li
550.322 239.56 li
550.34 239.56 li
550.374 239.56 li
550.391 239.577 li
550.427 239.577 li
550.442 239.577 li
550.478 239.577 li
550.495 239.577 li
550.528 239.56 li
550.546 239.56 li
550.58 239.56 li
550.597 239.542 li
550.633 239.525 li
550.648 239.508 li
550.684 239.492 li
550.701 239.474 li
550.734 239.456 li
550.752 239.439 li
550.786 239.405 li
550.803 239.387 li
550.838 239.354 li
550.854 239.319 li
550.889 239.286 li
550.907 239.25 li
550.94 239.217 li
550.958 239.181 li
550.992 239.13 li
551.009 239.096 li
551.026 239.043 li
551.061 238.993 li
551.077 238.958 li
551.113 238.907 li
551.13 238.856 li
551.164 238.787 li
551.182 238.736 li
551.215 238.684 li
551.232 238.616 li
551.267 238.563 li
551.283 238.495 li
551.319 238.426 li
551.336 238.357 li
551.37 238.289 li
551.388 238.22 li
551.421 238.151 li
551.438 238.066 li
551.473 237.998 li
551.489 237.913 li
551.525 237.843 li
551.542 237.756 li
551.576 237.67 li
551.594 237.585 li
551.627 237.5 li
551.645 237.414 li
551.679 237.327 li
551.695 237.225 li
551.731 237.139 li
551.748 237.036 li
551.782 236.951 li
551.8 236.846 li
551.833 236.745 li
551.851 236.64 li
551.885 236.539 li
551.901 236.434 li
551.938 236.333 li
551.953 236.228 li
551.988 236.109 li
552.006 236.005 li
552.039 235.885 li
552.057 235.784 li
552.091 235.663 li
552.107 235.542 li
552.144 235.422 li
552.16 235.319 li
552.194 235.181 li
552.212 235.061 li
552.229 234.941 li
552.263 234.822 li
552.28 234.701 li
552.313 234.563 li
552.331 234.443 li
552.365 234.305 li
552.382 234.186 li
552.418 234.048 li
552.435 233.911 li
552.469 233.792 li
552.486 233.654 li
552.52 233.517 li
552.537 233.379 li
552.571 233.243 li
552.588 233.105 li
552.624 232.95 li
552.641 232.812 li
552.675 232.675 li
552.692 232.538 li
552.726 232.382 li
552.743 232.245 li
552.777 232.091 li
552.794 231.954 li
552.83 231.8 li
552.847 231.663 li
552.881 231.507 li
552.898 231.352 li
552.932 231.199 li
552.949 231.061 li
552.983 230.908 li
553 230.752 li
553.036 230.597 li
553.053 230.443 li
553.087 230.29 li
553.104 230.134 li
553.138 229.979 li
553.155 229.825 li
553.189 229.671 li
553.206 229.516 li
553.242 229.361 li
553.259 229.19 li
553.293 229.035 li
553.311 228.88 li
553.344 228.726 li
553.361 228.573 li
553.379 228.399 li
553.412 228.246 li
553.43 228.091 li
553.465 227.918 li
553.48 227.765 li
553.517 227.611 li
553.533 227.438 li
553.567 227.284 li
553.585 227.13 li
553.618 226.958 li
553.636 226.803 li
553.671 226.65 li
553.688 226.476 li
553.723 226.323 li
553.739 226.168 li
553.773 225.996 li
553.791 225.842 li
553.824 225.688 li
553.842 225.515 li
553.877 225.361 li
553.893 225.208 li
553.929 225.035 li
553.945 224.88 li
553.979 224.727 li
553.997 224.572 li
554.03 224.417 li
554.048 224.246 li
554.082 224.09 li
554.099 223.935 li
554.135 223.782 li
554.151 223.627 li
554.186 223.472 li
554.203 223.317 li
554.236 223.164 li
554.254 223.009 li
554.289 222.854 li
554.305 222.7 li
554.341 222.545 li
554.357 222.408 li
554.392 222.254 li
554.409 222.099 li
554.442 221.944 li
554.46 221.806 li
554.494 221.653 li
554.511 221.515 li
554.529 221.362 li
554.563 221.224 li
554.58 221.069 li
554.615 220.931 li
554.632 220.794 li
554.666 220.657 li
554.685 220.501 li
554.717 220.365 li
554.735 220.227 li
554.77 220.089 li
554.786 219.953 li
554.821 219.815 li
554.838 219.696 li
554.872 219.558 li
554.891 219.42 li
554.923 219.301 li
554.941 219.164 li
554.976 219.043 li
554.992 218.906 li
555.027 218.785 li
555.044 218.666 li
555.078 218.545 li
555.097 218.425 li
555.129 218.288 li
555.146 218.185 li
555.182 218.065 li
555.198 217.944 li
555.233 217.824 li
555.25 217.722 li
555.284 217.601 li
555.303 217.498 li
555.335 217.378 li
555.354 217.274 li
555.388 217.172 li
555.404 217.068 li
555.439 216.966 li
555.456 216.862 li
555.49 216.76 li
555.508 216.656 li
555.541 216.571 li
555.559 216.467 li
555.594 216.381 li
555.609 216.28 li
555.646 216.193 li
555.662 216.107 li
555.679 216.021 li
555.714 215.936 li
555.73 215.85 li
555.765 215.763 li
555.783 215.695 li
555.816 215.609 li
555.834 215.541 li
555.868 215.456 li
555.885 215.387 li
555.92 215.318 li
555.937 215.25 li
555.971 215.181 li
555.989 215.112 li
556.021 215.043 li
556.04 214.992 li
556.074 214.922 li
556.091 214.871 li
556.126 214.82 li
556.143 214.75 li
556.177 214.7 li
556.195 214.648 li
556.228 214.614 li
556.246 214.563 li
556.28 214.51 li
556.297 214.476 li
556.332 214.425 li
556.349 214.389 li
556.383 214.357 li
556.401 214.321 li
556.434 214.288 li
556.452 214.252 li
556.486 214.219 li
556.503 214.202 li
556.538 214.167 li
556.555 214.151 li
556.589 214.133 li
556.607 214.115 li
556.64 214.098 li
556.658 214.082 li
556.692 214.064 li
556.709 214.046 li
556.744 214.046 li
556.761 214.046 li
556.795 214.03 li
556.813 214.03 li
556.846 214.03 li
556.864 214.03 li
556.882 214.03 li
556.915 214.046 li
556.933 214.046 li
556.967 214.046 li
556.983 214.064 li
557.02 214.082 li
557.035 214.098 li
557.07 214.115 li
557.088 214.133 li
557.121 214.151 li
557.139 214.167 li
557.173 214.202 li
557.189 214.219 li
557.225 214.252 li
557.241 214.288 li
557.276 214.321 li
557.294 214.357 li
557.327 214.389 li
557.345 214.425 li
557.379 214.476 li
557.396 214.51 li
557.431 214.563 li
557.447 214.614 li
557.482 214.648 li
557.5 214.7 li
557.533 214.75 li
557.551 214.82 li
557.585 214.871 li
557.602 214.922 li
557.637 214.992 li
557.653 215.043 li
557.688 215.112 li
557.706 215.181 li
557.738 215.25 li
557.757 215.318 li
557.791 215.387 li
557.808 215.456 li
557.843 215.541 li
557.859 215.609 li
557.894 215.695 li
557.912 215.763 li
557.945 215.85 li
557.963 215.936 li
557.997 216.021 li
558.014 216.107 li
558.031 216.193 li
558.065 216.28 li
558.082 216.381 li
558.118 216.467 li
558.135 216.571 li
558.169 216.656 li
558.187 216.76 li
558.22 216.862 li
558.237 216.966 li
558.271 217.068 li
558.288 217.172 li
558.324 217.274 li
558.341 217.378 li
558.375 217.498 li
558.393 217.601 li
558.426 217.722 li
558.443 217.824 li
558.478 217.944 li
558.494 218.065 li
558.53 218.185 li
558.547 218.288 li
558.581 218.425 li
558.599 218.545 li
558.632 218.666 li
558.649 218.785 li
558.684 218.906 li
558.7 219.043 li
558.736 219.164 li
558.752 219.301 li
558.787 219.42 li
558.805 219.558 li
558.838 219.696 li
558.855 219.815 li
558.89 219.953 li
558.906 220.089 li
558.942 220.227 li
558.958 220.365 li
558.993 220.501 li
559.011 220.657 li
559.044 220.794 li
559.062 220.931 li
559.096 221.069 li
559.112 221.224 li
559.148 221.362 li
559.164 221.515 li
559.181 221.653 li
559.217 221.806 li
559.233 221.944 li
559.268 222.099 li
559.285 222.254 li
559.318 222.408 li
559.336 222.545 li
559.37 222.7 li
559.387 222.854 li
559.423 223.009 li
559.439 223.164 li
559.474 223.317 li
559.491 223.472 li
559.524 223.627 li
559.542 223.782 li
559.576 223.935 li
559.593 224.09 li
559.629 224.246 li
559.646 224.417 li
559.68 224.572 li
559.697 224.727 li
559.73 224.88 li
559.748 225.035 li
559.782 225.208 li
559.799 225.361 li
559.835 225.515 li
559.852 225.688 li
559.886 225.842 li
559.903 225.996 li
559.937 226.168 li
559.954 226.323 li
559.988 226.476 li
560.005 226.65 li
560.041 226.803 li
560.058 226.958 li
560.092 227.13 li
560.109 227.284 li
560.143 227.438 li
560.16 227.611 li
560.194 227.765 li
560.211 227.918 li
560.247 228.091 li
560.264 228.246 li
560.298 228.399 li
560.315 228.573 li
560.332 228.726 li
560.366 228.88 li
560.384 229.035 li
560.417 229.19 li
560.435 229.361 li
560.47 229.516 li
560.485 229.671 li
560.521 229.825 li
560.538 229.979 li
560.572 230.134 li
560.59 230.29 li
560.623 230.443 li
560.641 230.597 li
560.676 230.752 li
560.691 230.908 li
560.728 231.061 li
560.744 231.199 li
560.778 231.352 li
560.796 231.507 li
560.829 231.663 li
560.847 231.8 li
560.881 231.954 li
560.897 232.091 li
560.934 232.245 li
560.95 232.382 li
560.984 232.538 li
561.002 232.675 li
561.035 232.812 li
561.053 232.95 li
561.087 233.105 li
561.104 233.243 li
561.14 233.379 li
561.156 233.517 li
561.19 233.654 li
561.208 233.792 li
561.241 233.911 li
561.259 234.048 li
561.293 234.186 li
561.31 234.305 li
561.346 234.443 li
561.362 234.563 li
561.396 234.701 li
561.414 234.822 li
561.447 234.941 li
561.465 235.061 li
561.499 235.181 li
561.516 235.319 li
561.534 235.422 li
561.568 235.542 li
561.585 235.663 li
561.62 235.784 li
561.637 235.885 li
561.671 236.005 li
561.689 236.109 li
561.722 236.228 li
561.74 236.333 li
561.774 236.434 li
561.791 236.539 li
561.826 236.64 li
561.843 236.745 li
561.877 236.846 li
561.895 236.951 li
561.928 237.036 li
561.945 237.139 li
561.98 237.225 li
561.997 237.327 li
562.032 237.414 li
562.049 237.5 li
562.083 237.585 li
562.101 237.67 li
562.134 237.756 li
562.152 237.843 li
562.187 237.913 li
562.203 237.998 li
562.238 238.066 li
562.255 238.151 li
562.289 238.22 li
562.307 238.289 li
562.34 238.357 li
562.357 238.426 li
562.393 238.495 li
562.408 238.563 li
562.444 238.616 li
562.461 238.684 li
562.495 238.736 li
562.513 238.787 li
562.546 238.856 li
562.563 238.907 li
562.599 238.958 li
562.614 238.993 li
562.65 239.043 li
562.667 239.096 li
562.684 239.13 li
562.719 239.181 li
562.735 239.217 li
562.77 239.25 li
562.788 239.286 li
562.82 239.319 li
562.839 239.354 li
562.873 239.387 li
562.89 239.405 li
562.925 239.439 li
562.941 239.456 li
562.976 239.474 li
562.994 239.492 li
563.026 239.508 li
563.045 239.525 li
563.079 239.542 li
563.096 239.56 li
563.131 239.56 li
563.147 239.56 li
563.182 239.577 li
563.2 239.577 li
563.232 239.577 li
563.251 239.577 li
563.285 239.577 li
563.302 239.56 li
563.337 239.56 li
563.354 239.56 li
563.388 239.542 li
563.406 239.525 li
563.438 239.508 li
563.457 239.492 li
563.491 239.474 li
563.508 239.456 li
563.543 239.439 li
563.56 239.405 li
563.594 239.387 li
563.611 239.354 li
563.645 239.319 li
563.663 239.286 li
563.697 239.25 li
563.714 239.217 li
563.749 239.181 li
563.766 239.13 li
563.8 239.096 li
563.818 239.043 li
563.834 238.993 li
563.869 238.958 li
563.887 238.907 li
563.92 238.856 li
563.938 238.787 li
563.972 238.736 li
563.988 238.684 li
564.023 238.616 li
564.04 238.563 li
564.074 238.495 li
564.093 238.426 li
564.126 238.357 li
564.144 238.289 li
564.178 238.22 li
564.194 238.151 li
564.229 238.066 li
564.246 237.998 li
564.281 237.913 li
564.299 237.843 li
564.332 237.756 li
564.35 237.67 li
564.384 237.585 li
564.4 237.5 li
564.436 237.414 li
564.452 237.327 li
564.486 237.225 li
564.505 237.139 li
564.537 237.036 li
564.556 236.951 li
564.59 236.846 li
564.606 236.745 li
564.642 236.64 li
564.658 236.539 li
564.692 236.434 li
564.711 236.333 li
564.744 236.228 li
564.762 236.109 li
564.796 236.005 li
564.813 235.885 li
564.848 235.784 li
564.864 235.663 li
564.898 235.542 li
564.917 235.422 li
564.949 235.319 li
564.968 235.181 li
564.985 235.061 li
565.019 234.941 li
565.036 234.822 li
565.07 234.701 li
565.087 234.563 li
565.123 234.443 li
565.139 234.305 li
565.174 234.186 li
565.191 234.048 li
565.225 233.911 li
565.242 233.792 li
565.276 233.654 li
565.293 233.517 li
565.329 233.379 li
565.346 233.243 li
565.38 233.105 li
565.397 232.95 li
565.431 232.812 li
565.448 232.675 li
565.482 232.538 li
565.499 232.382 li
565.535 232.245 li
565.551 232.091 li
565.586 231.954 li
565.604 231.8 li
565.637 231.663 li
565.654 231.507 li
565.688 231.352 li
565.705 231.199 li
565.74 231.061 li
565.757 230.908 li
565.792 230.752 li
565.81 230.597 li
565.843 230.443 li
565.86 230.29 li
565.895 230.134 li
565.911 229.979 li
565.947 229.825 li
565.963 229.671 li
565.998 229.516 li
566.016 229.361 li
566.049 229.19 li
566.066 229.035 li
566.101 228.88 li
566.117 228.726 li
566.152 228.573 li
566.169 228.399 li
566.186 228.246 li
566.222 228.091 li
566.238 227.918 li
566.272 227.765 li
566.29 227.611 li
566.323 227.438 li
566.341 227.284 li
566.375 227.13 li
566.392 226.958 li
566.428 226.803 li
566.444 226.65 li
566.479 226.476 li
566.496 226.323 li
566.529 226.168 li
566.547 225.996 li
566.581 225.842 li
566.598 225.688 li
566.634 225.515 li
566.65 225.361 li
566.685 225.208 li
566.702 225.035 li
566.735 224.88 li
566.753 224.727 li
566.787 224.572 li
566.804 224.417 li
566.84 224.246 li
566.856 224.09 li
566.891 223.935 li
566.908 223.782 li
566.941 223.627 li
566.959 223.472 li
566.993 223.317 li
567.01 223.164 li
567.046 223.009 li
567.063 222.854 li
567.097 222.7 li
567.114 222.545 li
567.147 222.408 li
567.165 222.254 li
567.199 222.099 li
567.216 221.944 li
567.252 221.806 li
567.268 221.653 li
567.303 221.515 li
567.32 221.362 li
567.337 221.224 li
567.371 221.069 li
567.389 220.931 li
567.422 220.794 li
567.439 220.657 li
567.475 220.501 li
567.49 220.365 li
567.526 220.227 li
567.543 220.089 li
567.577 219.953 li
567.595 219.815 li
567.628 219.696 li
567.646 219.558 li
567.68 219.42 li
567.696 219.301 li
567.732 219.164 li
567.749 219.043 li
567.783 218.906 li
567.801 218.785 li
567.834 218.666 li
567.852 218.545 li
567.886 218.425 li
567.902 218.288 li
567.938 218.185 li
567.955 218.065 li
567.989 217.944 li
568.007 217.824 li
568.04 217.722 li
568.058 217.601 li
568.092 217.498 li
568.108 217.378 li
568.145 217.274 li
568.161 217.172 li
568.195 217.068 li
568.213 216.966 li
568.246 216.862 li
568.264 216.76 li
568.298 216.656 li
568.314 216.571 li
568.351 216.467 li
568.367 216.381 li
568.401 216.28 li
568.419 216.193 li
568.452 216.107 li
568.47 216.021 li
568.487 215.936 li
568.521 215.85 li
568.539 215.763 li
568.573 215.695 li
568.59 215.609 li
568.625 215.541 li
568.642 215.456 li
568.676 215.387 li
568.693 215.318 li
568.727 215.25 li
568.744 215.181 li
568.779 215.112 li
568.795 215.043 li
568.831 214.992 li
568.848 214.922 li
568.882 214.871 li
568.899 214.82 li
568.933 214.75 li
568.95 214.7 li
568.985 214.648 li
569.002 214.614 li
569.037 214.563 li
569.054 214.51 li
569.088 214.476 li
569.105 214.425 li
569.139 214.389 li
569.156 214.357 li
569.191 214.321 li
569.207 214.288 li
569.243 214.252 li
569.26 214.219 li
569.294 214.202 li
569.312 214.167 li
569.345 214.151 li
569.362 214.133 li
569.397 214.115 li
569.413 214.098 li
569.449 214.082 li
569.466 214.064 li
569.5 214.046 li
569.518 214.046 li
569.551 214.046 li
569.568 214.03 li
569.604 214.03 li
0 .6 .2 rgb
@
0 .564706 .211765 rgb
%ADOBeginSubsetFont: Helvetica-Bold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginPDHCTS+Helvetica-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/F <1C60D8A8C9B7D8BE37D60E330A65C8F5FB551AA6EDE9CF058BD3DAAA761A67CE89C3F1C9AB8D06> |-/R <1C60D8A8C9B6079F6D948C96378A395831CDA2139BE9588FD427243646A74CA03840F9949147C23ABC917C373B1C3FA085ACC10D1EED330B0D766649A299B2544EB909295412D418FE76D00B16F4BC532CFA6BCDAA3E1A61D2555CB15FC302A562089847E09921623EEBB5DB82D30048BD165A1DDE685F24B1A54D6F77BBD785DBF41B3FD9DBD25240631AECE1C07C0C586B60AE8DE9FF5B645009A5D8BE85102CF410B024E2C6C454FB86BE60622EC48789> |-systemdict /gcheck known {setglobal} if end {end} ifendPDHCTS+Helvetica-Bold /Encoding getdup 70 /F putdup 82 /R putpop%ADOEndSubsetFont
/PDHCTS+Helvetica-Bold*1 [48{/.notdef}rp /zero /one 15{/.notdef}rp /A /B 3{/.notdef}rp /F 6{/.notdef}rp /M 4{/.notdef}rp /R 173{/.notdef}rp]PDHCTS+Helvetica-Bold nfPDHCTS+Helvetica-Bold*1 [21 0 0 -21 0 0 ]msf599.442 235.006 mo(RF)[15.1655 0 ]xsh0 0 0 rgb
PDHCTS+Helvetica-Bold*1 [48 0 0 -48 0 0 ]msf434.616 61.3525 mo(B)sh2 lw
0 lj
4 ml
264.051 463.312 mo
264.051 491.638 219.575 514.597 164.706 514.597 cv
109.841 514.597 65.3628 491.638 65.3628 463.312 cv
65.3628 434.988 109.841 412.027 164.706 412.027 cv
219.575 412.027 264.051 434.988 264.051 463.312 cv
cp
.529412 .533333 .541176 rgb
@
85.8335 534.779 mo
225.877 398.968 li
@
285.502 493.55 mo
28.7529 425.646 li
@
3 lw
160.958 460.703 mo
162.581 311.825 li
0 0 1 rgb
@
162.679 302.773 mo
164.213 307.049 166.853 312.364 169.671 315.669 cv
162.567 313.012 li
155.408 315.514 li
158.298 312.27 161.053 307.015 162.679 302.773 cv
cp
f
161.553 460.242 mo
231.709 479.351 li
1 0 0 rgb
@
240.444 481.73 mo
235.918 482.135 230.11 483.348 226.2 485.243 cv
230.563 479.039 li
229.949 471.479 li
232.359 475.094 236.749 479.086 240.444 481.73 cv
cp
f
10 ml
141.07 490.191 mo
136.712 489.527 li
0 0 0 rgb
@
124.541 487.025 mo
120.833 486.035 li
132.495 488.777 mo
128.433 487.941 li
@
117.324 484.966 mo
114.025 483.83 li
@
110.946 482.628 mo
108.101 481.367 li
@
148.246 491.05 mo
145.552 490.767 li
@
105.494 480.046 mo
103.138 478.677 li
@
101.039 477.261 mo
99.2036 475.802 li
@
97.6353 474.31 mo
96.3394 472.785 li
@
95.3179 471.234 mo
94.5747 469.667 li
@
94.1069 468.083 mo
93.9185 466.494 li
@
120.833 486.035 mo
117.324 484.966 li
@
94.3657 463.306 mo
94.9946 461.722 li
@
114.025 483.83 mo
110.946 482.628 li
@
95.8882 460.152 mo
97.0425 458.601 li
@
108.101 481.367 mo
105.494 480.046 li
@
103.138 478.677 mo
101.039 477.261 li
@
145.552 490.767 mo
141.07 490.191 li
@
99.2036 475.802 mo
97.6353 474.31 li
@
128.433 487.941 mo
124.541 487.025 li
@
96.3394 472.785 mo
95.3179 471.234 li
@
97.0425 458.601 mo
98.4487 457.074 li
@
136.712 489.527 mo
132.495 488.777 li
@
94.9946 461.722 mo
95.8882 460.152 li
@
94.5747 469.667 mo
94.1069 468.083 li
@
93.9185 466.494 mo
94.0054 464.898 li
@
94.0054 464.898 mo
94.3657 463.306 li
@
98.4487 457.074 mo
100.099 455.576 li
100.099 455.576 mo
101.988 454.111 li
@
116.626 446.699 mo
116.607 447.089 li
117.046 449.277 mo
116.734 448.185 li
116.607 447.089 li
130.087 459.072 mo
128.024 458.236 li
139.748 461.951 mo
137.138 461.306 li
126.117 457.359 mo
124.37 456.443 li
134.654 460.611 mo
132.299 459.865 li
117.546 450.357 mo
117.046 449.277 li
124.37 456.443 mo
122.791 455.496 li
118.231 451.425 mo
117.546 450.357 li
128.024 458.236 mo
126.117 457.359 li
119.099 452.478 mo
118.231 451.425 li
132.299 459.865 mo
130.087 459.072 li
120.152 453.509 mo
119.099 452.478 li
137.138 461.306 mo
134.654 460.611 li
122.791 455.496 mo
121.382 454.515 li
120.152 453.509 li
140.181 462.046 mo
139.748 461.951 li
@
114.624 447.457 mo
117.708 446.291 li
120.949 445.183 mo
124.331 444.142 li
124.331 444.142 mo
127.839 443.171 li
127.839 443.171 mo
131.459 442.269 li
134.496 441.593 mo
131.459 442.269 li
@
116.626 446.699 mo
116.628 446.658 li
@
117.708 446.291 mo
120.949 445.183 li
101.988 454.111 mo
104.104 452.685 li
104.104 452.685 mo
106.436 451.304 li
106.436 451.304 mo
108.974 449.968 li
108.974 449.968 mo
111.708 448.685 li
111.708 448.685 mo
114.624 447.457 li
@
116.664 445.99 mo
116.905 444.894 li
118.698 441.65 mo
119.642 440.597 li
117.326 443.802 mo
117.925 442.72 li
117.925 442.72 mo
118.698 441.65 li
116.905 444.894 mo
117.326 443.802 li
116.628 446.658 mo
116.664 445.99 li
@
132.183 433.277 mo
130.48 433.945 li
@
126.695 435.687 mo
128.526 434.798 li
128.526 434.798 mo
130.48 433.945 li
@
119.642 440.597 mo
120.748 439.564 li
@
122.013 438.55 mo
123.43 437.568 li
123.43 437.568 mo
124.994 436.611 li
124.994 436.611 mo
126.695 435.687 li
@
120.748 439.564 mo
122.013 438.55 li
@
132.078 432.894 mo
131.867 432.138 li
@
164.378 492.138 mo
159.573 491.937 li
154.822 491.642 li
@
206.895 489.63 mo
202.467 490.279 li
@
188.545 491.687 mo
183.756 491.97 li
148.246 491.05 mo
150.142 491.253 li
197.918 490.841 mo
193.272 491.31 li
154.822 491.642 mo
150.142 491.253 li
@
215.323 488.08 mo
211.186 488.896 li
@
178.925 492.158 mo
174.073 492.248 li
@
219.286 487.181 mo
215.323 488.08 li
@
183.756 491.97 mo
178.925 492.158 li
202.467 490.279 mo
197.918 490.841 li
169.218 492.242 mo
164.378 492.138 li
@
211.186 488.896 mo
206.895 489.63 li
@
174.073 492.248 mo
169.218 492.242 li
193.272 491.31 mo
188.545 491.687 li
@
235.93 481.652 mo
233.075 482.882 li
@
233.075 482.882 mo
229.969 484.054 li
@
229.969 484.054 mo
226.624 485.166 li
@
223.059 486.208 mo
219.286 487.181 li
@
226.624 485.166 mo
223.059 486.208 li
@
203.186 461.449 mo
200.657 462.068 li
@
189.379 464.019 mo
186.333 464.363 li
183.217 464.646 li
180.046 464.867 li
@
180.046 464.867 mo
176.838 465.025 li
173.598 465.117 li
170.346 465.148 li
@
207.819 460.07 mo
205.577 460.783 li
@
170.346 465.148 mo
167.09 465.113 li
@
200.657 462.068 mo
197.999 462.638 li
@
167.09 465.113 mo
163.845 465.011 li
@
195.227 463.154 mo
192.348 463.617 li
@
163.845 465.011 mo
160.624 464.845 li
157.439 464.615 li
154.302 464.324 li
@
209.901 459.314 mo
207.819 460.07 li
@
154.302 464.324 mo
151.224 463.966 li
@
197.999 462.638 mo
195.227 463.154 li
@
151.224 463.966 mo
148.22 463.552 li
@
205.577 460.783 mo
203.186 461.449 li
@
192.348 463.617 mo
189.379 464.019 li
@
148.22 463.552 mo
145.298 463.076 li
@
140.181 462.046 mo
142.47 462.541 li
145.298 463.076 mo
142.47 462.541 li
@
213.551 457.697 mo
211.817 458.523 li
@
218.139 454.531 mo
217.614 455.046 li
@
216.458 455.953 mo
215.102 456.837 li
@
134.496 441.593 mo
135.178 441.441 li
@
211.817 458.523 mo
209.901 459.314 li
@
215.102 456.837 mo
213.551 457.697 li
@
217.614 455.046 mo
216.458 455.953 li
@
137.579 440.968 mo
135.178 441.441 li
@
157.056 443.457 mo
154.994 443.193 li
@
131.821 430.619 mo
131.98 429.859 li
@
131.98 429.859 mo
132.263 429.103 li
@
206.782 441.085 mo
206.297 440.945 li
@
203.784 440.316 mo
206.297 440.945 li
@
201.084 439.74 mo
203.784 440.316 li
@
198.217 439.224 mo
201.084 439.74 li
@
197.694 439.144 mo
198.217 439.224 li
@
196.778 439.558 mo
195.614 440.087 li
@
192.936 441.07 mo
191.432 441.521 li
@
189.829 441.943 mo
188.135 442.332 li
@
188.135 442.332 mo
186.352 442.687 li
@
184.491 443.007 mo
182.563 443.291 li
@
180.573 443.535 mo
178.529 443.738 li
@
176.441 443.904 mo
174.317 444.025 li
172.165 444.105 li
169.994 444.142 li
167.812 444.136 li
165.63 444.085 li
@
165.63 444.085 mo
163.455 443.992 li
@
194.333 440.591 mo
192.936 441.07 li
@
163.455 443.992 mo
161.294 443.857 li
@
191.432 441.521 mo
189.829 441.943 li
@
161.294 443.857 mo
159.159 443.679 li
@
159.159 443.679 mo
157.056 443.457 li
@
138.746 440.736 mo
137.579 440.968 li
@
154.994 443.193 mo
152.979 442.888 li
@
138.746 440.736 mo
138.978 440.691 li
@
152.979 442.888 mo
151.019 442.542 li
149.124 442.16 li
@
195.614 440.087 mo
194.333 440.591 li
@
149.124 442.16 mo
147.297 441.738 li
145.549 441.283 li
@
182.563 443.291 mo
180.573 443.535 li
@
145.549 441.283 mo
143.882 440.789 li
@
197.594 439.13 mo
196.778 439.558 li
@
186.352 442.687 mo
184.491 443.007 li
@
178.529 443.738 mo
176.441 443.904 li
@
143.882 440.789 mo
142.304 440.265 li
@
142.021 440.158 mo
142.304 440.265 li
@
142.844 440.013 mo
146.76 439.416 li
@
154.679 438.458 mo
158.65 438.099 li
162.609 437.82 li
@
192.004 438.375 mo
195.186 438.765 li
@
188.682 438.048 mo
192.004 438.375 li
@
181.668 437.607 mo
185.233 437.792 li
@
174.25 437.46 mo
178.003 437.496 li
@
166.539 437.623 mo
170.424 437.501 li
@
146.76 439.416 mo
150.71 438.898 li
@
197.694 439.144 mo
195.186 438.765 li
@
197.594 439.13 mo
197.819 439.011 li
@
198.225 438.757 mo
197.819 439.011 li
@
185.233 437.792 mo
188.682 438.048 li
@
198.225 438.757 mo
198.729 438.443 li
@
199.139 438.134 mo
198.729 438.443 li
@
178.003 437.496 mo
181.668 437.607 li
@
199.139 438.134 mo
199.502 437.863 li
@
200.139 437.267 mo
199.502 437.863 li
@
200.211 437.177 mo
200.139 437.267 li
@
170.424 437.501 mo
174.25 437.46 li
@
200.211 437.177 mo
200.633 436.664 li
@
200.981 436.052 mo
200.633 436.664 li
@
201.042 435.875 mo
200.981 436.052 li
@
162.609 437.82 mo
166.539 437.623 li
@
201.042 435.875 mo
201.182 435.437 li
@
201.233 434.82 mo
201.182 435.437 li
@
201.17 434.447 mo
201.233 434.82 li
@
150.71 438.898 mo
154.679 438.458 li
@
198.663 431.476 mo
198.35 431.275 li
@
197.346 430.736 mo
198.35 431.275 li
@
196.948 430.558 mo
197.346 430.736 li
@
138.978 440.691 mo
142.844 440.013 li
@
132.238 433.255 mo
132.183 433.277 li
@
132.234 433.246 mo
132.412 433.644 li
@
132.872 434.384 mo
132.412 433.644 li
@
142.021 440.158 mo
140.822 439.708 li
@
136.988 437.873 mo
135.929 437.212 li
@
133.455 435.115 mo
132.872 434.384 li
134.984 436.531 mo
134.16 435.832 li
@
135.929 437.212 mo
134.984 436.531 li
@
134.16 435.832 mo
133.455 435.115 li
@
138.16 438.511 mo
136.988 437.873 li
@
140.822 439.708 mo
139.439 439.123 li
@
139.439 439.123 mo
138.16 438.511 li
@
196.948 430.558 mo
196.2 430.222 li
@
193.481 429.273 mo
194.909 429.734 li
@
190.237 428.451 mo
191.924 428.845 li
@
186.506 427.773 mo
188.428 428.093 li
@
182.342 427.259 mo
184.475 427.496 li
@
178.39 426.962 mo
177.267 427.136 li
@
169.003 427.744 mo
167.546 427.748 li
@
167.546 427.748 mo
166.085 427.72 li
@
175.974 427.302 mo
174.641 427.447 li
@
166.085 427.72 mo
164.622 427.667 li
@
173.27 427.562 mo
171.87 427.65 li
@
164.622 427.667 mo
163.164 427.583 li
@
171.87 427.65 mo
170.447 427.712 li
174.641 427.447 mo
173.27 427.562 li
170.447 427.712 mo
169.003 427.744 li
@
177.267 427.136 mo
175.974 427.302 li
@
163.164 427.583 mo
161.715 427.472 li
160.284 427.332 li
@
160.156 427.316 mo
160.284 427.332 li
@
170.445 426.787 mo
172.959 426.783 li
@
146.804 429.208 mo
149.395 428.726 li
@
194.909 429.734 mo
196.2 430.222 li
@
152.019 428.298 mo
154.667 427.921 li
@
191.924 428.845 mo
193.481 429.273 li
@
159.989 427.33 mo
162.641 427.115 li
@
160.156 427.316 mo
160.141 427.314 li
@
188.428 428.093 mo
190.237 428.451 li
@
154.667 427.921 mo
157.327 427.597 li
@
184.475 427.496 mo
186.506 427.773 li
@
167.879 426.843 mo
170.445 426.787 li
@
180.118 427.07 mo
182.342 427.259 li
@
177.804 426.925 mo
180.118 427.07 li
@
178.39 426.962 mo
178.457 426.951 li
@
175.417 426.83 mo
177.804 426.925 li
@
178.787 426.894 mo
178.515 426.943 li
@
178.457 426.951 mo
178.515 426.943 li
@
172.959 426.783 mo
175.417 426.83 li
@
181.758 426.265 mo
180.846 426.486 li
179.708 426.726 li
@
178.787 426.894 mo
179.708 426.726 li
@
162.641 427.115 mo
165.275 426.953 li
@
165.275 426.953 mo
167.879 426.843 li
@
186.129 424.687 mo
185.506 424.996 li
@
185.506 424.996 mo
184.725 425.33 li
@
184.725 425.33 mo
183.866 425.646 li
@
183.866 425.646 mo
182.928 425.943 li
@
182.928 425.943 mo
181.922 426.226 li
@
181.758 426.265 mo
181.922 426.226 li
@
157.327 427.597 mo
159.989 427.33 li
132.238 433.255 mo
132.547 433.132 li
@
186.813 424.292 mo
186.204 424.65 li
@
186.129 424.687 mo
186.204 424.65 li
@
160.141 427.314 mo
158.925 427.167 li
@
188.325 422.777 mo
188.092 423.164 li
@
188.465 422.337 mo
188.459 422.386 li
@
188.092 423.164 mo
187.758 423.546 li
@
188.459 422.386 mo
188.325 422.777 li
@
187.333 423.923 mo
186.813 424.292 li
@
187.758 423.546 mo
187.333 423.923 li
@
149.395 428.726 mo
152.019 428.298 li
134.72 432.363 mo
136.986 431.638 li
136.986 431.638 mo
139.337 430.957 li
@
158.925 427.167 mo
158.875 427.162 li
@
157.509 426.966 mo
158.875 427.162 li
@
188.465 422.337 mo
188.493 421.996 li
@
187.78 420.632 mo
187.985 420.839 li
@
188.258 421.218 mo
188.426 421.605 li
@
187.985 420.839 mo
188.258 421.218 li
@
188.426 421.605 mo
188.493 421.996 li
@
141.765 430.324 mo
144.257 429.742 li
146.804 429.208 li
@
157.509 426.966 mo
157.492 426.964 li
@
157.492 426.964 mo
156.14 426.738 li
@
155.783 426.669 mo
156.14 426.738 li
@
185.891 419.412 mo
186.565 419.751 li
@
187.139 420.103 mo
187.612 420.466 li
@
186.565 419.751 mo
187.139 420.103 li
@
185.012 419.05 mo
185.124 419.091 li
@
187.78 420.632 mo
187.612 420.466 li
@
185.124 419.091 mo
185.891 419.412 li
@
139.337 430.957 mo
141.765 430.324 li
@
155.783 426.669 mo
154.827 426.488 li
@
154.827 426.488 mo
153.555 426.208 li
@
152.679 425.992 mo
153.555 426.208 li
@
178.626 417.585 mo
179.914 417.775 li
@
181.127 417.994 mo
182.256 418.234 li
@
179.914 417.775 mo
181.127 417.994 li
@
177.265 417.421 mo
178.626 417.585 li
@
185.012 419.05 mo
184.256 418.785 li
@
183.301 418.5 mo
184.256 418.785 li
@
182.256 418.234 mo
183.301 418.5 li
@
132.547 433.132 mo
134.72 432.363 li
@
131.867 432.138 mo
131.782 431.38 li
@
131.782 431.38 mo
131.821 430.619 li
@
132.665 428.353 mo
133.182 427.613 li
@
132.234 433.246 mo
132.078 432.894 li
@
133.814 426.882 mo
134.556 426.166 li
@
132.263 429.103 mo
132.665 428.353 li
@
133.182 427.613 mo
133.814 426.882 li
@
139.845 422.818 mo
139.767 422.853 li
@
134.556 426.166 mo
135.404 425.464 li
@
152.679 425.992 mo
152.332 425.906 li
@
140.867 422.351 mo
139.845 422.818 li
@
151.159 425.58 mo
150.042 425.23 li
@
140.867 422.351 mo
141.078 422.257 li
@
150.042 425.23 mo
148.984 424.857 li
@
148.984 424.857 mo
147.99 424.462 li
@
147.99 424.462 mo
147.062 424.05 li
@
147.062 424.05 mo
146.204 423.621 li
@
146.204 423.621 mo
145.418 423.171 li
@
145.418 423.171 mo
144.708 422.708 li
@
152.332 425.906 mo
151.159 425.58 li
@
144.708 422.708 mo
144.076 422.23 li
@
144.076 422.23 mo
143.521 421.742 li
@
143.209 421.412 mo
143.521 421.742 li
@
157.287 417.982 mo
159.071 417.742 li
150.31 419.296 mo
152.017 418.916 li
@
143.917 421.148 mo
145.438 420.638 li
@
147.013 420.158 mo
148.64 419.71 li
152.017 418.916 mo
153.753 418.568 li
155.513 418.257 mo
157.287 417.982 li
@
159.071 417.742 mo
160.853 417.539 li
@
148.64 419.71 mo
150.31 419.296 li
153.753 418.568 mo
155.513 418.257 li
@
171.194 417.066 mo
172.794 417.109 li
@
145.438 420.638 mo
147.013 420.158 li
@
169.546 417.058 mo
171.194 417.066 li
@
142.463 421.689 mo
143.917 421.148 li
@
143.209 421.412 mo
143.19 421.39 li
@
141.078 422.257 mo
142.463 421.689 li
@
143.19 421.39 mo
143.048 421.242 li
@
143.023 421.208 mo
143.048 421.242 li
@
167.861 417.083 mo
169.546 417.058 li
@
138.541 423.47 mo
139.767 422.853 li
@
143.023 421.208 mo
142.88 421.023 li
@
137.4 424.115 mo
138.541 423.47 li
@
142.88 421.023 mo
142.682 420.763 li
@
136.353 424.779 mo
137.4 424.115 li
@
142.682 420.763 mo
142.658 420.732 li
@
142.452 420.386 mo
142.658 420.732 li
@
135.404 425.464 mo
136.353 424.779 li
@
142.452 420.386 mo
142.349 420.216 li
@
142.349 420.216 mo
142.125 419.693 li
@
142.023 419.314 mo
142.125 419.693 li
@
166.142 417.144 mo
167.861 417.083 li
@
160.853 417.539 mo
162.631 417.373 li
162.631 417.373 mo
164.398 417.24 li
@
142.023 419.314 mo
141.984 419.167 li
@
141.935 418.474 mo
141.926 418.638 li
141.984 419.167 mo
141.926 418.638 li
@
164.398 417.24 mo
166.142 417.144 li
@
141.935 418.474 mo
141.953 418.107 li
142.06 417.578 li
@
142.06 417.578 mo
142.248 417.052 li
@
142.248 417.052 mo
142.517 416.531 li
@
142.517 416.531 mo
142.865 416.013 li
@
143.126 415.697 mo
142.865 416.013 li
@
175.836 417.285 mo
177.265 417.421 li
@
174.344 417.181 mo
175.836 417.285 li
@
172.794 417.109 mo
174.344 417.181 li
@
176.827 413.664 mo
176.197 413.847 li
@
143.126 415.697 mo
143.288 415.505 li
@
176.197 413.847 mo
175.521 414.017 li
@
175.521 414.017 mo
174.8 414.173 li
174.038 414.318 li
@
174.038 414.318 mo
173.237 414.445 li
172.402 414.558 li
@
179.152 412.601 mo
178.802 412.828 li
@
178.802 412.828 mo
178.392 413.05 li
@
178.392 413.05 mo
177.925 413.265 li
@
177.925 413.265 mo
177.403 413.47 li
@
177.403 413.47 mo
176.827 413.664 li
@
143.288 415.505 mo
143.783 415.003 li
@
172.402 414.558 mo
171.535 414.652 li
@
171.535 414.652 mo
170.64 414.73 li
169.72 414.791 li
168.783 414.832 li
@
168.783 414.832 mo
167.828 414.857 li
166.86 414.861 li
@
166.86 414.861 mo
165.884 414.847 li
164.904 414.812 li
163.922 414.759 li
@
163.922 414.759 mo
162.946 414.685 li
@
162.946 414.685 mo
161.974 414.593 li
@
161.974 414.593 mo
161.013 414.48 li
@
161.013 414.48 mo
160.07 414.351 li
@
160.07 414.351 mo
159.142 414.201 li
@
159.142 414.201 mo
158.236 414.033 li
@
158.236 414.033 mo
157.356 413.847 li
@
157.356 413.847 mo
156.503 413.644 li
155.683 413.423 li
@
155.683 413.423 mo
154.896 413.189 li
@
154.896 413.189 mo
154.146 412.937 li
@
154.146 412.937 mo
153.439 412.669 li
@
153.439 412.669 mo
152.771 412.39 li
@
152.771 412.39 mo
152.15 412.095 li
@
152.15 412.095 mo
151.575 411.791 li
@
151.575 411.791 mo
151.047 411.474 li
@
150.72 411.25 mo
151.047 411.474 li
@
178.187 409.792 mo
178.636 410.001 li
@
163.783 408.634 mo
164.953 408.55 li
@
179.906 411.64 mo
179.816 411.884 li
@
172.407 408.605 mo
173.319 408.697 li
@
154.342 410.166 mo
155.486 409.89 li
@
179.589 410.675 mo
179.771 410.912 li
@
175.751 409.078 mo
176.451 409.236 li
@
168.337 408.441 mo
169.412 408.451 li
@
159.018 409.208 mo
160.213 409.029 li
@
179.658 412.126 mo
179.437 412.365 li
@
179.886 411.154 mo
179.929 411.396 li
@
179.021 410.218 mo
179.341 410.443 li
@
177.092 409.41 mo
177.671 409.595 li
@
174.182 408.806 mo
174.995 408.933 li
@
170.449 408.482 mo
171.45 408.535 li
@
166.105 408.492 mo
167.234 408.457 li
@
156.65 409.64 mo
157.829 409.412 li
161.408 408.873 mo
162.599 408.742 li
@
179.437 412.365 mo
179.152 412.601 li
@
179.816 411.884 mo
179.658 412.126 li
@
179.929 411.396 mo
179.906 411.64 li
@
179.771 410.912 mo
179.886 411.154 li
@
179.341 410.443 mo
179.589 410.675 li
@
178.636 410.001 mo
179.021 410.218 li
@
177.671 409.595 mo
178.187 409.792 li
@
176.451 409.236 mo
177.092 409.41 li
@
174.995 408.933 mo
175.751 409.078 li
@
152.132 410.783 mo
153.223 410.462 li
@
173.319 408.697 mo
174.182 408.806 li
@
150.058 411.484 mo
151.076 411.123 li
@
150.72 411.25 mo
150.709 411.242 li
@
171.45 408.535 mo
172.407 408.605 li
@
169.412 408.451 mo
170.449 408.482 li
147.277 412.683 mo
148.154 412.267 li
@
145.691 413.57 mo
146.456 413.119 li
@
167.234 408.457 mo
168.337 408.441 li
@
144.352 414.513 mo
144.99 414.035 li
@
164.953 408.55 mo
166.105 408.492 li
@
153.223 410.462 mo
154.342 410.166 li
155.486 409.89 mo
156.65 409.64 li
157.829 409.412 mo
159.018 409.208 li
160.213 409.029 mo
161.408 408.873 li
162.599 408.742 mo
163.783 408.634 li
@
151.076 411.123 mo
152.132 410.783 li
@
173.137 403.66 mo
172.826 403.789 li
@
172.826 403.789 mo
172.472 403.912 li
@
150.709 411.242 mo
150.699 411.234 li
@
172.472 403.912 mo
172.086 404.027 li
171.665 404.134 li
171.212 404.236 li
@
171.212 404.236 mo
170.729 404.326 li
@
173.838 403.244 mo
173.646 403.386 li
@
170.729 404.326 mo
170.218 404.408 li
@
173.413 403.525 mo
173.137 403.66 li
@
170.218 404.408 mo
169.681 404.478 li
169.121 404.539 li
@
173.646 403.386 mo
173.413 403.525 li
@
169.121 404.539 mo
168.541 404.589 li
167.939 404.626 li
@
167.552 404.642 mo
167.939 404.626 li
@
174.153 402.802 mo
174.093 402.951 li
@
174.065 402.359 mo
174.139 402.505 li
@
173.989 403.097 mo
173.838 403.244 li
@
174.139 402.505 mo
174.17 402.654 li
@
174.093 402.951 mo
173.989 403.097 li
@
174.17 402.654 mo
174.153 402.802 li
@
173.884 402.166 mo
173.944 402.214 li
@
148.154 412.267 mo
149.083 411.867 li
@
146.456 413.119 mo
147.277 412.683 li
@
144.99 414.035 mo
145.691 413.57 li
@
143.783 415.003 mo
144.352 414.513 li
@
149.083 411.867 mo
150.058 411.484 li
@
149.616 406.087 mo
149.949 405.736 li
@
149.775 410.466 mo
149.458 410.113 li
@
149.197 409.755 mo
148.99 409.394 li
@
148.837 409.027 mo
148.744 408.656 li
@
148.705 408.287 mo
148.721 407.914 li
@
148.794 407.544 mo
148.919 407.173 li
@
149.099 406.808 mo
149.333 406.445 li
@
150.147 410.81 mo
149.775 410.466 li
@
148.99 409.394 mo
148.837 409.027 li
@
148.721 407.914 mo
148.794 407.544 li
@
149.333 406.445 mo
149.616 406.087 li
@
148.744 408.656 mo
148.705 408.287 li
@
148.919 407.173 mo
149.099 406.808 li
@
149.458 410.113 mo
149.197 409.755 li
@
150.57 411.146 mo
150.147 410.81 li
@
150.699 411.234 mo
150.57 411.146 li
@
155.7 402.697 mo
155.542 402.748 li
@
154.153 403.25 mo
154.835 402.99 li
154.835 402.99 mo
155.542 402.748 li
@
152.877 403.804 mo
153.5 403.521 li
153.5 403.521 mo
154.153 403.25 li
@
151.738 404.41 mo
152.289 404.101 li
152.289 404.101 mo
152.877 403.804 li
@
150.755 405.054 mo
151.226 404.728 li
151.226 404.728 mo
151.738 404.41 li
@
150.33 405.392 mo
150.755 405.054 li
@
149.949 405.736 mo
150.33 405.392 li
@
155.156 402.349 mo
154.802 402.123 li
@
153.289 399.339 mo
153.374 399.08 li
153.496 398.82 li
@
167.552 404.642 mo
167.324 404.652 li
@
167.324 404.652 mo
166.694 404.667 li
166.052 404.667 li
165.406 404.658 li
@
165.406 404.658 mo
164.751 404.634 li
164.093 404.597 li
163.435 404.546 li
@
163.435 404.546 mo
162.78 404.482 li
162.129 404.406 li
@
162.129 404.406 mo
161.486 404.318 li
160.851 404.216 li
@
160.851 404.216 mo
160.23 404.101 li
159.622 403.976 li
@
159.622 403.976 mo
159.032 403.837 li
@
159.032 403.837 mo
158.46 403.687 li
157.91 403.527 li
@
157.91 403.527 mo
157.383 403.353 li
156.88 403.171 li
@
155.705 402.695 mo
155.7 402.697 li
@
156.88 403.171 mo
156.406 402.98 li
@
155.747 402.683 mo
155.705 402.695 li
@
156.406 402.98 mo
155.958 402.777 li
@
155.76 402.677 mo
155.747 402.683 li
@
155.742 402.669 mo
155.958 402.777 li
@
155.76 402.677 mo
156.273 402.517 li
157.023 402.302 mo
157.791 402.101 li
@
158.57 401.917 mo
159.359 401.75 li
@
170.32 401.113 mo
170.864 401.183 li
@
164.906 401.023 mo
165.664 400.984 li
@
172.269 401.457 mo
172.658 401.566 li
@
167.818 400.957 mo
168.488 400.976 li
@
161.759 401.341 mo
162.557 401.238 li
@
173.002 401.683 mo
173.304 401.808 li
@
171.371 401.263 mo
171.839 401.355 li
@
169.13 401.007 mo
169.741 401.054 li
@
166.403 400.96 mo
167.123 400.951 li
@
160.158 401.597 mo
160.958 401.46 li
163.35 401.15 mo
164.134 401.08 li
@
173.304 401.808 mo
173.563 401.939 li
@
172.658 401.566 mo
173.002 401.683 li
@
171.839 401.355 mo
172.269 401.457 li
@
170.864 401.183 mo
171.371 401.263 li
@
169.741 401.054 mo
170.32 401.113 li
@
168.488 400.976 mo
169.13 401.007 li
@
165.664 400.984 mo
166.403 400.96 li
167.123 400.951 mo
167.818 400.957 li
@
159.359 401.75 mo
160.158 401.597 li
160.958 401.46 mo
161.759 401.341 li
162.557 401.238 mo
163.35 401.15 li
164.134 401.08 mo
164.906 401.023 li
@
173.884 402.166 mo
173.776 402.076 li
@
157.791 402.101 mo
158.57 401.917 li
@
173.563 401.939 mo
173.776 402.076 li
@
156.273 402.517 mo
157.023 402.302 li
@
155.742 402.669 mo
155.541 402.568 li
@
154.802 402.123 mo
154.482 401.89 li
@
154.197 401.65 mo
153.949 401.406 li
@
153.736 401.156 mo
153.56 400.904 li
@
153.421 400.646 mo
153.32 400.386 li
@
153.256 400.126 mo
153.23 399.863 li
@
153.242 399.601 mo
153.289 399.339 li
@
153.65 398.564 mo
153.839 398.31 li
@
155.541 402.568 mo
155.156 402.349 li
@
154.482 401.89 mo
154.197 401.65 li
@
153.949 401.406 mo
153.736 401.156 li
@
153.56 400.904 mo
153.421 400.646 li
@
153.275 400.201 mo
153.32 400.386 li
@
168.904 396.249 mo
168.894 396.25 li
@
153.275 400.201 mo
153.256 400.126 li
@
153.23 399.863 mo
153.242 399.601 li
@
168.612 396.313 mo
168.308 396.368 li
@
153.496 398.82 mo
153.65 398.564 li
@
153.971 398.164 mo
153.839 398.31 li
@
167.984 396.417 mo
167.641 396.458 li
@
153.971 398.164 mo
154.063 398.062 li
@
154.354 397.787 mo
154.318 397.818 li
@
154.063 398.062 mo
154.318 397.818 li
@
166.906 396.522 mo
166.515 396.545 li
154.767 397.458 mo
154.919 397.345 li
155.185 397.171 mo
154.919 397.345 li
167.281 396.495 mo
166.906 396.522 li
154.354 397.787 mo
154.603 397.578 li
154.767 397.458 mo
154.603 397.578 li
167.641 396.458 mo
167.281 396.495 li
@
155.598 396.919 mo
155.261 397.119 li
@
166.515 396.545 mo
166.113 396.559 li
155.185 397.171 mo
155.261 397.119 li
@
155.999 396.702 mo
155.63 396.9 li
@
155.598 396.919 mo
155.63 396.9 li
@
166.113 396.559 mo
165.701 396.565 li
@
155.999 396.702 mo
156.025 396.688 li
156.38 396.514 mo
156.025 396.688 li
@
165.701 396.565 mo
165.279 396.563 li
@
156.742 396.35 mo
156.443 396.483 li
@
156.38 396.514 mo
156.443 396.483 li
@
165.279 396.563 mo
164.849 396.551 li
@
157.074 396.209 mo
156.88 396.29 li
@
156.742 396.35 mo
156.88 396.29 li
@
164.849 396.551 mo
164.414 396.532 li
@
157.376 396.089 mo
157.337 396.103 li
157.074 396.209 mo
157.337 396.103 li
@
164.414 396.532 mo
163.974 396.504 li
@
157.658 395.984 mo
157.376 396.089 li
@
163.974 396.504 mo
163.533 396.469 li
@
157.908 395.894 mo
157.811 395.927 li
@
157.658 395.984 mo
157.811 395.927 li
@
163.533 396.469 mo
163.093 396.422 li
@
158.132 395.818 mo
157.908 395.894 li
@
163.093 396.422 mo
162.653 396.37 li
@
158.132 395.818 mo
158.301 395.759 li
@
158.328 395.751 mo
158.301 395.759 li
@
162.653 396.37 mo
162.218 396.307 li
@
158.503 395.697 mo
158.328 395.751 li
@
162.218 396.307 mo
161.787 396.235 li
@
158.652 395.65 mo
158.503 395.697 li
@
161.787 396.235 mo
161.361 396.158 li
@
168.308 396.368 mo
167.984 396.417 li
@
161.361 396.158 mo
160.944 396.07 li
160.536 395.974 li
160.141 395.869 li
158.774 395.613 mo
158.652 395.65 li
@
168.894 396.25 mo
168.612 396.313 li
@
160.141 395.869 mo
159.757 395.757 li
159.388 395.638 li
@
159.074 395.525 mo
159.388 395.638 li
@
162.511 394.799 mo
163.043 394.729 li
160.904 395.08 mo
161.439 394.976 li
161.977 394.882 mo
162.511 394.799 li
@
158.774 395.613 mo
158.803 395.603 li
158.803 395.603 mo
159.318 395.457 li
@
159.074 395.525 mo
159.064 395.521 li
@
160.37 395.195 mo
160.904 395.08 li
161.439 394.976 mo
161.977 394.882 li
163.043 394.729 mo
163.568 394.667 li
@
159.318 395.457 mo
159.84 395.32 li
@
159.064 395.521 mo
159.035 395.511 li
@
159.84 395.32 mo
160.37 395.195 li
@
159.035 395.511 mo
158.699 395.378 li
158.378 395.238 li
@
158.26 395.179 mo
158.378 395.238 li
@
166.916 394.532 mo
167.326 394.549 li
167.477 394.561 mo
167.326 394.549 li
@
163.568 394.667 mo
164.086 394.618 li
164.086 394.618 mo
164.593 394.579 li
165.089 394.549 mo
165.57 394.532 li
165.57 394.532 mo
166.037 394.522 li
166.037 394.522 mo
166.486 394.522 li
166.486 394.522 mo
166.916 394.532 li
@
158.26 395.179 mo
158.08 395.091 li
@
157.862 394.972 mo
158.08 395.091 li
@
164.593 394.579 mo
165.089 394.549 li
@
156.657 391.898 mo
156.806 391.72 li
@
157.799 394.939 mo
157.541 394.78 li
@
157.304 394.618 mo
157.089 394.45 li
@
156.589 393.927 mo
156.47 393.746 li
156.898 394.278 mo
156.732 394.105 li
@
156.376 393.562 mo
156.309 393.378 li
@
156.266 393.191 mo
156.25 393.003 li
@
156.255 392.818 mo
156.289 392.63 li
@
156.345 392.445 mo
156.425 392.261 li
@
156.53 392.08 mo
156.657 391.898 li
@
157.089 394.45 mo
156.898 394.278 li
@
156.47 393.746 mo
156.376 393.562 li
@
156.25 393.003 mo
156.255 392.818 li
@
156.425 392.261 mo
156.53 392.08 li
@
156.732 394.105 mo
156.589 393.927 li
@
156.289 392.63 mo
156.345 392.445 li
@
157.541 394.78 mo
157.304 394.618 li
@
156.309 393.378 mo
156.266 393.191 li
@
157.862 394.972 mo
157.799 394.939 li
@
159.983 389.945 mo
160.327 389.835 li
160.327 389.835 mo
160.676 389.734 li
160.784 389.705 mo
160.676 389.734 li
@
158.693 390.446 mo
159 390.311 li
159 390.311 mo
159.318 390.182 li
159.318 390.182 mo
159.645 390.06 li
159.645 390.06 mo
159.983 389.945 li
@
157.61 391.046 mo
157.857 390.888 li
157.857 390.888 mo
158.121 390.735 li
158.121 390.735 mo
158.4 390.588 li
158.4 390.588 mo
158.693 390.446 li
@
156.978 391.544 mo
157.168 391.375 li
157.168 391.375 mo
157.379 391.208 li
157.379 391.208 mo
157.61 391.046 li
@
156.806 391.72 mo
156.978 391.544 li
@
163.442 390.009 mo
163.146 389.976 li
@
159.126 388.694 mo
158.968 388.575 li
@
158.968 388.575 mo
158.826 388.454 li
@
160.784 389.705 mo
161.031 389.638 li
@
162.556 389.89 mo
162.263 389.839 li
@
162.263 389.839 mo
161.974 389.783 li
161.689 389.72 li
@
162.85 389.935 mo
162.556 389.89 li
163.648 390.029 mo
163.442 390.009 li
163.146 389.976 mo
162.85 389.935 li
@
161.689 389.72 mo
161.41 389.65 li
@
161.207 389.597 mo
161.41 389.65 li
@
161.389 389.552 mo
161.749 389.472 li
@
162.109 389.398 mo
162.466 389.333 li
162.99 389.25 mo
162.823 389.275 li
162.466 389.333 mo
162.823 389.275 li
@
161.031 389.638 mo
161.389 389.552 li
161.749 389.472 mo
162.109 389.398 li
@
158.301 387.681 mo
158.272 387.546 li
158.26 387.414 li
@
161.136 389.578 mo
160.871 389.498 li
@
158.26 387.414 mo
158.265 387.279 li
@
160.614 389.414 mo
160.367 389.324 li
@
158.265 387.279 mo
158.287 387.144 li
@
160.127 389.23 mo
159.903 389.13 li
@
158.287 387.144 mo
158.324 387.011 li
@
159.689 389.027 mo
159.489 388.921 li
@
158.324 387.011 mo
158.377 386.878 li
@
159.3 388.809 mo
159.126 388.694 li
@
158.377 386.878 mo
158.447 386.748 li
@
158.697 388.331 mo
158.584 388.204 li
@
158.447 386.748 mo
158.533 386.619 li
@
158.489 388.076 mo
158.41 387.947 li
@
158.533 386.619 mo
158.632 386.49 li
@
158.347 387.814 mo
158.301 387.681 li
@
158.632 386.49 mo
158.748 386.365 li
@
160.871 389.498 mo
160.614 389.414 li
@
159.903 389.13 mo
159.689 389.027 li
@
158.826 388.454 mo
158.697 388.331 li
@
158.41 387.947 mo
158.347 387.814 li
@
160.367 389.324 mo
160.127 389.23 li
@
158.584 388.204 mo
158.489 388.076 li
@
161.207 389.597 mo
161.136 389.578 li
@
159.489 388.921 mo
159.3 388.809 li
@
159.513 385.777 mo
159.701 385.669 li
159.883 385.574 mo
159.701 385.669 li
@
158.748 386.365 mo
158.875 386.24 li
158.875 386.24 mo
159.017 386.121 li
159.017 386.121 mo
159.171 386.001 li
159.171 386.001 mo
159.335 385.888 li
159.335 385.888 mo
159.513 385.777 li
@
173.944 402.214 mo
174.065 402.359 li
@
206.782 441.085 mo
208.624 441.626 li
@
208.624 441.626 mo
210.754 442.353 li
@
214.393 443.929 mo
215.891 444.773 li
@
218.227 446.544 mo
219.059 447.464 li
@
220.192 450.306 mo
220.118 451.265 li
@
219.665 448.402 mo
220.042 449.349 li
@
215.891 444.773 mo
217.17 445.646 li
@
210.754 442.353 mo
212.678 443.121 li
@
220.042 449.349 mo
220.192 450.306 li
@
218.139 454.531 mo
218.561 454.119 li
@
219.059 447.464 mo
219.665 448.402 li
@
219.299 453.177 mo
218.561 454.119 li
@
217.17 445.646 mo
218.227 446.544 li
@
219.819 452.226 mo
219.299 453.177 li
@
220.118 451.265 mo
219.819 452.226 li
@
212.678 443.121 mo
214.393 443.929 li
@
199.918 432.408 mo
200.473 432.996 li
@
198.663 431.476 mo
199.209 431.832 li
@
201.17 434.447 mo
201.131 434.207 li
@
200.879 433.597 mo
201.131 434.207 li
@
200.473 432.996 mo
200.879 433.597 li
@
199.209 431.832 mo
199.918 432.408 li
@
168.904 396.249 mo
169.154 396.186 li
170.169 395.714 mo
170.07 395.798 li
169.941 395.882 li
169.783 395.962 li
169.599 396.041 li
169.39 396.117 li
169.154 396.186 li
@
167.477 394.561 mo
167.712 394.577 li
168.078 394.61 mo
168.417 394.653 li
@
169.886 395.033 mo
170.029 395.113 li
170.273 395.365 mo
170.292 395.451 li
@
169.019 394.756 mo
169.279 394.819 li
@
170.14 395.193 mo
170.222 395.279 li
@
169.511 394.886 mo
169.714 394.957 li
@
168.417 394.653 mo
168.732 394.702 li
@
170.029 395.113 mo
170.14 395.193 li
170.222 395.279 mo
170.273 395.365 li
@
169.279 394.819 mo
169.511 394.886 li
169.714 394.957 mo
169.886 395.033 li
@
170.241 395.626 mo
170.169 395.714 li
@
168.732 394.702 mo
169.019 394.756 li
@
170.292 395.451 mo
170.282 395.539 li
170.282 395.539 mo
170.241 395.626 li
@
167.712 394.577 mo
168.078 394.61 li
@
167.597 389.671 mo
167.529 389.718 li
167.443 389.765 li
167.338 389.808 li
167.214 389.853 li
167.074 389.892 li
166.916 389.929 li
166.741 389.964 li
166.552 389.996 li
166.348 390.021 li
166.13 390.044 li
165.901 390.064 li
@
165.901 390.064 mo
165.66 390.08 li
165.407 390.087 li
165.146 390.093 li
164.876 390.093 li
164.599 390.087 li
164.316 390.076 li
164.029 390.058 li
163.737 390.037 li
@
163.648 390.029 mo
163.737 390.037 li
@
167.632 389.429 mo
167.666 389.476 li
@
166.197 389.083 mo
166.423 389.101 li
@
167.644 389.623 mo
167.597 389.671 li
@
164.193 389.113 mo
164.517 389.091 li
167.292 389.253 mo
167.408 389.294 li
@
167.502 389.337 mo
167.578 389.382 li
167.679 389.525 mo
167.671 389.574 li
@
162.99 389.25 mo
163.175 389.224 li
164.83 389.074 mo
165.129 389.064 li
167.001 389.181 mo
167.157 389.216 li
@
167.408 389.294 mo
167.502 389.337 li
167.578 389.382 mo
167.632 389.429 li
167.666 389.476 mo
167.679 389.525 li
167.671 389.574 mo
167.644 389.623 li
@
165.129 389.064 mo
165.417 389.06 li
163.175 389.224 mo
163.522 389.179 li
163.522 389.179 mo
163.862 389.144 li
165.693 389.062 mo
165.953 389.072 li
165.953 389.072 mo
166.197 389.083 li
166.634 389.125 mo
166.828 389.15 li
166.828 389.15 mo
167.001 389.181 li
163.862 389.144 mo
164.193 389.113 li
164.517 389.091 mo
164.83 389.074 li
165.417 389.06 mo
165.693 389.062 li
166.423 389.101 mo
166.634 389.125 li
167.157 389.216 mo
167.292 389.253 li
@
162.519 384.707 mo
162.425 384.724 li
162.186 384.777 mo
162.425 384.724 li
@
160.76 385.195 mo
160.992 385.113 li
161.944 384.833 mo
162.186 384.777 li
@
160.103 385.466 mo
160.316 385.371 li
160.316 385.371 mo
160.535 385.281 li
@
161.462 384.964 mo
161.703 384.896 li
161.703 384.896 mo
161.944 384.833 li
160.535 385.281 mo
160.76 385.195 li
@
159.883 385.574 mo
159.897 385.566 li
159.897 385.566 mo
160.103 385.466 li
@
160.992 385.113 mo
161.226 385.037 li
161.226 385.037 mo
161.462 384.964 li
@
162.283 384.65 mo
162.089 384.605 li
@
159.606 382.949 mo
159.599 382.851 li
@
165.893 384.703 mo
165.861 384.726 li
165.861 384.726 mo
165.816 384.751 li
165.757 384.775 li
165.687 384.794 li
165.605 384.816 li
165.509 384.835 li
165.404 384.853 li
165.287 384.867 li
165.161 384.878 li
165.023 384.89 li
164.877 384.898 li
164.723 384.902 li
164.561 384.904 li
164.392 384.904 li
@
164.392 384.904 mo
164.217 384.898 li
164.037 384.89 li
163.851 384.878 li
163.661 384.863 li
163.468 384.845 li
163.271 384.822 li
163.074 384.794 li
162.876 384.765 li
@
162.526 384.705 mo
162.519 384.707 li
@
162.876 384.765 mo
162.677 384.73 li
@
162.534 384.703 mo
162.526 384.705 li
@
162.527 384.701 mo
162.677 384.73 li
@
164.761 384.457 mo
164.923 384.457 li
165.736 384.541 mo
165.799 384.56 li
162.9 384.634 mo
163.132 384.597 li
163.359 384.564 li
162.534 384.703 mo
162.664 384.677 li
@
165.908 384.63 mo
165.917 384.654 li
@
164.007 384.492 mo
164.21 384.476 li
165.347 384.476 mo
165.463 384.49 li
@
165.912 384.677 mo
165.893 384.703 li
@
163.583 384.535 mo
163.798 384.511 li
164.402 384.466 mo
164.586 384.458 li
165.077 384.46 mo
165.217 384.466 li
165.567 384.503 mo
165.658 384.521 li
165.85 384.582 mo
165.886 384.605 li
@
165.886 384.605 mo
165.908 384.63 li
165.917 384.654 mo
165.912 384.677 li
@
162.664 384.677 mo
162.9 384.634 li
163.359 384.564 mo
163.583 384.535 li
163.798 384.511 mo
164.007 384.492 li
164.21 384.476 mo
164.402 384.466 li
164.586 384.458 mo
164.761 384.457 li
164.923 384.457 mo
165.077 384.46 li
165.217 384.466 mo
165.347 384.476 li
165.463 384.49 mo
165.567 384.503 li
165.658 384.521 mo
165.736 384.541 li
165.799 384.56 mo
165.85 384.582 li
@
162.089 384.605 mo
161.898 384.554 li
162.527 384.701 mo
162.48 384.693 li
@
161.011 384.251 mo
160.852 384.181 li
161.35 384.384 mo
161.177 384.32 li
161.711 384.501 mo
161.528 384.445 li
@
160.422 383.951 mo
160.297 383.869 li
160.701 384.107 mo
160.557 384.031 li
@
159.977 383.609 mo
159.891 383.519 li
160.18 383.785 mo
160.074 383.697 li
@
159.625 383.044 mo
159.606 382.949 li
159.7 383.238 mo
159.657 383.142 li
159.817 383.427 mo
159.752 383.333 li
@
159.641 382.56 mo
159.677 382.464 li
159.601 382.753 mo
159.616 382.656 li
@
159.781 382.275 mo
159.847 382.181 li
159.924 382.089 li
159.677 382.464 mo
159.723 382.369 li
@
161.898 384.554 mo
161.711 384.501 li
@
161.177 384.32 mo
161.011 384.251 li
@
162.48 384.693 mo
162.283 384.65 li
@
161.528 384.445 mo
161.35 384.384 li
@
160.491 383.99 mo
160.557 384.031 li
160.852 384.181 mo
160.701 384.107 li
@
164.723 380.662 mo
164.71 380.671 li
@
159.616 382.656 mo
159.641 382.56 li
159.599 382.851 mo
159.601 382.753 li
@
159.891 383.519 mo
159.817 383.427 li
@
159.657 383.142 mo
159.625 383.044 li
@
160.074 383.697 mo
159.977 383.609 li
@
159.752 383.333 mo
159.7 383.238 li
@
159.723 382.369 mo
159.781 382.275 li
@
160.491 383.99 mo
160.422 383.951 li
@
160.297 383.869 mo
160.18 383.785 li
@
164.689 380.681 mo
164.658 380.691 li
@
159.924 382.089 mo
160.01 382 li
@
161.273 381.226 mo
161.427 381.166 li
161.584 381.107 mo
161.744 381.05 li
@
160.208 381.826 mo
160.319 381.742 li
@
160.694 381.505 mo
160.832 381.431 li
@
160.438 381.66 mo
160.563 381.582 li
@
160.974 381.359 mo
161.122 381.292 li
@
163.925 380.726 mo
163.817 380.722 li
164.125 380.73 mo
164.029 380.73 li
164.029 380.73 mo
163.925 380.726 li
164.382 380.724 mo
164.303 380.73 li
164.517 380.714 mo
164.454 380.72 li
164.454 380.72 mo
164.382 380.724 li
@
164.71 380.671 mo
164.689 380.681 li
@
163.585 380.705 mo
163.463 380.693 li
164.572 380.707 mo
164.517 380.714 li
164.658 380.691 mo
164.62 380.699 li
164.303 380.73 mo
164.218 380.73 li
164.125 380.73 li
163.704 380.714 mo
163.585 380.705 li
164.62 380.699 mo
164.572 380.707 li
163.817 380.722 mo
163.704 380.714 li
@
163.321 380.677 mo
163.339 380.679 li
163.463 380.693 mo
163.339 380.679 li
@
164.721 380.642 mo
164.726 380.652 li
164.726 380.652 mo
164.723 380.662 li
@
161.744 381.05 mo
161.904 381 li
@
164.705 380.632 mo
164.721 380.642 li
@
161.427 381.166 mo
161.584 381.107 li
@
164.681 380.625 mo
164.705 380.632 li
@
161.122 381.292 mo
161.273 381.226 li
@
164.648 380.617 mo
164.681 380.625 li
@
160.832 381.431 mo
160.974 381.359 li
@
164.605 380.609 mo
164.648 380.617 li
@
160.563 381.582 mo
160.694 381.505 li
@
164.553 380.603 mo
164.605 380.609 li
@
160.319 381.742 mo
160.438 381.66 li
@
164.492 380.597 mo
164.553 380.603 li
@
160.01 382 mo
160.104 381.912 li
160.104 381.912 mo
160.208 381.826 li
@
163.449 380.658 mo
163.583 380.642 li
163.583 380.642 mo
163.712 380.628 li
163.712 380.628 mo
163.835 380.615 li
163.835 380.615 mo
163.953 380.607 li
163.953 380.607 mo
164.062 380.599 li
164.164 380.595 li
164.164 380.595 mo
164.259 380.593 li
164.345 380.593 li
164.345 380.593 mo
164.423 380.595 li
164.492 380.597 li
@
163.164 380.701 mo
163.308 380.679 li
163.308 380.679 mo
163.449 380.658 li
@
163.321 380.677 mo
163.312 380.675 li
@
163.015 380.726 mo
163.164 380.701 li
161.904 381 mo
162.066 380.951 li
162.066 380.951 mo
162.227 380.904 li
162.227 380.904 mo
162.388 380.863 li
162.388 380.863 mo
162.548 380.824 li
162.548 380.824 mo
162.706 380.789 li
162.706 380.789 mo
162.863 380.755 li
162.863 380.755 mo
163.015 380.726 li
@
160.489 379.056 mo
160.499 378.984 li
@
163.312 380.675 mo
163.212 380.662 li
@
160.499 378.984 mo
160.516 378.914 li
@
163.083 380.644 mo
162.951 380.621 li
@
160.516 378.914 mo
160.54 378.843 li
@
162.82 380.597 mo
162.687 380.572 li
@
160.54 378.843 mo
160.571 378.775 li
@
162.552 380.541 mo
162.421 380.509 li
@
160.571 378.775 mo
160.609 378.705 li
@
162.289 380.474 mo
162.16 380.439 li
@
160.609 378.705 mo
160.653 378.636 li
@
162.031 380.398 mo
161.904 380.355 li
@
160.653 378.636 mo
160.706 378.57 li
@
161.782 380.312 mo
161.663 380.265 li
@
160.706 378.57 mo
160.763 378.503 li
@
160.956 379.876 mo
160.878 379.812 li
161.132 379.998 mo
161.041 379.937 li
161.33 380.111 mo
161.228 380.054 li
161.546 380.214 mo
161.435 380.164 li
@
160.59 379.48 mo
160.553 379.41 li
160.684 379.617 mo
160.633 379.55 li
160.807 379.75 mo
160.742 379.683 li
@
160.493 379.199 mo
160.487 379.126 li
160.526 379.339 mo
160.505 379.269 li
@
162.687 380.572 mo
162.552 380.541 li
163.212 380.662 mo
163.083 380.644 li
@
161.663 380.265 mo
161.546 380.214 li
162.16 380.439 mo
162.031 380.398 li
@
161.228 380.054 mo
161.132 379.998 li
@
160.633 379.55 mo
160.59 379.48 li
160.878 379.812 mo
160.807 379.75 li
@
160.505 379.269 mo
160.493 379.199 li
@
162.951 380.621 mo
162.82 380.597 li
@
161.904 380.355 mo
161.782 380.312 li
@
161.435 380.164 mo
161.33 380.111 li
@
160.742 379.683 mo
160.684 379.617 li
@
160.553 379.41 mo
160.526 379.339 li
@
162.421 380.509 mo
162.289 380.474 li
@
161.041 379.937 mo
160.956 379.876 li
@
160.487 379.126 mo
160.489 379.056 li
@
162.568 377.582 mo
162.672 377.552 li
162.775 377.529 li
162.975 377.484 mo
162.972 377.484 li
162.775 377.529 mo
162.875 377.505 li
162.972 377.484 li
@
161.408 378.027 mo
161.507 377.976 li
161.507 377.976 mo
161.608 377.925 li
161.608 377.925 mo
161.711 377.878 li
161.711 377.878 mo
161.818 377.833 li
161.818 377.833 mo
161.923 377.791 li
161.923 377.791 mo
162.032 377.75 li
162.032 377.75 mo
162.14 377.712 li
162.14 377.712 mo
162.248 377.675 li
162.248 377.675 mo
162.355 377.642 li
162.355 377.642 mo
162.462 377.611 li
162.568 377.582 li
@
160.763 378.503 mo
160.826 378.437 li
160.826 378.437 mo
160.895 378.375 li
160.895 378.375 mo
160.969 378.312 li
160.969 378.312 mo
161.048 378.251 li
161.048 378.251 mo
161.132 378.193 li
161.132 378.193 mo
161.22 378.136 li
161.22 378.136 mo
161.314 378.08 li
161.314 378.08 mo
161.408 378.027 li
@
161.865 376.939 mo
161.788 376.9 li
@
161.076 376.085 mo
161.078 376.033 li
161.084 375.98 li
@
162.462 377.16 mo
162.374 377.132 li
162.374 377.132 mo
162.287 377.105 li
@
161.084 375.98 mo
161.095 375.927 li
161.111 375.876 li
@
162.113 377.042 mo
162.028 377.009 li
@
161.111 375.876 mo
161.132 375.824 li
@
161.945 376.974 mo
161.865 376.939 li
@
161.132 375.824 mo
161.158 375.773 li
@
161.712 376.861 mo
161.642 376.82 li
@
161.158 375.773 mo
161.187 375.722 li
@
161.574 376.777 mo
161.509 376.734 li
@
161.187 375.722 mo
161.221 375.671 li
@
161.449 376.689 mo
161.391 376.642 li
@
161.221 375.671 mo
161.26 375.623 li
@
161.339 376.595 mo
161.291 376.546 li
@
161.26 375.623 mo
161.302 375.574 li
@
161.089 376.191 mo
161.08 376.138 li
161.123 376.294 mo
161.103 376.244 li
161.175 376.398 mo
161.146 376.347 li
161.248 376.498 mo
161.208 376.449 li
@
161.391 376.642 mo
161.339 376.595 li
161.642 376.82 mo
161.574 376.777 li
162.028 377.009 mo
161.945 376.974 li
162.287 377.105 mo
162.199 377.074 li
@
161.103 376.244 mo
161.089 376.191 li
161.208 376.449 mo
161.175 376.398 li
@
161.509 376.734 mo
161.449 376.689 li
162.199 377.074 mo
162.113 377.042 li
162.483 377.166 mo
162.462 377.16 li
@
161.08 376.138 mo
161.076 376.085 li
161.291 376.546 mo
161.248 376.498 li
@
161.788 376.9 mo
161.712 376.861 li
@
161.146 376.347 mo
161.123 376.294 li
@
161.896 375.152 mo
161.966 375.117 li
162.038 375.083 li
162.191 375.019 mo
162.182 375.021 li
162.038 375.083 mo
162.111 375.052 li
162.182 375.021 li
@
161.302 375.574 mo
161.349 375.527 li
161.349 375.527 mo
161.398 375.482 li
161.398 375.482 mo
161.453 375.435 li
161.453 375.435 mo
161.507 375.392 li
161.507 375.392 mo
161.568 375.347 li
161.568 375.347 mo
161.628 375.306 li
161.628 375.306 mo
161.693 375.267 li
161.693 375.267 mo
161.759 375.226 li
161.759 375.226 mo
161.826 375.189 li
@
161.826 375.189 mo
161.896 375.152 li
@
161.468 373.64 mo
161.466 373.599 li
@
162.048 374.275 mo
161.996 374.246 li
162.091 374.294 mo
162.048 374.275 li
@
161.466 373.599 mo
161.466 373.562 li
161.471 373.521 li
@
161.996 374.246 mo
161.944 374.216 li
161.944 374.216 mo
161.894 374.185 li
@
161.471 373.521 mo
161.478 373.482 li
161.49 373.443 li
@
161.799 374.121 mo
161.756 374.087 li
@
161.49 373.443 mo
161.503 373.406 li
@
161.716 374.054 mo
161.677 374.017 li
@
161.503 373.406 mo
161.52 373.367 li
@
161.642 373.982 mo
161.611 373.947 li
@
161.52 373.367 mo
161.54 373.328 li
@
161.581 373.91 mo
161.555 373.871 li
@
161.54 373.328 mo
161.563 373.291 li
@
161.533 373.833 mo
161.512 373.794 li
@
161.563 373.291 mo
161.589 373.253 li
@
161.496 373.757 mo
161.484 373.718 li
@
161.589 373.253 mo
161.618 373.218 li
@
161.475 373.679 mo
161.468 373.64 li
@
161.618 373.218 mo
161.648 373.183 li
@
161.677 374.017 mo
161.642 373.982 li
161.845 374.152 mo
161.799 374.121 li
@
161.512 373.794 mo
161.496 373.757 li
161.611 373.947 mo
161.581 373.91 li
161.484 373.718 mo
161.475 373.679 li
161.555 373.871 mo
161.533 373.833 li
@
161.756 374.087 mo
161.716 374.054 li
161.894 374.185 mo
161.845 374.152 li
@
161.755 373.08 mo
161.793 373.046 li
161.835 373.013 li
161.911 372.96 mo
161.878 372.982 li
161.835 373.013 mo
161.878 372.982 li
@
161.648 373.183 mo
161.681 373.146 li
161.681 373.146 mo
161.716 373.113 li
161.716 373.113 mo
161.755 373.08 li
@
161.728 371.628 mo
161.724 371.599 li
@
163.325 377.419 mo
163.404 377.408 li
163.447 377.402 mo
163.404 377.408 li
163.156 377.449 mo
163.243 377.433 li
163.243 377.433 mo
163.325 377.419 li
162.975 377.484 mo
163.066 377.464 li
163.066 377.464 mo
163.156 377.449 li
@
162.641 377.207 mo
162.552 377.185 li
162.818 377.25 mo
162.73 377.23 li
162.73 377.23 mo
162.641 377.207 li
@
163.447 377.402 mo
163.476 377.398 li
163.476 377.398 mo
163.545 377.39 li
@
162.906 377.267 mo
162.818 377.25 li
163.074 377.298 mo
162.99 377.283 li
162.99 377.283 mo
162.906 377.267 li
@
163.84 377.365 mo
163.869 377.365 li
163.869 377.365 mo
163.892 377.365 li
163.806 377.367 mo
163.84 377.365 li
163.892 377.365 mo
163.908 377.365 li
163.917 377.365 li
163.896 377.371 mo
163.875 377.371 li
163.849 377.371 li
163.818 377.371 li
163.781 377.371 li
163.737 377.371 li
163.919 377.367 mo
163.912 377.369 li
163.912 377.369 mo
163.896 377.371 li
@
163.717 377.373 mo
163.765 377.369 li
163.765 377.369 mo
163.806 377.367 li
163.666 377.376 mo
163.717 377.373 li
@
163.917 377.365 mo
163.921 377.367 li
163.919 377.367 li
@
163.545 377.39 mo
163.608 377.382 li
163.666 377.376 li
@
163.737 377.371 mo
163.689 377.367 li
163.636 377.365 li
@
163.519 377.355 mo
163.453 377.349 li
163.383 377.341 li
@
163.58 377.361 mo
163.519 377.355 li
@
163.383 377.341 mo
163.311 377.333 li
163.234 377.322 li
@
163.636 377.365 mo
163.58 377.361 li
@
162.483 377.166 mo
162.552 377.185 li
@
163.234 377.322 mo
163.156 377.312 li
163.074 377.298 li
@
162.191 375.019 mo
162.255 374.992 li
@
163.24 374.71 mo
163.271 374.705 li
163.298 374.697 li
163.322 374.693 li
163.34 374.687 li
@
162.47 374.916 mo
162.541 374.892 li
162.608 374.871 li
162.608 374.871 mo
162.675 374.849 li
@
162.74 374.832 mo
162.803 374.814 li
163.373 374.675 mo
163.376 374.671 li
163.376 374.671 mo
163.375 374.667 li
163.34 374.687 mo
163.355 374.683 li
163.367 374.677 li
163.373 374.675 li
163.205 374.718 mo
163.24 374.71 li
163.029 374.757 mo
163.078 374.746 li
163.078 374.746 mo
163.125 374.736 li
163.167 374.726 li
163.167 374.726 mo
163.205 374.718 li
@
162.675 374.849 mo
162.74 374.832 li
@
162.921 374.783 mo
162.976 374.769 li
163.029 374.757 li
162.803 374.814 mo
162.864 374.796 li
162.864 374.796 mo
162.921 374.783 li
@
163.375 374.667 mo
163.369 374.664 li
163.369 374.664 mo
163.358 374.66 li
@
162.399 374.939 mo
162.47 374.916 li
162.255 374.992 mo
162.328 374.964 li
162.328 374.964 mo
162.399 374.939 li
@
163.28 374.642 mo
163.251 374.638 li
163.22 374.632 li
163.358 374.66 mo
163.345 374.656 li
163.327 374.652 li
163.305 374.648 li
163.305 374.648 mo
163.28 374.642 li
162.914 374.572 mo
162.861 374.558 li
162.806 374.546 li
163.22 374.632 mo
163.184 374.625 li
163.013 374.593 mo
162.966 374.582 li
162.914 374.572 li
163.184 374.625 mo
163.146 374.619 li
163.105 374.611 li
163.06 374.603 li
163.06 374.603 mo
163.013 374.593 li
@
162.277 374.378 mo
162.218 374.355 li
162.218 374.355 mo
162.162 374.328 li
162.105 374.302 li
162.576 374.482 mo
162.517 374.464 li
162.457 374.445 li
162.396 374.423 li
162.337 374.402 li
162.277 374.378 li
162.693 374.517 mo
162.634 374.5 li
162.634 374.5 mo
162.576 374.482 li
162.806 374.546 mo
162.75 374.533 li
@
162.091 374.294 mo
162.105 374.302 li
@
162.75 374.533 mo
162.693 374.517 li
@
162.492 372.667 mo
162.537 372.65 li
@
162.351 372.726 mo
162.399 372.707 li
162.445 372.687 li
@
162.445 372.687 mo
162.492 372.667 li
@
161.911 372.96 mo
161.922 372.953 li
162.062 372.869 mo
162.109 372.841 li
162.158 372.816 li
162.158 372.816 mo
162.207 372.792 li
162.255 372.769 li
162.255 372.769 mo
162.302 372.748 li
162.351 372.726 li
@
162.806 372.554 mo
162.836 372.544 li
162.866 372.535 li
162.89 372.525 li
162.914 372.515 li
162.935 372.507 li
162.953 372.5 li
162.968 372.492 li
162.982 372.486 li
162.99 372.478 li
163 372.472 li
162.663 372.605 mo
162.701 372.591 li
162.701 372.591 mo
162.738 372.578 li
162.773 372.566 li
162.537 372.65 mo
162.58 372.634 li
162.622 372.619 li
162.663 372.605 li
162.773 372.566 mo
162.806 372.554 li
@
163.001 372.466 mo
163.004 372.46 li
163.004 372.46 mo
163.003 372.453 li
162.9 372.4 mo
162.876 372.394 li
162.85 372.384 li
@
163 372.472 mo
163.001 372.466 li
@
162.994 372.441 mo
162.984 372.435 li
163.003 372.453 mo
163 372.447 li
163 372.447 mo
162.994 372.441 li
162.984 372.435 mo
162.972 372.429 li
162.957 372.421 li
162.957 372.421 mo
162.941 372.416 li
162.921 372.408 li
162.9 372.4 li
@
162.015 372.896 mo
162.062 372.869 li
161.922 372.953 mo
161.968 372.923 li
161.968 372.923 mo
162.015 372.896 li
@
161.865 371.886 mo
161.841 371.859 li
161.819 371.83 li
161.917 371.939 mo
161.89 371.912 li
161.89 371.912 mo
161.865 371.886 li
@
162.793 372.367 mo
162.763 372.357 li
162.85 372.384 mo
162.823 372.376 li
162.66 372.324 mo
162.623 372.312 li
162.823 372.376 mo
162.793 372.367 li
162.763 372.357 mo
162.729 372.347 li
162.695 372.335 li
162.695 372.335 mo
162.66 372.324 li
@
161.767 371.746 mo
161.755 371.716 li
@
162.623 372.312 mo
162.585 372.298 li
@
162.585 372.298 mo
162.546 372.285 li
162.546 372.285 mo
162.507 372.271 li
@
161.744 371.687 mo
161.735 371.658 li
@
162.468 372.255 mo
162.427 372.24 li
162.427 372.24 mo
162.387 372.222 li
162.507 372.271 mo
162.468 372.255 li
@
161.724 371.599 mo
161.722 371.568 li
@
162.387 372.222 mo
162.347 372.205 li
162.307 372.187 li
@
161.722 371.568 mo
161.722 371.539 li
161.726 371.509 li
@
162.228 372.148 mo
162.189 372.126 li
162.307 372.187 mo
162.267 372.167 li
162.267 372.167 mo
162.228 372.148 li
@
161.73 371.48 mo
161.738 371.449 li
@
162.189 372.126 mo
162.151 372.107 li
162.115 372.083 li
@
161.738 371.449 mo
161.748 371.421 li
161.759 371.392 li
@
162.042 372.039 mo
162.009 372.013 li
162.115 372.083 mo
162.079 372.062 li
162.079 372.062 mo
162.042 372.039 li
@
161.773 371.363 mo
161.787 371.335 li
161.805 371.306 li
@
162.009 372.013 mo
161.978 371.99 li
161.947 371.964 li
@
161.805 371.306 mo
161.824 371.279 li
161.844 371.251 li
@
161.819 371.83 mo
161.799 371.802 li
161.947 371.964 mo
161.917 371.939 li
@
161.844 371.251 mo
161.867 371.226 li
@
161.867 371.226 mo
161.89 371.199 li
@
161.755 371.716 mo
161.744 371.687 li
161.783 371.773 mo
161.767 371.746 li
@
161.759 371.392 mo
161.773 371.363 li
@
161.735 371.658 mo
161.728 371.628 li
161.799 371.802 mo
161.783 371.773 li
@
161.726 371.509 mo
161.73 371.48 li
@
161.89 371.199 mo
161.916 371.173 li
161.941 371.148 li
161.981 371.115 mo
161.969 371.125 li
161.941 371.148 mo
161.969 371.125 li
@
162.692 370.71 mo
162.706 370.701 li
162.718 370.693 li
162.64 370.736 mo
162.659 370.728 li
162.676 370.718 li
162.676 370.718 mo
162.692 370.71 li
@
162.25 370.931 mo
162.283 370.912 li
162.315 370.896 li
162.186 370.968 mo
162.218 370.949 li
162.218 370.949 mo
162.25 370.931 li
162.028 371.076 mo
162.058 371.054 li
162.058 371.054 mo
162.089 371.031 li
162.121 371.009 li
162.121 371.009 mo
162.153 370.99 li
162.186 370.968 li
161.981 371.115 mo
161.998 371.099 li
161.998 371.099 mo
162.028 371.076 li
@
162.468 370.82 mo
162.496 370.806 li
@
162.315 370.896 mo
162.347 370.878 li
162.377 370.863 li
162.408 370.847 li
@
162.718 370.693 mo
162.728 370.685 li
162.737 370.675 li
162.744 370.669 li
162.748 370.662 li
162.62 370.748 mo
162.64 370.736 li
162.496 370.806 mo
162.523 370.792 li
162.548 370.781 li
162.574 370.769 li
162.597 370.757 li
162.597 370.757 mo
162.62 370.748 li
162.408 370.847 mo
162.439 370.833 li
162.468 370.82 li
@
162.696 370.589 mo
162.681 370.582 li
162.666 370.572 li
@
162.748 370.662 mo
162.751 370.656 li
162.751 370.656 mo
162.751 370.648 li
162.751 370.64 li
@
162.738 370.619 mo
162.73 370.613 li
162.72 370.605 li
162.72 370.605 mo
162.708 370.597 li
162.696 370.589 li
@
162.745 370.626 mo
162.738 370.619 li
162.751 370.64 mo
162.748 370.632 li
162.748 370.632 mo
162.745 370.626 li
@
162.519 370.507 mo
162.495 370.496 li
162.47 370.484 li
162.443 370.472 li
162.417 370.458 li
162.567 370.527 mo
162.544 370.517 li
162.544 370.517 mo
162.519 370.507 li
162.666 370.572 mo
162.648 370.564 li
162.629 370.556 li
162.609 370.546 li
162.588 370.537 li
162.588 370.537 mo
162.567 370.527 li
@
161.957 370.107 mo
161.943 370.085 li
161.931 370.064 li
161.986 370.15 mo
161.97 370.128 li
161.97 370.128 mo
161.957 370.107 li
@
161.931 370.064 mo
161.92 370.042 li
@
162.365 370.433 mo
162.337 370.417 li
162.417 370.458 mo
162.39 370.445 li
162.337 370.417 mo
162.31 370.404 li
162.39 370.445 mo
162.365 370.433 li
@
161.904 369.998 mo
161.898 369.974 li
161.92 370.042 mo
161.912 370.021 li
161.912 370.021 mo
161.904 369.998 li
@
162.283 370.388 mo
162.257 370.373 li
162.257 370.373 mo
162.23 370.357 li
162.31 370.404 mo
162.283 370.388 li
@
161.892 369.931 mo
161.891 369.908 li
161.898 369.974 mo
161.895 369.953 li
161.895 369.953 mo
161.892 369.931 li
@
162.23 370.357 mo
162.205 370.341 li
162.179 370.324 li
@
161.891 369.908 mo
161.891 369.884 li
161.894 369.863 li
@
162.179 370.324 mo
162.154 370.306 li
162.13 370.289 li
@
161.894 369.863 mo
161.896 369.839 li
161.9 369.818 li
@
162.13 370.289 mo
162.107 370.269 li
162.083 370.251 li
@
161.9 369.818 mo
161.908 369.796 li
161.914 369.773 li
@
162.083 370.251 mo
162.062 370.23 li
162.042 370.21 li
@
161.914 369.773 mo
161.923 369.751 li
161.933 369.73 li
@
162.042 370.21 mo
162.021 370.191 li
162.021 370.191 mo
162.003 370.171 li
161.986 370.15 li
@
161.951 369.697 mo
161.945 369.708 li
161.933 369.73 mo
161.945 369.708 li
@
162.541 369.222 mo
162.548 369.214 li
162.556 369.207 li
162.504 369.25 mo
162.517 369.24 li
162.529 369.23 li
162.529 369.23 mo
162.541 369.222 li
@
161.958 369.687 mo
161.971 369.666 li
@
161.971 369.666 mo
161.986 369.646 li
@
161.951 369.697 mo
161.958 369.687 li
@
162.349 369.345 mo
162.37 369.333 li
162.389 369.322 li
162.408 369.31 li
162.425 369.298 li
162.02 369.605 mo
162.037 369.585 li
162.037 369.585 mo
162.056 369.568 li
162.076 369.548 li
162.076 369.548 mo
162.095 369.531 li
161.986 369.646 mo
162.003 369.625 li
162.003 369.625 mo
162.02 369.605 li
@
162.454 369.281 mo
162.443 369.289 li
162.425 369.298 mo
162.443 369.289 li
@
162.222 369.429 mo
162.244 369.414 li
162.265 369.4 li
162.158 369.478 mo
162.179 369.46 li
162.201 369.445 li
162.201 369.445 mo
162.222 369.429 li
162.265 369.4 mo
162.287 369.386 li
162.308 369.373 li
162.33 369.359 li
162.349 369.345 li
162.095 369.531 mo
162.115 369.511 li
162.136 369.494 li
162.136 369.494 mo
162.158 369.478 li
@
162.003 368.498 mo
162.007 368.48 li
162.011 368.462 li
162.016 368.445 li
162.001 368.533 mo
162.001 368.515 li
162.001 368.515 mo
162.003 368.498 li
162.066 368.736 mo
162.054 368.72 li
162.089 368.769 mo
162.077 368.753 li
162.077 368.753 mo
162.066 368.736 li
@
162.476 369.267 mo
162.491 369.257 li
162.454 369.281 mo
162.46 369.277 li
162.491 369.257 mo
162.504 369.25 li
162.46 369.277 mo
162.476 369.267 li
@
162.022 368.429 mo
162.03 368.412 li
@
162.016 368.445 mo
162.022 368.429 li
@
162.03 368.412 mo
162.037 368.396 li
@
162.556 369.207 mo
162.562 369.199 li
162.569 369.191 li
@
162.037 368.396 mo
162.045 368.378 li
162.054 368.363 li
162.065 368.347 li
162.076 368.332 li
@
162.414 367.867 mo
162.405 367.859 li
@
162.076 368.332 mo
162.087 368.316 li
162.099 368.3 li
162.111 368.287 li
@
162.003 368.583 mo
162.001 368.566 li
162.01 368.619 mo
162.006 368.601 li
162.006 368.601 mo
162.003 368.583 li
162.001 368.566 mo
162.001 368.548 li
162.001 368.548 mo
162.001 368.533 li
@
162.228 368.9 mo
162.211 368.886 li
162.194 368.873 li
162.283 368.939 mo
162.264 368.925 li
162.246 368.914 li
162.246 368.914 mo
162.228 368.9 li
@
162.57 369.132 mo
162.564 369.125 li
@
162.146 368.83 mo
162.13 368.814 li
162.116 368.8 li
162.39 369.005 mo
162.373 368.996 li
162.498 369.07 mo
162.483 369.062 li
162.423 369.027 mo
162.407 369.017 li
162.407 369.017 mo
162.39 369.005 li
162.483 369.062 mo
162.469 369.054 li
162.455 369.044 li
162.44 369.035 li
162.44 369.035 mo
162.423 369.027 li
162.194 368.873 mo
162.178 368.859 li
162.162 368.845 li
162.146 368.83 li
162.3 368.951 mo
162.283 368.939 li
162.373 368.996 mo
162.355 368.984 li
162.337 368.974 li
162.32 368.962 li
162.32 368.962 mo
162.3 368.951 li
@
162.116 368.8 mo
162.101 368.785 li
162.089 368.769 li
@
162.531 369.095 mo
162.521 369.087 li
@
162.509 369.08 mo
162.498 369.07 li
@
162.521 369.087 mo
162.509 369.08 li
162.542 369.103 mo
162.531 369.095 li
@
162.054 368.72 mo
162.044 368.703 li
162.036 368.687 li
162.028 368.669 li
162.021 368.654 li
162.015 368.634 li
162.01 368.619 li
@
162.564 369.125 mo
162.557 369.119 li
162.557 369.119 mo
162.549 369.111 li
162.542 369.103 li
@
162.183 368.21 mo
162.179 368.216 li
162.151 368.242 mo
162.165 368.228 li
162.179 368.216 li
@
162.578 369.148 mo
162.574 369.14 li
162.57 369.132 li
@
162.411 368.025 mo
162.419 368.015 li
162.427 368.009 li
162.435 368 li
162.44 367.994 li
162.446 367.986 li
162.371 368.058 mo
162.381 368.048 li
162.392 368.041 li
162.402 368.033 li
162.402 368.033 mo
162.411 368.025 li
@
162.333 368.087 mo
162.347 368.078 li
162.358 368.068 li
162.251 368.152 mo
162.265 368.14 li
162.321 368.097 mo
162.333 368.087 li
162.265 368.14 mo
162.281 368.13 li
162.294 368.119 li
162.307 368.109 li
162.307 368.109 mo
162.321 368.097 li
@
162.446 367.986 mo
162.451 367.978 li
162.455 367.972 li
162.358 368.068 mo
162.371 368.058 li
@
162.207 368.189 mo
162.222 368.177 li
162.183 368.21 mo
162.193 368.203 li
162.222 368.177 mo
162.237 368.166 li
162.251 368.152 li
162.193 368.203 mo
162.207 368.189 li
@
162.458 367.929 mo
162.457 367.923 li
162.46 367.943 mo
162.46 367.937 li
162.46 367.937 mo
162.458 367.929 li
162.455 367.972 mo
162.457 367.964 li
162.458 367.957 li
162.458 367.957 mo
162.46 367.951 li
162.46 367.943 li
162.457 367.923 mo
162.455 367.916 li
162.451 367.91 li
162.451 367.91 mo
162.446 367.902 li
@
162.111 368.287 mo
162.124 368.271 li
162.137 368.257 li
162.151 368.242 li
@
162.446 367.902 mo
162.441 367.896 li
162.436 367.888 li
162.427 367.88 li
162.427 367.88 mo
162.421 367.875 li
162.414 367.867 li
@
162.569 369.191 mo
162.574 369.183 li
162.578 369.175 li
162.578 369.175 mo
162.58 369.169 li
162.58 369.162 li
162.58 369.162 mo
162.58 369.154 li
162.578 369.148 li
@
162.355 367.82 mo
162.344 367.81 li
@
162.405 367.859 mo
162.396 367.851 li
162.386 367.843 li
162.376 367.835 li
162.367 367.828 li
@
162.321 367.792 mo
162.309 367.785 li
162.297 367.775 li
162.287 367.765 li
162.273 367.755 li
162.262 367.746 li
162.344 367.81 mo
162.333 367.802 li
162.333 367.802 mo
162.321 367.792 li
162.367 367.828 mo
162.355 367.82 li
@
162.176 364.671 mo
162.176 364.667 li
162.176 364.667 mo
162.176 364.662 li
162.199 364.769 mo
162.196 364.765 li
162.193 364.759 li
162.191 364.753 li
162.191 364.753 mo
162.19 364.75 li
162.205 364.785 mo
162.203 364.779 li
162.201 364.775 li
162.201 364.775 mo
162.199 364.769 li
162.182 364.724 mo
162.181 364.718 li
162.179 364.712 li
162.179 364.708 li
162.178 364.703 li
162.177 364.699 li
162.177 364.693 li
162.176 364.687 li
162.176 364.683 li
162.176 364.677 li
162.176 364.671 li
162.19 364.75 mo
162.188 364.744 li
162.186 364.74 li
162.185 364.734 li
162.183 364.73 li
162.183 364.73 mo
162.182 364.724 li
@
162.176 364.662 mo
162.177 364.658 li
162.177 364.652 li
162.178 364.646 li
162.179 364.642 li
@
162.218 364.808 mo
162.214 364.802 li
162.214 364.802 mo
162.212 364.798 li
162.224 364.82 mo
162.222 364.818 li
162.222 364.818 mo
162.22 364.812 li
162.212 364.798 mo
162.21 364.792 li
162.207 364.789 li
162.205 364.785 li
162.22 364.812 mo
162.218 364.808 li
@
162.179 364.642 mo
162.179 364.636 li
162.181 364.63 li
162.182 364.626 li
162.182 364.621 li
@
162.169 365.125 mo
162.171 365.117 li
162.173 365.111 li
162.175 365.105 li
162.166 365.156 mo
162.166 365.15 li
162.167 365.142 li
162.167 365.136 li
162.167 365.13 li
162.167 365.13 mo
162.169 365.125 li
@
162.224 365.582 mo
162.229 365.576 li
162.279 365.488 mo
162.281 365.482 li
162.282 365.478 li
162.283 365.472 li
162.283 365.468 li
162.283 365.468 mo
162.283 365.464 li
@
162.212 365.601 mo
162.216 365.595 li
162.22 365.587 li
162.187 365.644 mo
162.191 365.636 li
162.195 365.628 li
162.199 365.621 li
162.203 365.615 li
162.208 365.607 li
@
162.22 365.587 mo
162.224 365.582 li
@
162.208 365.607 mo
162.212 365.601 li
@
162.229 365.576 mo
162.234 365.57 li
162.238 365.564 li
162.242 365.558 li
162.246 365.552 li
162.25 365.546 li
162.253 365.541 li
162.257 365.535 li
162.26 365.529 li
@
162.146 365.785 mo
162.146 365.777 li
162.155 365.72 mo
162.158 365.712 li
162.16 365.703 li
162.146 365.777 mo
162.146 365.767 li
162.146 365.767 mo
162.148 365.759 li
162.148 365.759 mo
162.149 365.751 li
162.149 365.751 mo
162.15 365.744 li
162.15 365.744 mo
162.151 365.736 li
162.153 365.726 li
162.155 365.72 li
162.175 365.666 mo
162.179 365.658 li
162.183 365.65 li
162.187 365.644 li
162.16 365.703 mo
162.162 365.695 li
162.166 365.687 li
162.167 365.681 li
162.172 365.673 li
162.172 365.673 mo
162.175 365.666 li
@
162.201 365.296 mo
162.197 365.291 li
@
162.211 365.314 mo
162.208 365.308 li
162.205 365.302 li
162.283 365.464 mo
162.283 365.458 li
@
162.191 365.279 mo
162.188 365.273 li
162.186 365.265 li
162.183 365.259 li
162.181 365.253 li
162.197 365.291 mo
162.194 365.285 li
162.194 365.285 mo
162.191 365.279 li
162.205 365.302 mo
162.201 365.296 li
@
162.234 364.839 mo
162.231 364.835 li
162.229 364.83 li
162.226 364.826 li
162.224 364.82 li
162.246 364.865 mo
162.244 364.861 li
162.242 364.855 li
162.24 364.851 li
162.238 364.847 li
162.236 364.843 li
162.236 364.843 mo
162.234 364.839 li
162.256 364.906 mo
162.255 364.902 li
@
162.188 365.068 mo
162.191 365.064 li
162.193 365.058 li
162.197 365.052 li
162.199 365.046 li
162.175 365.105 mo
162.177 365.099 li
162.179 365.093 li
162.182 365.087 li
162.183 365.082 li
162.186 365.076 li
162.186 365.076 mo
162.188 365.068 li
@
162.256 364.91 mo
162.256 364.906 li
@
162.181 365.253 mo
162.178 365.248 li
162.176 365.242 li
162.173 365.234 li
162.172 365.228 li
162.17 365.222 li
162.166 365.195 mo
162.166 365.189 li
162.165 365.181 li
162.165 365.175 li
162.165 365.169 li
162.169 365.214 mo
162.167 365.208 li
162.167 365.203 li
162.167 365.203 mo
162.166 365.195 li
@
162.215 365.32 mo
162.211 365.314 li
162.248 365.371 mo
162.244 365.365 li
162.24 365.359 li
162.238 365.353 li
162.234 365.349 li
162.229 365.343 li
162.225 365.337 li
162.222 365.332 li
162.218 365.326 li
162.218 365.326 mo
162.215 365.32 li
162.273 365.414 mo
162.271 365.41 li
162.269 365.406 li
162.266 365.4 li
162.263 365.396 li
162.26 365.39 li
162.257 365.386 li
162.254 365.38 li
162.251 365.375 li
162.251 365.375 mo
162.248 365.371 li
162.281 365.433 mo
162.279 365.429 li
162.279 365.429 mo
162.277 365.425 li
162.277 365.425 mo
162.275 365.419 li
162.273 365.414 li
@
162.17 365.222 mo
162.169 365.214 li
162.165 365.169 mo
162.165 365.164 li
162.166 365.156 li
162.222 365.003 mo
162.224 364.998 li
162.228 364.994 li
162.23 364.99 li
162.233 364.984 li
162.236 364.978 li
162.238 364.974 li
162.24 364.97 li
162.199 365.046 mo
162.203 365.041 li
162.206 365.035 li
162.208 365.029 li
162.211 365.025 li
162.214 365.019 li
162.218 365.013 li
162.22 365.007 li
162.22 365.007 mo
162.222 365.003 li
@
162.283 365.458 mo
162.283 365.453 li
162.283 365.449 mo
162.282 365.445 li
162.282 365.445 mo
162.282 365.439 li
162.281 365.433 li
162.283 365.453 mo
162.283 365.449 li
@
162.24 364.97 mo
162.242 364.964 li
@
162.25 364.876 mo
162.249 364.873 li
162.248 364.869 li
162.246 364.865 li
162.255 364.902 mo
162.255 364.898 li
162.254 364.894 li
162.253 364.888 li
162.252 364.884 li
162.251 364.882 li
162.251 364.882 mo
162.25 364.876 li
162.251 364.939 mo
162.253 364.935 li
162.253 364.929 li
162.254 364.925 li
162.255 364.921 li
162.256 364.919 li
162.246 364.957 mo
162.248 364.953 li
162.25 364.947 li
162.251 364.943 li
162.251 364.943 mo
162.251 364.939 li
162.242 364.964 mo
162.244 364.96 li
162.244 364.96 mo
162.246 364.957 li
162.256 364.919 mo
162.256 364.914 li
162.256 364.91 li
@
162.182 364.621 mo
162.183 364.617 li
@
162.194 364.335 mo
162.193 364.332 li
@
162.203 364.359 mo
162.202 364.355 li
@
162.193 364.332 mo
162.191 364.328 li
162.191 364.324 li
162.189 364.32 li
162.188 364.314 li
162.187 364.31 li
162.186 364.306 li
162.186 364.302 li
162.185 364.298 li
162.183 364.294 li
162.183 364.291 li
162.183 364.287 li
162.183 364.283 li
162.182 364.277 li
162.202 364.355 mo
162.201 364.351 li
162.199 364.347 li
162.197 364.343 li
162.196 364.339 li
162.194 364.335 li
@
162.224 364.408 mo
162.222 364.404 li
162.222 364.4 li
162.222 364.4 mo
162.22 364.398 li
162.21 364.375 mo
162.208 364.371 li
162.207 364.367 li
162.205 364.363 li
162.205 364.363 mo
162.203 364.359 li
162.22 364.398 mo
162.218 364.392 li
162.216 364.39 li
162.215 364.386 li
162.214 364.382 li
162.212 364.378 li
162.212 364.378 mo
162.21 364.375 li
@
162.182 364.277 mo
162.182 364.275 li
162.182 364.269 li
162.182 364.265 li
162.182 364.261 li
162.182 364.257 li
162.182 364.253 li
162.183 364.25 li
@
162.23 364.425 mo
162.229 364.421 li
162.228 364.417 li
162.227 364.416 li
162.225 364.412 li
162.224 364.408 li
162.236 364.449 mo
162.236 364.447 li
162.234 364.443 li
162.234 364.439 li
162.233 364.435 li
162.232 364.433 li
162.231 364.429 li
162.231 364.429 mo
162.23 364.425 li
162.227 364.507 mo
162.228 364.503 li
162.229 364.5 li
162.231 364.496 li
162.232 364.492 li
162.233 364.488 li
162.234 364.486 li
162.224 364.515 mo
162.225 364.511 li
162.225 364.511 mo
162.227 364.507 li
162.212 364.542 mo
162.214 364.539 li
162.216 364.535 li
162.218 364.531 li
162.22 364.527 li
162.221 364.523 li
162.222 364.519 li
162.222 364.519 mo
162.224 364.515 li
162.234 364.486 mo
162.234 364.482 li
162.236 364.478 li
162.236 364.474 li
162.236 364.47 li
162.236 364.468 li
162.236 364.464 li
162.195 364.583 mo
162.197 364.578 li
162.199 364.574 li
162.199 364.574 mo
162.201 364.57 li
162.208 364.552 mo
162.211 364.548 li
162.211 364.548 mo
162.212 364.542 li
162.201 364.57 mo
162.203 364.564 li
162.205 364.56 li
162.207 364.556 li
162.207 364.556 mo
162.208 364.552 li
162.236 364.464 mo
162.236 364.46 li
162.236 364.457 li
162.236 364.453 li
162.236 364.449 li
162.185 364.611 mo
162.186 364.607 li
162.191 364.593 mo
162.193 364.587 li
162.195 364.583 li
162.183 364.617 mo
162.185 364.611 li
162.186 364.607 mo
162.188 364.601 li
162.19 364.597 li
162.19 364.597 mo
162.191 364.593 li
@
162.271 365.507 mo
162.273 365.501 li
162.275 365.498 li
162.277 365.492 li
162.279 365.488 li
162.26 365.529 mo
162.263 365.523 li
162.265 365.519 li
162.269 365.513 li
162.269 365.513 mo
162.271 365.507 li
@
162.101 367.306 mo
162.107 367.292 li
162.115 367.281 li
162.085 367.345 mo
162.091 367.332 li
162.095 367.318 li
162.095 367.318 mo
162.101 367.306 li
@
162.262 367.746 mo
162.25 367.734 li
162.25 367.734 mo
162.238 367.724 li
162.224 367.714 mo
162.214 367.703 li
162.214 367.703 mo
162.203 367.691 li
162.191 367.681 li
162.238 367.724 mo
162.224 367.714 li
@
162.115 367.281 mo
162.122 367.269 li
162.129 367.255 li
162.137 367.244 li
@
162.181 367.669 mo
162.169 367.658 li
162.169 367.658 mo
162.16 367.646 li
162.191 367.681 mo
162.181 367.669 li
@
162.137 367.244 mo
162.146 367.232 li
162.154 367.22 li
162.162 367.208 li
@
162.15 367.632 mo
162.14 367.621 li
162.14 367.621 mo
162.131 367.609 li
162.16 367.646 mo
162.15 367.632 li
@
162.076 367.384 mo
162.08 367.371 li
162.083 367.357 li
162.083 367.357 mo
162.085 367.345 li
162.162 367.208 mo
162.172 367.199 li
162.182 367.187 li
162.191 367.177 li
162.201 367.166 li
@
162.115 367.583 mo
162.109 367.572 li
162.131 367.609 mo
162.123 367.595 li
162.109 367.572 mo
162.101 367.558 li
162.123 367.595 mo
162.115 367.583 li
@
162.085 367.519 mo
162.082 367.503 li
162.082 367.503 mo
162.079 367.492 li
162.076 367.478 li
162.072 367.451 mo
162.072 367.437 li
162.072 367.423 li
162.072 367.412 li
162.076 367.478 mo
162.074 367.464 li
162.074 367.464 mo
162.072 367.451 li
162.072 367.412 mo
162.074 367.396 li
162.074 367.396 mo
162.076 367.384 li
@
162.101 367.558 mo
162.095 367.544 li
162.095 367.544 mo
162.09 367.531 li
162.09 367.531 mo
162.085 367.519 li
@
162.343 367.021 mo
162.339 367.025 li
162.302 367.064 mo
162.311 367.056 li
162.32 367.046 li
162.327 367.041 li
162.333 367.033 li
162.339 367.025 li
162.249 367.117 mo
162.258 367.107 li
162.258 367.107 mo
162.267 367.099 li
162.277 367.089 li
162.287 367.08 li
162.294 367.072 li
162.294 367.072 mo
162.302 367.064 li
@
162.201 367.166 mo
162.21 367.156 li
162.22 367.146 li
@
162.22 367.146 mo
162.229 367.136 li
162.239 367.126 li
162.249 367.117 li
@
162.148 366.642 mo
162.142 366.632 li
162.138 366.623 li
162.164 366.673 mo
162.158 366.662 li
162.152 366.654 li
162.152 366.654 mo
162.148 366.642 li
@
162.244 365.994 mo
162.238 365.986 li
162.232 365.98 li
162.226 365.972 li
162.222 365.964 li
162.216 365.958 li
162.211 365.951 li
162.26 366.011 mo
162.253 366.005 li
162.249 366 li
162.249 366 mo
162.244 365.994 li
162.297 366.06 mo
162.293 366.054 li
162.289 366.048 li
162.285 366.044 li
162.281 366.039 li
162.275 366.031 li
162.27 366.025 li
162.265 366.019 li
162.265 366.019 mo
162.26 366.011 li
162.318 366.101 mo
162.316 366.095 li
162.314 366.089 li
162.311 366.083 li
162.322 366.117 mo
162.321 366.111 li
162.32 366.105 li
162.32 366.105 mo
162.318 366.101 li
162.316 366.162 mo
162.318 366.156 li
162.32 366.15 mo
162.321 366.144 li
162.321 366.144 mo
162.322 366.138 li
162.318 366.156 mo
162.32 366.15 li
162.311 366.083 mo
162.308 366.078 li
162.304 366.072 li
162.3 366.066 li
162.297 366.06 li
162.322 366.138 mo
162.323 366.132 li
162.323 366.132 mo
162.323 366.126 li
162.322 366.123 li
162.322 366.117 li
@
162.167 365.875 mo
162.164 365.867 li
162.16 365.859 li
162.158 365.851 li
162.155 365.841 li
162.153 365.833 li
162.151 365.826 li
162.15 365.818 li
162.148 365.808 li
162.178 365.898 mo
162.173 365.89 li
162.169 365.882 li
162.169 365.882 mo
162.167 365.875 li
@
162.211 365.951 mo
162.206 365.943 li
@
162.201 365.937 mo
162.195 365.929 li
162.195 365.929 mo
162.191 365.921 li
162.186 365.914 li
@
162.206 365.943 mo
162.201 365.937 li
@
162.148 365.808 mo
162.148 365.8 li
162.146 365.792 li
162.146 365.785 li
162.186 365.914 mo
162.182 365.906 li
162.178 365.898 li
@
162.216 366.298 mo
162.222 366.291 li
162.228 366.281 li
162.236 366.275 li
162.197 366.324 mo
162.203 366.314 li
162.203 366.314 mo
162.21 366.306 li
162.172 366.359 mo
162.178 366.349 li
162.185 366.341 li
162.19 366.332 li
162.197 366.324 li
162.21 366.306 mo
162.216 366.298 li
@
162.311 366.173 mo
162.314 366.167 li
162.316 366.162 li
@
162.375 366.968 mo
162.375 366.97 li
162.373 366.978 mo
162.375 366.97 li
162.361 366.996 mo
162.367 366.992 li
162.37 366.984 li
162.37 366.984 mo
162.373 366.978 li
162.343 367.021 mo
162.345 367.017 li
162.345 367.017 mo
162.352 367.011 li
162.352 367.011 mo
162.357 367.003 li
162.357 367.003 mo
162.361 366.996 li
@
162.124 366.582 mo
162.122 366.57 li
162.121 366.56 li
162.134 366.611 mo
162.13 366.601 li
162.126 366.591 li
162.126 366.591 mo
162.124 366.582 li
162.177 366.691 mo
162.169 366.681 li
162.164 366.673 li
162.205 366.73 mo
162.197 366.72 li
162.19 366.71 li
162.183 366.701 li
162.183 366.701 mo
162.177 366.691 li
@
162.121 366.56 mo
162.119 366.55 li
162.118 366.539 li
162.117 366.529 li
162.117 366.519 li
162.118 366.507 li
162.119 366.498 li
@
162.138 366.623 mo
162.134 366.611 li
@
162.119 366.498 mo
162.121 366.486 li
162.123 366.476 li
162.125 366.466 li
@
162.373 366.914 mo
162.37 366.908 li
162.37 366.908 mo
162.367 366.902 li
162.361 366.894 li
162.358 366.888 li
162.358 366.888 mo
162.352 366.882 li
162.347 366.876 li
@
162.3 366.828 mo
162.293 366.82 li
@
162.347 366.876 mo
162.341 366.869 li
@
162.253 366.781 mo
162.246 366.773 li
162.237 366.765 li
162.228 366.755 li
162.22 366.748 li
162.293 366.82 mo
162.285 366.812 li
162.277 366.806 li
162.269 366.796 li
162.262 366.789 li
162.262 366.789 mo
162.253 366.781 li
162.341 366.869 mo
162.335 366.863 li
162.33 366.857 li
162.323 366.849 li
162.316 366.841 li
162.308 366.835 li
162.3 366.828 li
@
162.125 366.466 mo
162.126 366.457 li
162.13 366.447 li
162.142 366.416 mo
162.146 366.406 li
162.151 366.396 li
162.156 366.386 li
162.162 366.376 li
162.167 366.367 li
162.172 366.359 li
162.13 366.447 mo
162.134 366.435 li
162.137 366.425 li
162.137 366.425 mo
162.142 366.416 li
@
162.22 366.748 mo
162.212 366.738 li
162.205 366.73 li
@
162.376 366.925 mo
162.375 366.919 li
162.375 366.919 mo
162.373 366.914 li
162.378 366.933 mo
162.376 366.925 li
@
162.3 366.191 mo
162.304 366.185 li
162.307 366.179 li
162.311 366.173 li
@
162.283 366.216 mo
162.287 366.21 li
162.236 366.275 mo
162.242 366.265 li
162.277 366.224 mo
162.283 366.216 li
162.242 366.265 mo
162.248 366.259 li
162.254 366.251 li
162.26 366.246 li
162.266 366.238 li
162.271 366.23 li
162.271 366.23 mo
162.277 366.224 li
@
162.287 366.21 mo
162.292 366.205 li
162.296 366.197 li
162.3 366.191 li
@
162.376 366.964 mo
162.378 366.958 li
162.378 366.958 mo
162.378 366.953 li
162.375 366.968 mo
162.376 366.964 li
162.378 366.953 mo
162.38 366.945 li
162.378 366.939 li
162.378 366.933 li
@
238.52 480.371 mo
235.93 481.652 li
@
1 lj
4 ml
161.339 440.447 mo
161.339 430.779 li
0 0 1 rgb
@
161.769 402.183 mo
161.769 397.359 li
@
161.769 410.671 mo
161.769 405.839 li
@
239.719 449.621 mo
250.417 449.621 li
1 0 0 rgb
f
253.434 449.621 mo
252.014 450.147 250.252 451.046 249.161 451.999 cv
250.021 449.621 li
249.161 447.243 li
250.252 448.195 252.014 449.094 253.434 449.621 cv
cp
f
1 lw
0 lj
239.719 449.621 mo
250.417 449.621 li
.8 .2 .2 rgb
@
253.434 449.621 mo
252.014 450.147 250.252 451.046 249.161 451.999 cv
250.021 449.621 li
249.161 447.243 li
250.252 448.195 252.014 449.094 253.434 449.621 cv
cp
f
1 0 0 rgb
PDHCTS+Helvetica-Bold*1 [21 0 0 -21 0 0 ]msf237.321 469.576 mo(M)sh3 lw
211.071 473.855 mo
232.549 479.705 li
@
241.284 482.083 mo
236.758 482.489 230.95 483.703 227.04 485.596 cv
231.403 479.392 li
230.788 471.833 li
233.198 475.448 237.589 479.44 241.284 482.083 cv
cp
f
183.633 295.838 mo
194.331 295.838 li
0 0 1 rgb
f
197.348 295.838 mo
195.928 296.366 194.167 297.264 193.075 298.215 cv
193.935 295.838 li
193.075 293.461 li
194.167 294.413 195.928 295.312 197.348 295.838 cv
cp
f
1 lw
183.633 295.838 mo
194.331 295.838 li
@
197.348 295.838 mo
195.928 296.366 194.167 297.264 193.075 298.215 cv
193.935 295.838 li
193.075 293.461 li
194.167 294.413 195.928 295.312 197.348 295.838 cv
cp
f
PDHCTS+Helvetica-Bold*1 [21 0 0 -21 0 0 ]msf183.632 315.792 mo(B)shPDHCTS+Helvetica-Bold*1 [12.243 0 0 -12.243 0 0 ]msf198.798 322.786 mo(0)sh0 0 0 rgb
%ADOBeginSubsetFont: Helvetica-Bold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginPDHCTS+Helvetica-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/C <1C60D8A8C9B6079F2D195D2F475FB0496F57CAED376D8723354DEC9F1B1DE5681520D221B2480D1D8BDCDE504128C39D7EB2E84513BAC1DE0FB32782218FDC6E9C50EDB3243AB03AB27341C2AB66BCC7BEF1938A37561E60AF9AC58E646150BF50A2A4F9C83CE1E9DB03C86EEE00383C4EF0503E9E481C5C2D47FEADCC38BAEC2FF5C5F148176C> |-systemdict /gcheck known {setglobal} if end {end} ifendPDHCTS+Helvetica-Bold /Encoding getdup 67 /C putpop%ADOEndSubsetFont
/PDHCTS+Helvetica-Bold*1 [48{/.notdef}rp /zero /one 15{/.notdef}rp /A /B /C 2{/.notdef}rp /F 6{/.notdef}rp /M 4{/.notdef}rp /R 173{/.notdef}rp]PDHCTS+Helvetica-Bold nfPDHCTS+Helvetica-Bold*1 [48 0 0 -48 0 0 ]msf45.6743 340.022 mo(C)sh320.711 438.09 mo
377.923 415.59 li
320.711 392.528 li
320.711 392.528 332.684 398.958 337.26 408.559 cv
298.462 408.559 li
298.462 422.059 li
337.691 422.059 li
335.504 427.149 330.376 432.581 320.711 438.09 cv
cp
.0954437 .0954437 .0954437 rgb
f
0 0 0 rgb
%ADOBeginSubsetFont: Helvetica-Bold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginPDHCTS+Helvetica-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/D <1C60D8A8C9B6079F6257591F6B821D521B69B6CB5085B89B0B2D88994AB9CDD15D4F9FCC56E5359483D73F9E80C3862440F2941742975E0D24490481790A84E314F741B73E7BF103570B3AFF5C00FB6C4E182890D79F93DE7BEEA23DE0FEC4BBFABEB4108A163786B4B57A> |-/I <1C60D8A8C9B854D0F45A7DCEFBC402FF7699F7922C5BBAB4> |-systemdict /gcheck known {setglobal} if end {end} ifendPDHCTS+Helvetica-Bold /Encoding getdup 68 /D putdup 73 /I putpop%ADOEndSubsetFont
/PDHCTS+Helvetica-Bold*1 [48{/.notdef}rp /zero /one 15{/.notdef}rp /A /B /C /D /.notdef /F 2{/.notdef}rp /I 3{/.notdef}rp /M 4{/.notdef}rp /R 173{/.notdef}rp]PDHCTS+Helvetica-Bold nfPDHCTS+Helvetica-Bold*1 [26 0 0 -26 0 0 ]msf635.388 403.076 mo(FID)sh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/PDHCTS+Helvetica-Bold*1 uf/PDHCTS+Helvetica-Bold uf/Helvetica-Bold ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Gui) ()%%Title: (Principes_RMN.eps)%%CreationDate: 11/02/10 16:27%%Canvassize: 16383%AI9_DataStream%Gb"-6Bl[HKQ7fZKlllAL3n(/9>bBhPD/C$o!*LeH;R3*oQdsX4A.T<::kaIS6(+eh]impDXNu(p^E*DJ!gP$"1-lfZL50+XO.Z7>%qoL5_=*L"/B:%NE?iBZH7Au+u/P:&A<9)7OTDZmcT@Pr*20M?HW4#ns#ul-&c-8b)+RE-aLCUI^mOm(W[pNHKSZHaI<`eHcf/K<S%<\KLe(S;e!:Z!-Frb[(4IeB&HrqZ*+Ih%MZ?!Z;beUL_os1#d+4#qbqIs$3$I/iR$`Ja>op$#9%>CMmP4ZYZ3+'i/Z*8`C(Zoau.%q/?#rcH]5cG^&]6qO6Q.$];j24LD;1BM:6Fr*P=G]0&*g4'd>-K3OssG!TKmi/@.Xs8UdKp6Ja3\p$!:5Q,#?SEHf.M?!SChuC'4%n[JP/VY^>ipY+<neVf@Gli4VCa<KVpYLXLCcAunq]^F1Zh6cZ'n!6"gXcHYXB$POkeD6Kt$k$Ec91a,#9&*.7@957Oa92$'Xa`H;%s5d25SWgD'gT-ecA7`J;4-;C+?Jdq.qeoX`(ZR?o:\j-KGN\;XY:n4>AN?'K20nicX4-aP(@gudkJp[[=WKI$PR:b<?[oi)-!IoA%^UlY@])6YIXU!ReVoLIBTHGm.I.:Zoq:4"S4Q7`^m=qV$7<WB(,bGii2p_PQV&&@5<UQh`B@Z\#Sc+coclQAsD@07]-XY<II;s]/%rRp;13m.$\+0NpbkM7e?;<8%l]N^/@c2Ph@C%AaBlUtLo,0/6sF$%jXqtZT,_,ii4KjGgm@HD/,Nn1ei=SC?'N.^0FA*PmIq7j$2%]%DLX$`]`\:C-``1OcceT<"6BL4J/)i7eh4D$]_"d1Mt9VfG8/SFJ%@eB/Z:E]uOi2HrP>eki9l+$A?tC:/e"p`FsZenTnBWth42%XmjSMKfV^oq"Eo"B0:TaK^Xt^j;Ai?N*""D4j(6Yd_65[n+_`CQkOqC(?T-`Q1$COr'VRL#X:%^>7#QjF2C_#_Mmst/]g%FbErlj%@c$m>;ToGqb%aQKW.fNU-gDZlU!338,F:9R<KpM#:O,iM/u+c<bLiV7N84-JC<.LH_Yim:/]eLFXQ;Os1&OKmbg1H7<^iV!r9tAl%0K[s;r03>="@#`ko>=AW7A1>s=6Uei)@^*87R+=o1-Si`e<4s\Fci*8kV7)qQh2d[gO;^'qh$qsSP^_GLSn_7nh'!ZT;X(.NVU\b%aKtYu3geaK-Uud4G%B^1#GH%1@A=R42N1lh7;0N_L$bk@]8TKc?2Bh/_oQ[bCi2"Oe?[r-Fa7<-QTm6G3LN4YZKJMOd_ZUr&c/%o%]0*FkM4N5nAD'#gZnKpGF?e4rSt9Z;:AVWH[`\2*?pqGdG^<[*)lntMqNZ6c8`qH"KAXN\Sc8.c^6sJo+36/6R=EDPSPN.HP52Tb%.7HGH^ZA7no!qfe]BZ$M;SJQKbFe`]q)n\C5<GJW*(\3L>Q,T`b3/T0r0dC'iTJiTr02Vpch9qZe,4Su`H63@K_<iec5doWCH5MJ%UOu,'99PP=Q36u<Sm/WiFaV-V<*"FPEr;bPW!OnKri"8[KBZ4(ZKHV/B1S?92b3FDU(IO8;3*3HPrr6hF61L3o5d43>tV^61r"cX%WE-rUWJ*7W2ijtJ`"TQApX)1iV<%CLrXooji4[Y-UTE5lk.lHRf;?)U^"%/2V#RQ-%%p.MOnq)*MY)pt1(p=@,P48bcoT<1T^G]n%e#F"ZQ6Y]!UJ$GVZK1_iS^hb1AUS$P9?b:SXl;?iU=fMDAF"kKAW<K,rD'fDh"LhMcJ%?i"oOqSLOOWUe^OJ'@c[*5Nj<(VD$=JB%F/qsCTB^0)<M-]IA^j"9Lc&L>CRsUZpA%k`.Q'fGE^)!ND5Kn*bPr&crN/e_D)lE**6&bIMMYMsKVn!\:j6$iqLjY:QNQO?T[7pb%9;t&p8@^B9-@2+pqJb[b#;,;GK[TQq\[LVJ;*R_'[jUq!da:"Lea(\>ZMrlfUW!tUZug/A<pC$o:>"r=16!SjqS!s=WZClP^>hdg%OYUYZCR(u$4AV`hk_UT$d]?X1eN"TuL.`$OC&3`+h"QAZO%)mF^JE@bok_Vdb$"3aX1b.5ml9bg9$fMXCoKO*VF=ZgH@kD9$dI/*%gL&J5XN+!dZML4[N0"f/BPTT$e.T00P[ZX@ho`.d&,).3GNlMK7f-,ZED)e4bISeJ:Wso_b4g;'U?riuO`gp]TOZ0b.;.Ajq#lqs%^XD:Ss.7i6qFXI15^4$qQs1h./N?h[ZTcEO8h4u@%^""7>I9hA.^<_E#8tS'ZV9/TnBoP=4"iV2]_e5Sb_LGgD17A^Ht;n`cW7?O%2KJ1@aXOBua0DhdTraK\<_E(=4KWH@#mFa=gjZHOH_@E5ZdGAaOXGNFCN8:]3"fL'Tts+NH"e(iU`EqPE6IXHAET79-8+-LIU@He%CTd<i%pNlIZ>OtlQa0gGS9!>3l\W@5a4&.+WNU'chr%tS/T!,gHTG[eN#45/"/!rc#NqB44e"sbD%_mikc;e:2m8[kgYNT'H`^-o%JEB1ro76fdjsGMsS4NdU?Wn%*dj?5mFdFJgc&ni1W\uAHHVb\WK?1=nCuP3g/9I]d<8i_c,+g"sH&+TB"6K-Frc)QFs34#FEi^>3%6frce\n-9g@$X8=b!Y-go*P*]krP9t[Da\E1s^;3OT,QJ6V#<Ejt01!8kq-_*oeD:['V)m`91lK$![KU(Cm\1k>l[(p^NW-Z')8^%14CiD=\kmD,EjN3G6,rRNia4E"JkVZE-WjQ%sk6mj=DI?0r$@E"lIoS,792U'o6>irlWEp$G>7ReBmlD6XEbuF"0Dm:\dN<@=23(%=f+2f^SeRP%N+ba4ts!IoQQ,b1#`c*+*o.]VGbcE%AJp2/88L/^[:KJAp"XpR+d2#KARLX4ai-,f_?lfWYO^7[U1B1/A_ah::.q;%ggD+WndeN+:+4XI0^YZ$S.GpiHcJaV,F]"C':"BEbnO8[:9l2^FT#aiWdj8nnb?r)Qb;3m;n(Z2o2dF%R&?G)$<mkK%r:p>fc.C9%/NY?-IdtbVFOl_<7/o\-:eQhD:26)Fp7p&ugC($hM]UNnHqG=LlMgb0fT*%&(;>R/Y^W[ZjM:BsYI^7je5CEnVP)cMlA0ij5t/.=%PbPX3o]hld%s,G/Vi@`IW=t$?(p0'M.u-9rA8=TIOceXnUXi=5*`ls%=>0Tr;<NgSQE^9)"-\.@4W1Z(24KSt`"nS5;q+]Z7on4e%0iJ4h0*c.m5D?!BVe&G?,V=!Hg^6W_aU>5LI"RE8B6cEHKJUkoK_9oB>k:5J)/`Yp;3MZ(8_1uq8'X57=@7jQ+"YqD'Ic,)fZ*<j%Y!R/FhtX/Bb&jgB%"6RF)f/R39iVJD;WuOniApNZeu*t(CgPQ!oT'js%EKCpZZK&K)nj?">BZEI1oke&`<i)^PJ4J<.5TMF3)UVn%`UXUUR5Hbl\LbsmMX7CFLe4R;X[>VlmMh<V=%h[9cZ("]bh`!Bk)O`1kjVee+24:1s4k@T:F3!s239`>"mt!>OM[1XmBiP_RaL&$%lgC6kb;;q7Or;niaX<$pSgCel]aUZb3pPSS8XUMa/S)&`:+=],TqSL[@cs?YC0s^-4cW$-MWd+@BDg33ZJ!sG#X@MP`tW)ZK[OD6%>oQo=eX>KONq8Q#mE?4aq(3QK8Gk8bgR_rHn2:3pq]5;j52esY66fU?Y5-$3N7mK`AM."e3Eul]B)1:?iY>[FbaArO0)*BC`ul-2%C=qgoCs[A\g+(O.[D$`pqm_2ElO6mR)Du?;j,=mqp<(="D4FC_N?(&7lk8EG/!7pmlS<.G`lG=c/6,i%-Qh%1(&-6?Jb=(nSLukT%?0W:5h#h4.H.*t2)$bCu<aiEteDAhk:TPHUjhA-9P"o%tYeS/G8_3%6A"@CL44]RreL9IrHN?><lu2D<(iAMdbSG74S\WOT=l?aG%`f4ZE9t2>,MOdt6K^r[/Z<$%FaUZt&[JfMT0[Q;t=(SKgml:)KAYrbN@h'gBpo0;sfEkN*c->XUXa^nI$Z++1r[7Rp2=bKLGM'.[%k20.am&U;P\4Yr$KckriU!utWPBV35P>;ZA:D(.%s/iFV&9#:fR-'ae=6EZBbBNpbr6;S@mG3\kJ):QLn%\:nDV$g[Qf"F=(G5*(%Isq7T)WB)WjltIpR_H>c>@,e1H`NA'l.Pn.n_W6pakc?1muOqjkGRXZ0<EmQhUh^_A#XLmXmI.$S6_cB>s(>Ys)mdTXs;77F5nY!%pmRi1fiuXplf$66J+QF'5Ee-@6_1PikE;=lft3EY=&Sd-W-d(\?HH%3V!=LM]pl(jm+q?GVoR\E^V8PdV#daNHRH2WHT/G"lZ:;0%Apo:#qVHF?kND0c]be`@=Fh8Qm*QI_a-W^]S^T&odg"`ep$(>TeVfdGBA``.]6AUMI(DfD_Oc^[GIMpEFaL]K^:-5[qr6c9pu[@&%?M*7TmcNNqnntU@^L+,spFbmBMg+U>Zenj9VpEuEeCiq%s1^P-3Oq5l#HMf;jkBT]h5tTLaj[<*>je`oH?+I^_>bhH3]f>cV[*&s%cd/e.F70Y"q`ENsou5JKq>0pSr(0puI=?Y=!].T:EI>(K>KUP/Q.Y`\iSG;_jRSOi[(!d-?VJPJ`8%;>O>cp`>V:`.B0Vu=5l.5J%2?1/b^ZX4hZD32!f2k(44t1p8r/$otfmA0;'3=[sT(cPf5?Fa*&DlaKS:,U/ZgIqV%oi5qLTA$+,*AG0jZoPq_uH&i)2EWZLU&b/%8bm!D\UN*[I3t5nO@ijgmFf.eO;_J!NN^B7^6YrtYu<S?B7%PFZ4Rnn-eG$cla9\R52cSe7p8[[cJB(UQerllhd)`ohqc^@]XhAJ%kMF<84h(%5+fC-lJ,T)AS%FUOVi*dfQ]aJKD!LN\j9hk`T.[k6bXL5\:&=UtXU9DZod)QYX8c6>-[o`'0>>$3>CZ>:`Hp_)?$:Oq%(TrES>+YD:h&W-:LV.hSq4*JcmE=J8@7ds1n]^Y\2AmT[>]i#QFS9Y!NmCMISj2,-\Qp12)83Po3k[Tuc>Z6)hL`dFo<mt6EO#NB%Gd6:4g*9(;F0ongllEj6#QC`uBQ`cOI=?OUn1H3\d\6R,p#Yr6KoZlsT+a57qs<F`G?<tbm`FpWR3u.gDeYWSUch&!bg%;;i1'T1%QfiSbeK:rtmTt9aq>>!jGK\I9n(+j.86Yk=n\o_P6-S`jMr/qM^Z\eWn:^#3<d8e3G.ZTo5'uhsT5F#[r:kTOO>#j,rb0&rq<<P)%o;h28q=2dF2+_Vds%9>A\R%h'_oj.Rk>s<CTO%NrH9ioon\:*f?i4pd?_/?H*a^S1r-fGhY%cSWBF:Xj097d3L`%g?s"Ah_l97?U%dJ;lYeTa><a1"8ap<SSLh;%J\i;`C$'60Q%pYp;.^pM]PMm4LPp6RjeG(SeRlc&krh9?IgYHG%RIqmr(ejn14MS6Vf0DZqYM!*Wu%^:rY50#+o\Q$d8+lNKkKZfb;'H%#ShG"8q^d$8\S:.$3CZtKU5*d>%R-3;FrdFlVDqE(+GO*sVNY="c&%F8oE5]$/o\\0XNYESSN%Z^7JV?2RrK==978VaT[ko>&%MUfS?cY&82fa(B7>39&*,HCG6#B4ShST)9"8Nf3kZiTi]n4HPBtFRctq^\n[F`8CQ,6)rYrroa'8%39e^=98W]G`BHl8Sc=%,dWhWC`@4N,.T;h&e,H_C%]:PIo=4"I.jW'%,K&*7gjqQXPBYm\i$4YZR=09P^[G8'^`W">UG)in6AQe?%!`+0q-i<QZ*6'G=k[TE'VO1kQ/M?(4>fD>?(m!+0*#uI;,53Hb1(9L`Pn%uc@@jdJ50'16c6_)tnhT[s<BeKZq5@!+'jj:aLh)`R%)Z<s-rN[WJn?<n_WRC::LG-E^RW^0g:eRpudGJNkY:G:*l;==e2qNEboTod6;PTi1)HF_J-%[%PeILg3+oOQ=8'>W2G*[#;$a:%4%Ra3`@BlM8$'JBMCFuTY^rkb@K5^s<28'@\+M>u"emN],nen@;=hmB#!p1\^IL&]Tjp:4D7TQs22r<)nC8:Q]oO&iVh/)$=)XhUYN%d,2oo'E?=X]!H,WB!)VELLeE:"+Ljli^"b%ZdN*E#Q$U_cV+[PM*]4VG(M\]P*hUb!rW:2A0m5'3"G2V'$(P[Ls\cHU_5!eVdtsT%:`>Hg-^J_Y74on;*Ms\#bC,8iSS%R]2<ce8V'@:V0T_;,&!P<Ld>q,N9LH(\:.IsR,GCo#6mF`MH);p_VidKmPb*Q&%cPUu<962A%)-p7>/'7&X>n*#eF>Y5c\>,9'R'M[ZB$(at3oF]%&^uq?'@Tf+UT+I(^ONIT']Y!9'$Uc7mX68dpi\b56oeqq6jfF%@,q;sR)oBI%@,q;sR!(A)`[3Do3HTii8]$9M87I3"G%Rc,?mD.OYtZ'))M^p'66&Z?4.Otc;b3gKc=2Gl!YYi17#5Ac2o9Nu;!PEoc$)4FN3)3m%`:?N@fhm'`q9XP9fd7IZ'd49$5t!7l.Xm0:">g2F!)kmgddYI?5TBkT]YQhI8V=2Gp&$a&@2ip5\:qS`^is*ViLoU9$6B[T:e2K-%9uP8/CuPud]@nF^4X.H@.tcUj*d5K<'?IaSKR#g.l%g#e&QU.!'=oF#PA%'2IBCX8&Q9er.Wr9h1il3_%7D.haC3V\:D@K[.rFq[%E<8oUT^]Z:P'HK/UJ$aMLVlum`;*J*FZo@YFE0.ai::i0G^+ITjGmoh8!tcGGsq#Xk_Mghkih5l4c]D=guupJ<>&:?FFN&nFEg1a%+&EXJe52q&$8n9Nl#>iX/kcL?#DWNheE9$gg^`TZ%3j7t+rtPs@VK!dXU^10Xl)>inuah59LFlZY<7s07.Tc-,i=KV[A:oERURTV%N^Us[36nn;6tH:ILjYiGU![Th>*D@p+je&EbDAX\+WVG2-S4L)<Ed(0CD^b34e4V:r=8'KY39+Cl*St]>4#"!*bj_!XoDAQ9hi7)%:OCN'B+"0[6p)V(GAq-98$m1>`&ICHK/>XXKt'`!"qugC\30/?=?<8&?I>&lC#^^\IjQ@qLuAn29_!p`fDuT*5*8D]@OX]#M$PI?%gN.?A8&PTBOLdlFeO&(8,0RnX,E\KD_OH@J*YK?nL_uJs71aRb`-!::W[EChg^u:&"!Z]P,3;9>?&5]u1%7G=mMm5pg.7re>&?;/%Zm9`M1*%%nRLThu]cTi)OVAj.iK4h_8Kf]Mq0)e,XNG7dk%Q:Oke'GZ$#!YE/OdYHZ2No&H''EXh9f`YG!>`qFW]AQTq3C_"+C-s%s,k(pae?=RnLX@DJ'b<@ZbCq2+@k,Tq1^c07GRa7.K4"<5FUSmVYHo8rb.0RRc9C*pnK;;W,t8X?]V#P8.(ERn9:A]OLai25^mq>%s+=&9UT;Se]>]!Wa-S/aKo_kg=LcW?kPc]Us.7csR..;*qDI(Me).F2e$!b<Huo#[jne[o]st^9];D4q5:u^^MlE'4.p)bu?h3D6%H1[FcqF_n.-'/%g7t8XU^Z<dLnn8n()Te&9n43nIV"!^K-/rVM><D6''$P1+rrq)o6X_RY5/"85IIio!OVW*r8_d\5*O/+ac>%hL%beX_';q)1Xq9NB;>p#]BDof6Qs'8%%S#4ULcL$c%R29au-jY_DW;tN]Is\*nVEX?2^Z:IU9)ni#.f@I6/j<Y?qu<6'Vd05a5LH\%%L+e9:D0tdebJ)NcAt_BdoG&sPm#jI.Jlb$t<g<b=EepM=^Y2oO99&ik;KJbQ(K(&FSR;<jR+h%p2CS>hhJIhn,9F1VPt\mgVSf/>%[>%a!g=&i)d3?`)1U/NGPJ.LTZrgZ+kYn4^+$h+CX2S/#^.d%-a#&1##pki@n#D?'q6Z'ldR2lnFQe#B<ot@G\Bsqq[l]:uHd>uj%3mNFbZ>07!':hZ>$[/[0dGeWsBf<\5=0*O?h,L8EO(i%p7/.8"BL-U<GbdbN(<;uncD=j_O'tGYjggZe3Q>>pXDP4*XV5!WM7t<C%J3Ak@0<\Wu(%GD13[L#P70iT.XY.%&?[4QBFMV5:V6B2/<?e$3/(P(kboSg>e#96ORKa4Op_V2Um&#RNC4XUcm?51Jf4n\R-2(sI%BC-';=]nM3\.`E#)_!W'5TALjZ3'I:#1RGAOF'(D':[V?mjGG2eBq`.d(YXpi\e%dQZk5gb)8`1-5)uRgC8`!<*BqjHMV7_Vp]9S%anN)-4?!o#=W@';]>5`*Ljk[%(Y1unf\bPDIcL[`JS7n&\i-cMQ+fk23,:aKMa+n@(\Z0J52lOa=5<fZ/a:?2-*(b32&o#n)d5uJ%3K?f,KdX/Q6&3d_3.-Z`()!Zb\']K^8&-P;Zh$10I,']l]jq%Ph>)a0Gtd'q\^ni5'.rOEqVB8GLR-bP&b.Za'(d%`='.7>Uq%6k%Jn1l,]0*>P=*-+C/+(fMA=9([C@)47%N+^MUJ?t#a#3:E-6!^Xd)_u730#DBSFp#KB.k4N.NO)UAZ=%#G_&5Up5">)P+HoQ<"/cm%a<p<Q(Ir*W>XtDRs(13A4J7WAla!0ER<5*UK=%35!-u4_Ju2/g`hb4S(3^,qKuf?N@mUoEJkhJ)3-):FN)J&uT>BZ'O*DGY9/Gs6%@6Uq(NGVOk[g:PXNt=7g)Ad-?dU_PR:T>(=?NbkTh2.P(aMb4tFGrdWPYUG0J8ruHkV/l&XsCQV;\GO:8h>fcV9LCHR#@/@W#$OC%_/odaejY-DJrD)2X/)*/B@>Hq-:?Kkl:X_)1[WTTd!=Z:V!^d^(6h*(>i\6-e'Z'h_1H>0)HIlc=_(HepJ=jmQ9\u=._3o=Oo^q\%.Iqn^Y9=g0`8Fi#U16,<_9cn0Po0hoXiG'W[pd1=p^.]n&4%ENE$9'QTb\D:bUkrV@p!!1"coDi.]jhA5@J@'\59f5KV0>:/*`46%N7X-;WC1$,P=-/Q-r5\TS7o)sPFuM;k``$n=3T,,nPQ0/kao(hEl9HaDA'HpeA).5H)1[9PA?O2p"?RGR1B6ji>;^]M1c#2aYHHA%s%</RMbE=q0,U3?MbFNi]RimoFI709hNa.T6mi=@eqeG;3RUCDXPdF%#pXb5QuktW<OdQ\UsQ()2^W)#"d)E/B$b3f$WJ=59;&g%%$C6T085qj=!Hum=;b/@WTqNKF3Yr?d@tK7B'cU1E&]EgY-jJTFP8pANG%i7Zfi41J,PRQuJj)QX3s`QT'dbP%T;/!RB<P4J</(6s%2%&QcN`j*6gK(rti6JuM(LnV#%08l:c7T]#l5Y\;NfM0@H\#m3.D!&*nO*mkZY&R1olVH6=j#q^2n/!fcit*:*dY*n;(ZlP]iLb[%2R>OuPF3O3/.C'u^u[2gZ9ZP[*?.1:NVArR*NR].1Zm"2_QlfEEu>uC]ZQtXd6DD2bT!qu"H#KL)hEg.'UR[;I:g@DYumERe_8ZI%cWej-@-Zf&Rn(W,YZm9@]81Bu0JL\I!`+sua,!/3[P+p5:T";"=pTg!$X)Om/`1;S(#26H*bd`VMLjNU?9H.b(T>Dl&D>Q9"*8*4%e5mE3SnTQ>VFOZ^+;@mN.\=mg()%tVW"p4#nXomE%7WQJ[DNoGgjrYOIF5T$Kaj.-)j<#p85(6/*4J3\dDOHKMu.s4-g1o"Kb]S3%l$:FGn9V%3`%%H!djde&,L+=$<*0<t5p=0$E&0..JBHM^/7n%@.V'RaN=AL>8Qgh8.Ihiq@b-t]7Q:ZJ4AJd1FK+LY$;W51`2<.Q%'gr-]\I!mZC9-:R8sps%8PU(qL!Wbnk^97n!?%Q5ME5mRgOr2)DA-ggHFVrl:f)Tgfsd?a>ja6TSJ!u*DKBr&#`bsLX_Cu[P"Ku<%akWI^PN6L-cJ$`mK(&::D4VW:!&,La-^6=BatL'h)Q8Y>(6"l#Gi`X]R1s#X$')@pB'J:gfOj&`^d@\;+^DHcBk:V\&_jsoeUYRc%aK-.Gag'/AD`tI$.ta#4L.;#Pl,`K.'Lf=Q8OZic'+l-'P[a%"5'QlCA$Nm7>&.\r8oK]eO^1W'T;8*R2Bq!A7Tot`nY@/f7=te=%WZB<0*:sFSJ[?ABL>U(L1+YfkMo:ZI&AtXr/L)nmr&:F2ic?IBN..E3SV[).l:/eY6K0pN<lY7Nm#jPraiI+?b!cu%LCO:uY=RA,%'fG2OoGbu.OYg/u['$*=kYRP'%GF]@&V7W-%?``%@UW[Vmj%Dr4S5Y$#<V">f@(5[8DJj)1U8S>Hj2=1Bg\=W`0.?o72;=tM,Sq3%Z[tVnY[tJX/dic^Y$9mSMRAm3_@,*k*hLT5KC!%07@LrgP>26M,7*;E;-iJ?X,b]emk:&h'Q#4A9';]>fS+,Xb@0BRZipbo9s)D=%)ca8)hl)\Ck7p.HiK&T<)Y'5;!\F1@d5AF/b2T`WqFle;q&?ROUb#%S.Gbr<8;g@gD#<B<C=Z#2p#q<IK:d^;N"&P-Ht-J$V$c$A%KgHh(D)Bj*a%Y0`E7bf-g[2uTd1iQ=kB.nj8jn3'#$46%Vkmq!-p`DqFh*W0N>6Cd"WF0^Ymuje/S^A;nOt4tf*0DC6_R%m<q*`<%VPI]pCRXeU4lp"TOT(MQE<WN*E7V6]:>3MJNO39(IrY[3Jd[Wt`%!DrSPg@fW1AC4$)0Y+gYeSu'oia5'ZAm"Q56b*J9JOFP6,so%7Tg0>J]qnk(qX+A%)G"Q0$E/ue3=s>rp4'm[4!psWLD&EX=[m%!U#F<A9,AF103UPo)lWE%HLOA%GD.</+gA,]7EQpgUi_cn--%n%"?jrYDO-Bl`4e/B'FpjpN@Ho[+K:igrNg/dZpUeGld13:eHk&)K^K,+"kP'5Q*t7?07n2LHR6J\bAZBn!gc'AL(4b`ARbBDX.#h8%;C?:&GUQ^T*RT_G'!\4ILuZGO[p[PD0e,R1."on3i$lR*!pqVa-_6TQ'Eb<%,+YW560-+NrX\sf2/3@^deM(_!U"m-$eXD6LPU/Y%I\FA^dqE(70(1ChlE-Hf:n5o89E<.[o4c5PV]?aN?>%Q@-tF9E<F-DQ>nYgAW,\5,?']CAh%m0/8]cYP@5]+X"?=f:?o81l9@*Ta%l4dk5SmBpW4ig>YLDjWK`J<*`L$^0_OkH1BWfoe!B1H>Fa,4sCk7(Bd3n'+A#=O$.i+-@iPS0bnl]`csh?Mt5r:X3ibJ>_S5Q`FI%aUPnOT&sl/($p`4%.b2*@E0`_h18WWJk!>67_]o>_6YPqW3O_egUQIt]N3D2I1ZjAh,_rMXa5NheB?c@E>"PV**675jo\+a][8/f%32tuQEf:"a$"l9_=YZi-?;*a\oFqm[iE?EA/"$3+rmI.rYgLVcG$)n+ic7#=p(`<tKU*Z/2\LqXTVa_j&Ygk"j[&FRI__P-G6c8#%D&jGRJ<LbeQCEj=GV3ZrE$V.#>U]L>fK,JY"K'M?JB\[omD,fSDH9mBA#=EY$9SaXcm14Km>67c_+_QLjQh'$S,&l;*I!8(O&cJq%`or@*ZnPS7Dj]R6RTTS=bR-nEXJC49!f\d#)"gp!6?fG?_cnYbft'3V'h-:/0]II^)caRc]d#&3E$5aifBT]hB'rC:$kI_O>>s54%gO1/EQk1es@^\,Q1Z37-_<E;?`\`qDN'19c0;Rk-7eE&B['OpC*4tk":.4RV<nK:@BT7OhM4[5KZ2u6q*`9,k-^'`:D9o:ZRDYDW%("3N/ks>b$-BcLc=OmZE2i^bpG@6gq-dO,32u&18_:M7iXM2!>:T]^b+hg?R!H_(_:WArHKR8#CJ]+8!.^?n,hH"f)[pC0se$8eR%=+V0Rd"k)T[jUkB,&'JTbf#)mnBC`pL\418#@9XC''OC)IK7k[=A&&`F7^(,64rZ$8:t+(!6iB:+Z3+iQr"a?[:<h_ksZf!iArd<%MhM880q:MQk!b)$d%@7eA8-#*R2ZP>g4^m\L/)1CL"&j5;'&%;'iO#3Ne?*Q`;5?)HhUcBSluJZ"*k5!Qsa)C%N5IkY(__HI,a7H%_egOQ6a7B"AOGIg3"mUL@RhVhT8>Qn%5Z$;$lMsjOhW$PW3.0tN!<`,bU'"9b><PZPVo[U%fUJO^nTj10h[>8bf:',.;&sMYoVr%%V[=lWiR=M=JdI]#pd^GKK#\5R[)-66(:Cr3RH=?(/-UWF@>nYTQt03a-Ob*\-@BWNi&S$:Nh<I(4gF13qh577_r+"[GuR=23iO/u%7bgCR$t.aVa]uVf+T`K<V?f4s=E5m!o!6h;''Nd^2CYsPj9r<X_o.8'(JHfORE_:mfe]jDFO$'8?WHcrk6oQ``8ZJcGc[[&#mD+H%X669'^dR8q0W'hC%Xl[[#>kjJ.([82F/$ulZ2J(37<hC,c_g`</5l10`V>)t+n\Xldo]W14bPa>@7F)b\Mko8%mG+]LRIb]@lUHh%-jIW!MCAI5L*Z:t$B$,ui5A[W30Ib^2<e2<TSU/a2_7ERc$gE5]a-g!KLJtG.k@1sSZtK^4TnHN\6^\#"#;#D*g/()"-ER`4(s![%asLnLZqm4L`/d?I+=?^bQP2jL9B/,FVFlq!MsUqdgtBnN"iP56Bo?lmfGVMC>..JIeS.U=SNZS94*[4Xal#$=_nc?jWgkBPZ3icU%;J'SeAaC'U39eD]$K^!+BtOmlnTLU,@\:o,pqs[KG&md"oU;IYdpnu88koO+"S#:'&R?!HVR<4J$f/1A&OI`#F6nRHZ%JuU(oc#D%7s$+K;>c[C[RLXg2$AsR)6l?Gc4OiDehq_:%@g*=1Lo<GP?$W8N0#3>Bn5jdX;$%^V$s=.0^un1Bs2bceD84V"SebMrr]#%aE!0X%co$>CHcM<k)&,SQBJhdll9\"\HkZJbc4#4@$DT(0Pm:'CWIeK';P0rUbY(3qHg5TA3^ar/7cY!7;:$E>cd^aGT+UlJ%agZ[h*KkL%haY\D,l26(,`[\V"kn&XG-g5X<=sq;:dQ73.W4C=,tj7E*!"MUp>D:A5)O:^"RZi,-O(5>L/YlB4ML:T[=V=Q&u]:\ZUb?DYnorU%Zq9SD$!%Ge4-=QfmQdr]U'Ir`9-VOlH7L2p@]-4J0T(qDj!8#GaH<-T+=i8o%Pg#4QjlH\dGg<L#9I'%84+R,)]`(f).75U*9?./%eDKST`&Bu%aJs6u_]j+l$R[8HYZd%&CM$*d1,9?U;j@V1SjhS2Q?2WR*.Vs`.`0u3jI@GP![eoO-I+.)T:cu;Q0LB)j2E'M9G#>V%NZ/%plm*]&O:bosBDc.T=k3Z;`<F@eidD:LV2mp`&.8U"KjUH@4WK0s,R!qNCrn5uWFT$V;D4/q5pn_0!(<;q@E'RbH-F?O-p0.X%0uW?s%(n:K/9&3G<7!nHU);<n0fOqaW0d3<@YcQc,TeE>3<<R:jTKcmr#)5s<=<7k'9Og3?g!fUB?5RE>DK'6bscGH\[CRRV2<9\%QA5>\(%Hpl:/2;!;ZAq:;n'd^SdDN!-dGJIa^)uR"UIFG)0?R+mgtf7T4`5n2_t(.9`-_g%+#Be1#Di$qA-`V]IM9EMd,[bR$^g)%VFhD'?t[*D`QgVVq<q,,*K4Q_X5Sm+&f!)j(\9#P>,Csua#'b;<=r-8ahqpUk;"oc-M?YF[MaDme,13FC@(`=k0r3/_thTIG2hDc%r(M&#]!L\995L5O/\n3BnZuj\BVsN8%S3:KT+=D$f2ppZKl8A#;.:P9j/F'/>Zau.7=.V.oOFQH6fc)NjG07u!1(]S-ccp]3*ME6%&d`ljcHHI2%I,T/9-i!^gpc_MW8^m5?\^dkm)Wr.:(O%TCp3?.6tdN"D9Nag0=:4/*uYMnfO<+%b!oWfEX8]mS)]Hshe3JP=Fk]D%Z!0st]9"dKrfM&OR3CN!16"K(`tW6:+nIMGC4G?UG]S.#&E)J4"nmA029\m6WKg`-8W(=(,ap;8Rm.5j,@-7R(UIKP6EofaqsYuI%'Xf$T[*j'K+U>IC8LJ#+Jp-,m=csOH*e`T/@V<D!jQ?:)+F+Z8))/d0'YCrn_iD)q9g;#!RA5m3$&+TJa.4R&G30dWP?6!!c(DVb%nZB\"T8MaaEEZ4/P!t&BVbLd$)`q$hfaEALag.<9HhuAMK#th(N1TXHR=!OW>REkQlqq+-YsD<efEA@s^!e_ZPo5Op7`f41NXgZ8%34l701q%1tT$-Ce2bHrr#_K@!qi"WHAlUW1'slB#(O$-8Qc^SXr#?k1E\?ieR[BI%h\R0)Xg,X'Fg[EY.P,,0cW1cZ!Efn<+F/MK%<!Z<fV@ZQt,`]:s*c>'8F$`V)%NoS0N?/="TT<R32t69mK;oZ3->4l.BknV4059U+Zk@'8%4O3hQ:L-Lp'E.]&rfVW4_5[<+m4Ts%A:jtio?37<'/_>_=_,Id>+,V'AL01;JS)04lQ>pjGnOmXqcB8dJ6*jMb<^&W5>!7Mko[cH/=DBbJp0kNE0rLiN+EdL,\6uh1i%IL%hQJ1jG)h*uGs=kOH.-YaAKkG@Ks'::E+'T=l8Oa"b^KGED06ZDL/Pkm$"Ss.,qN+r<36:p7Sc-]>:XugWL?Y98PUsd1j9=^?A+E?%$%'SjKi.N9IP4?g!,T.;k+he:EC*!@R:b/aHS%,#*)GS9&JlLP7>>dko75lQX9j*Y;%p*pf5?RZ=H&)BB+p14B\GmQ1sf4QCqq#:%Iqc>rMaUg3Y2r:AQ7L!Q^l(1I'G;6@20-)bQj]IE&K`^K].)SnruNU^8J4nRo7l$ULk5!9VV]1+_(2@%5!"H2^#ZWNL1I/]ehJ@]%j\Oet(=Fr[,Nn*.BF`TM1>B);iV:b9%A9.OL*]eg/;i7p<P1:onI<joa;Pla=<'[+#$)j9aGb<G.o7,(iXDmg`C!^l_$[$o""TVE%$!+!B"0@$+nnkT4nmb.n!bD0.<e-f`)ls&,#2DS^$7**7nLI_XEWsu?A[I&c$6!(KR=a'A6S"+PJqd=AG61Ot^g)Gh9J]cO7T4@%%^^;sT#:gq%IKV0/`$8C#Z4YKKTbT*rdEi5dMeHdX0br*_$<T)AeiCYT8AL$^i#N3/3%0d.,]"M9gA[=&K6C'@T9CrN'FT5**#.>0%i$%:h"a]aZ6"t^A_WF,jSFZ".K-FeI%LRNoG>OBG4!#(abo6na0l_lkK7XLdC+IRW`O!UdbU3Q[RQ0"(k5IkqUkUJq56;]dc0g'2%B/feUrb&Fn(emj$5Q%V>WIiq(s)8S_]uD)n8F6?eErZ1gShU5l;'_+(dNg>3O]7@PKT76rl3UK*M47h&,2m(Rcqu'[4Thj^80[M+%fL1k;T+<MGE?t$),._/A'$eSgK-d9P&u8b9NM.5M,d?=cFWAL:a!/3?+A'o\YkDQl'#p'X5S?#4qp^-Aa:T=W0Q9Z=-?elL!\NH.%N"mem1+.#>8G_PN3,geRO^CK/=o@^^Ma.6FSY*tVFKAIcHGG!Y.7fg4fok4Q$66m<RZ<etS-+c+:32#To"qt10Y=qf5)=L#5W:Of%E8M,eZ&gNEg"3,OI04tRp'Pt;Z9,il?cB[`==64J\pP:YKEiDfTnPP$YQN`pTh`[um8,2*lO`>LDihCCl3)e*?DnN0keu=h%<W;S%E99h)F[?rOY'\umFc_@%5&#ps&q=G(@?F<@X*]uSW`aX2dKt88,LQmh$80scdYV'7UkM5u@;mZS^o7=K+6b>>o&$45`DYcD['N>"%A$cp':\?m'alZ\t(@3U:'u<Z!L!=!Q$e[8e#oOgYGF<Dd&f\7F@6i;*A"A64+&\LW/MDP?JKtQi+;p"JPFR><dR<*6#d1Fu<@-XX%ZlMG%cmaO.&:u#@7]d\O#V'DH59RiO<X1*q!WXtY3T2uegE[%G1b`R5c]R$)n5K-=D_f-GC57"E!s*=OL4G%.:->t;gCn5ED^+*O%SV)3"ARsGh,[(,jr9X"\J%%1#^S;5hN5=3]6PSPbp74tT"CZ"U2HGIEDpP>Z<W(\(&&M4)jUL9t02of8RcIutU-1ufAfG1I!SY[q%HPua3@/\YGs#^;/Xj#/WeqV#oXe-3sDI]q,)lpBO4eI"rrdO]1"?M8sU:78G_!2mPO0sVniSel1D?/PPaIMB:,j-:1adTH[!uAQd%.9p._:b]NS0u2U^(g>DoY0V#\jK0`mfZ8dNK.AkVgu7ZtpD=XFE-Ldfd[`>dmVk2hh-kPPqE,o__=6m^.o1sd%=!*B8.D`^h&UO=%F7+9sI`D6smiE$:/fb#>merS9hAqegV"5AYh-j0%gq^OsM-P,B]6dZATu5\Hc554>g`;fL$"?\=lX6q\PR_nmVa('!&+0p9hHJWd%]0f"+@%q-$V@If?Jkf'T"$Omo[Sf3D]ic;3G:+u!'4M0YHXP#Oc?OP@#l+*#$ap_HQ,Csc8.60R:Bl&6AumY.7_I40EXM2mG^fd+%49@9KE4j*q^hH'od8?&7@6,59WU/PrL3[F*=CT=`@fYm2OEZdnfnAf?:,GK^]a(/RFA`505o#E&K^M![n@QdPY\Hs6,XnRTpLr9p%D#j=7nl`+'@'L7%M'[;g4-mTt>uI=ZKEuhC!67PWR.Hd0:b_'1%AD\d-K,^U)[S;PNDOFd?gg6rciW6N'o3;[k"?p'+?$N`Rb1-#%/V>Tk0=8bkTu;TI&bk^EfSDX([fOCt,"#-NR:.T:/J1MeMTp!'Yi4;P""YCB0b8'3Fk4^-7p'jd'Ble\@F/cTB#J'2:oqkF0.h!7%`V;AU_l+WMf=ajddmt2WY;B?=Y5N@0^hYE=63UU@k[)kFkar)F[$>dl[C0M:C?];_?/%??bf4?KCsV4FaX@9"K5=Z9.V+%;#U>)/%icB.FA$-D\9g3J\Xq?u%,(qpjJ-\.Z49i;b)d][Cl$2NE/?P!qhAQ_t6&(fCXWng"_/5jI)(SZr#?rFGSUH8sF-aQ\r/S,oI%OI(%88D8^M5;0>RZRZ7fXudBB'%LN%A5QiF%&pYP$ceYK4ZfQ,kXOoD542k)k>u`!WuRmVa[>sE01GOd`.2=Jg@pF+KXPbA)=Y:.uElX%V'O!Qe&J405(r;r8_?$]>Y;lcPi5LQ4L0sJLA&oCL]L["JTdVo7of`<(6I1G^hQ9=3O(Ku>E9@tD$r,o8pN]2<G`,L%B?kiNL4IM%hWVr>/@!$LM._8F5W+Z]W-a%n>D_@4"+39]Fdt;Hj`5]5LJiIY!V9R9m`;pBq`)K_[DWX'p:N\e[>PVdD54<j*Mg*I3K(AdSeuBU%88Sg4!4=Y[g_&&oR9nggN1d&o0"S?>TLNHE_Wk)'2*uMC&/^"fe'-lfN/jQclP"T*,,in:Pa!sn:^?'5:Mg2"9k>JBfauXEp'iuo%78U;k!oLeDT_<a^8*pk&::Qa%7o0<?_^NYNd0VhE+@F%B6T/LR1))q^-QEW`LnFAHb_=d@dh0[(i&Z6(W?qm_NTb),K>>_?4:NGE%UVXap:nQJ&hCWsjll2LUc;"(;84t`)1e\ZmgILTedYD9A*BT8AS0keH*BVO1g,X9A[*rYWlnf,!0%8`+nq[Y.*/^<TT*O^>A1M;k%.s;hsQ?T$4VeM^4bn2uWRZ)/Q:.)&/+rPEIHR7NrN0VlKOdS<SVgT1>:m'4CS2T8edn!V1Zt)R"#:E!D+K(?CgE^X-OjckS$8-0<%VkIgLamN["["ieVE^rkL.UCLMF;bp*O_f2q:@eL,\O3:*NDMR,dgk>je</4MRP-,TS:ZBG2#2M03=Vf+=l^fJg&ne8k$/"u%7q6%%aD"h2Ln*aIj>7>q%bZZ.%U##O6V[m3H"\3Y%9A]]rHRMHBje9?g5Ng]Ge*U@*6kMa#XEpZJj)m77/@clc(S!>6GPhe.7;NC8*gsL%SL%'Z6qt!jf3/DR,J8s@Z%8d7Di4E78'Ee8IZcd@36KO,ZKOAZ)?H2)fOt@\UQ"`AMO2U`;Ps[*D3GjadO@aae7p*>3Ob$6L=;/9%P8^+B</9Rq!i>-k5_>6[Uph.cosWp36537,8!Gj8^Bh6p5gl#RX-8F':9EDnB+SbW*1WBJSFDjV-4-q%Ulc`,94A#p-]%J`4$FS(%#'Nuq4?A+nUg$2VF)pa13]J#iU?jru)TS4n7KYE7Nn)&Z%L#=79aNR_FCrV/hnVZ*)$HpC#)c5qGPc!NBHS$fD>-<CM'q:A0[Ya+%Ugo0J-`#J>]h*#p1/n>#NY)hn@.<6cJVT7[cijW/k0>dmSY7`nZ_b)2L/*%bLLHl2E/o&k()lBR"@bm01m16SU,YM,8%Wt6JC#EU%mUjI)o9<_K3,%I7;s4PQO_HdmTV0+tToLQ-)Q$PMY%++L!lsCD!]lU,/a*1JA<&tD)ZCVf]:(hZR<m"Xb7X[]h%dAuJY2a"<?P^q%6qhJ*^BsNM@UP?Urf2B714q,Jj;,,P+jH]OjD'?26V3#LD.R*3E0aTFp3D<8pG0]<>8mc[[XL]qZ]2rHqY7IXmJ3-G&A`U10F#J%%Po8Kt%Y3K\$tSMQ;TtVLBAgp'9q;YP594,`KfaWV?:l.JA0g&X!P5SZAW7Ogfm4Rac8HXmlVgW]oCeDbWeeWG]LJ]<6*s^fDCcE^%QB`cU`GlhlT%0m/bT]\_,'8Q\NiY.a3+k;/'=<u9I#Q:tQ@+HJF*pMs>"8E&rEu3AaI1%G=Hh,f:?t1]Y+hGqkO\E,-W*3e,KQ8n%@LTg_OL&S59BmX4Qs<DYL*$-q<XB$B"Z\pNNK`ZNkJ4sCD1J.5=daQR)!;S:ULt/$Lr<hsWs455-R=l;f+H<t0Z@!Q_APa"jg]k\%#,%s(dK.W!JI:I5ScKY0N8:,bblLBU`7#.Om#ct>:ft!a^q4ZF)t;uLM9eq1XPmbFoBj?k84^K4Yg%`!/(_&NLnqkM2/I>a'$Yt)%3Sk;$3Cu2^_u11X1F[EZ1O[UJCa5EXc@F/u^h-]WJYo*MAfNDJh,%300Vhg%D,`;*:II-2:ici/8Zk5>9>aAT;.Gu*cEAl"*i'Z8%"%bHrRNX,AgoZ+hLsm[EQEc3#!moot:Z.Z"lX_kjJ2;s-&5#;G6QjD04.(<J%%Kc6^PYAEZ,-U-)7h;)CaDVaW6@e?2C*?UXDukm%1*^oFlY\[oR)Du6V^Rta!aH^Abk0`PA*Y9"4NW$iL0=)$_Zkc3BpdgmMI;/^"I6hHb[qCp&E`$V3+rT["S-WJ".54t#UO$b0Get`%"E;NYA_:[8.iNdq+TR-V63d';%UF&p]*piT"'Z[Z`(e@T6O_&tb!EaL^h"d'!DdOAjb,`Sf/@$[(a[u$L0=fMLFQ]1jTK+@Mt]K[%5jdYE2_`Dd]<DhUZ4)`7.p)pAL5[OT\otkEJgu^o<kNGUU<:(X=%8\+_FCmf+F1N:%TWeQo4Q#lF1t#a)c1,0]MA%,pi+4sTK,@h%6iEH!h5^XC"2\VJlp,+^fD'4e`@7]VEe$WHEf+lJ]V1Q'P)0mOmMOWrRc$(r)9-eoD?H^T]GTsh;?jT5lGZTB8Rm_6+Q\jKhOkIU%$u_7AoHU9fV+L"l6RYHYTPl'>OUfIHlHOFdLsZ0`%`m5dO:E*Q7=$1!&.11"1cN46K*L-@Sd_ge,c2mj4R$op^sXPlf`Co7h$,tZ%W>h?7T^ZJMfu<F"O;B1YP'K6cP?edngsF0IGOX;4adfc>TY_17L6rT<35^rB&6ItrFbV7GjH&NPJ5/Re"-*s\-c7+dC[UCsQsF](%)sCg/X'G#8i+-M>8E_jK1+/*i\,f@uN#jAO:.>Qn"7HqoN26U2@fRl@iHl"n!2_Jb,d#)FJoLLV34EX_8].]rH\CJrJuU</Tp&&Y%\<JnuambXJht4i\U@Ben4Z9;b-]R;9Bpk(CSA-nRPEEV1d']R2q=^PI3]brFk]>EB-R6ld?,Umk<^<Z[lf_m"cYe>u\]<49ad&Vj%*Lr'R3Euh73#VN;Y!\BnaNhg99nqhnj%oh73G=)sYWK@3'62P4:$0\qpRsZ;]Q5;S).>G!F;m');lO'gct'(0Ujq3Q-=_g^*#ept%E.5A.-hb39`Se[*N:sfr><">[GYp#d%OWU3Qsa&6S/;kAF[e>Fj$?O#^ki_/.&Fh<+cF$E%<PP\*&&t2%63nO(u@BVESJ3*eHt\r%lsO9VF`:Ca'*C,3=/9\AM(qZu_aZ%/ZjaHF$qUls*9<IgM4pP.("gM<B>'"7J.^s9/n7lqEQ6gehKKMc'JJNMDe"U^["D:dJ.TUk%aVX"fJsb@YV0)bmcBAY+*e$(+Yq&?B0E?`M23Pe2@3;b'T]k@1f8X^DLVXM$#gA;Mk-lL2qh?/(1G-5!*gZGfG6o>1X_'h5O5OHF%Q)kEFGSiUm;(F_O3&!$FFmO&Y%,(t-L+*D9d@eD8LF%ZakV1S?'k)Y',Kg-"#_`a5F0Ck;!?Hn_`-;_PN.duX\uq64XPeJ")pmR2%3PGsD5-k4J#T\)9T:7!ZfuB<3VV(p)$[&,LNlYY]ZsKUR5dhlQ>sf)(/`[%\^4@890qL=t_[X][Oud]pC6k;SLF\-Ddfsn2)AMUY%1oN*8/)&/@R5W1CK+;D5EIYq3FI:>\1D5<MF"DWl%b%XQ"\JH]_iOta&4qWe"3e]\T0e>//cfA,)*/0M5u;hG4%r>$ou7"n*#,2X%csbAV-9/pQ3fKqNnb8]oLl/+=JK0E=;EA^Jj0^>]GMKFc.pKjpDAZ^S-3g%e8g0iJAr2;tT3uMP_1oMhkVlneLt2[C@^oikDPCOM%))ppXc%>@)DAWj.052aR2r)S5QH*\TEpJg'HBgbj2JsB$P:Chl*B'E&l9AO2_QW/@01CFPYcW2d4O/!)`H[LO99J`g'>BL$?Xs5r%i&5+*lhb30=BUPj>K$n8apP4eQHYJBM7s_Enaal,mbq^0Ak<q$=kG;l0Xm")%30f<*@E@O>koF9Q=Yff:(/J=o_s)&ahlB^P3X5n%BHg0DL)hKH90Z.E6Y'WA'P)VA6IpOW,=!$QG**eW[K7D2G?!P+M=[Xo#!*Mk7I$f1gg,SIS0Sb&jps@b.rGG.M_b(]$lYW.>"qB(%6K`lq[LJ2'[2G*h[Pe>K['_VnUohlIMmTlH<2?XUJKerJ7SKV[NBnb*D%%"jCGQ#9D/B[lBkq4'86_Pq%V]_-d?(dr#)9M(fu?@I%_f18qR_qsaOQJ5R+Co[5DW)__@CQ>j1ll'86/$$-'Vr8J[m?+E:,$-"_=_4#(^?-:5Pajd9gAl/&9MUk5pG>,#)%OMZ)DL6.L6YB%#^YcdJOJ43!6m"u&h)>Z3Wp)+e'=;,&4hahEd7`g#tucLMi*#fib]kLd1MK0C;V/8&Wj6pVbfGV&ftblp/nc=Ol''m#!g&<`F)2s%#:$_>L/jNFd#2Z+(U=>_Y5SJ&nl7\:i8K"0*P5nP:)/#K%026K!"[O:rfL+oS_JZZZ:<lt`Z8H[LZ&`IJ@(PX/%[P./8]nZn`Bjq%9+1M,8X!8*"$]rtA,nht#fON>('65[UP1s&n=t\&'`;Vf&-G.##\4'&=pW'NNtqdOkbEhs7c^=u5RdI%&J.;n=p/A(5$A*-J<(HH%1#/Nm5XsD$76h:TBFtf.4^%u!KKWKA6rB!\"YnA6O+Ie-7uMsIk0\c'L3^-Ka9[+!+GaGI/I5gI7gjp-LrY%Q^mI1@&a^oj/L0jG%`2/Sm]+'#GjQG)P!0>K"3I[cK7sHH@[kkO(j?*D$4gZGS?5Ni+TH,gu@XJDB63(S:*K#u7beE</5ohlpj4?AJnf$Z.b>Wfqo<3J$%F-U\;YO?@XY]bKia7WdTqI/?3^I+k+rVQ1nG4'N3hU;>eG;Sn1R\+Q!%Op7';TCFeJohi7L,Bc3h(4;L%1D`@J,Xo=r9,GfkDL@n%O0)hZ3SDK3M"/25igst)%q/!;)4i=$(:bb<S/OsgW\od:-TnGM<!(A_TM'@re'6mEQihH17,,4OHXe7@0bO_)&G,P^(!OA/NndiF%h]A;Ygn%eW*acZeHqHiBHQjfs2#Vm.p["3Sp\Vqup@jn$-[-AV]"1$oh;9mbM/*#GrS.-oa,&qpfmb35NST'q;+tng.M.Q^[;E,2%>`:WWSVIZKfIV9*1pJc7:/Aj@@'Ih:%#pkr'`K2CgFAb,[.3cnH"6hX'76?0rsc7:?5"IJ?a9E3N3&^6N=10Lj=P5`]bkj4`6okM%mS+5&:^*J'bqg4A$Or@(_UHaF2s)eiG4YNVrP)]=i85Lh+9@nf0=sdZF"rn7U]q6Tnm9GM@KK]9?`.C=,hVi)URHsf^Z,.$V;][9%.5GlDNS`C;\JPCqQaFk#[n>N:Q<Io;YNTe4S/_$HCRjkBhShEu*7]>JI2mTR!VCh.!oGYV=3#:t(%G/6HM_-GHB7dF^Hl_ZCT.'C%I]CAWTgRtg^pNNp]Zn.]JiSt,b9@/Rihp#"YFYj%OaLlt[5TEf'I+e52h]5bP.CVeLb?O`'X<T>^<c!)@MW5uD@<fCmVK'<lpq@Q%oBN0\Tb3lNXb"_Q?n#l]HEOs'_g9eAK<4nYWkVW`]76H/,/$"25d&3lh:i9fpBV_haSh9a+PmemUqkUS^3ZSh6V)";NH)qIM]Yn<%ptYpaJO0iuHYD8,DG4L/c)dXTa[#W8-pb"eB/P(C(r>1Rb+4mr)3sDn]sB8)JDn.M5-(<Q-HGk][JW:)qUID:hjh!6&Z:2DE0H06%@TJgR`68+B[m3I$#Vo:FV^CG@HJpfp>*'mrA&)lGnFiW&B]!c/@,Dp((<A%`NU,^Z8Vmm"eV?_QDp#%am,Wm9=E_K8b7LCU5/0tV%P2XhOKS$!.'Pb.H$9\u:F]oS1`K>iq^Ghr>3ce3?kVm+<+>Q;W)'onG8&<6IcVi;j6`kAj%9%AJdf#t<.\tc)*`eR,p++`H\qm;C%&5!nNSEj3dqK#qkj%$tKGf;<5plk?BO_g2]He[Ugh]VU0I=BM=3>?Pi5.-OLn!1Np/rBdaP[6@VAAg/npL+Kj]iU0)?)8C&dYj[C%<S3`sOu5.UGpMlhDp@'W1r"o+`Z^HRrG8M;\inJfqkNS.nbjp:N8T/SXS1u'bN"NRl*apu)Pe,uhK-%H?BXAUG1sTjCQM3YkMiD/%`HZ_kR)ROJKiaPaO*?0`'2ni2ntnXE-KOt*%cM"an]_(e'YKJ-=3e=op[(!PV?hdCRmr8R-V%)Q?CP77O;j3^ku<Jf:a+=>#&IDM%%2CWCSB<Oo'/Y6(9il2Qf[;.cOV,rSA)3JN\)8kC:(nN2,3ZXApIE`(0N#KK@i.RN5r.?<d>i"F1L'6_e=D[K+3J&feYu(VCh!UV%'.99E"ZOCp9cGmp\h?!D@BM\nR+;.TB4H)I0b!q5O*5lfTU,Lj"k>#m9>P7j4bk=,-_A+'1;qhr`4(?mihp#"aQgs>A+W6>U:</Q%VWaXVcT/5W$D;ao0N+=7K_W"idEQCl;TQ$"c&j</&Zffa6)KDaM-3FoZ+;37M!?X"ff?JS/(B)CeCql')-*i'kQAnb6NR=IC>A+b%P*EOCpRi(3.q4G.Mg.Aq%EF(X;_H%>;eoYiX#*Y0k=\NE9Toc-b<Qu%`r7[oVGl9-JpVXR'KTAOW"kg@Wf*)5H(^"g%[LJ\o@.jn%gmC1+:9I,HXLc&%Yt9J_JE<-6,55$i7<,P@f8A-J15ud;AnuocU5V@?,1Hfpko20W&DhBVCaX;+ej+:V$Z"l]9,'>$8]qBsNjd%U%/CI\/15FXHR;8?kIm/*[6pN)A?.uG1)gjY006`mR,EnRjLM"2q3FprbrZAV,@_Bp=l`ujG)IP+c'I&T=$_%T@SlS4eTb)Ygi^4k%%\?]!5__>'Wp-ot=Xd%lbm[C@/W/AcP6&()`XOJ1cg7i#p3]@V3bc*GB-6!:0$7MGgrBpuso1Fc=Q^p_N#q'$uQiQoH_Ut:mAoD67%&!XSd'lM?!f/J6r8bN@lSgcsP/',bn66a-OZdn`oEcWoNVHU*-5]3VT/H`Ye>rq11M?<0B$<sanWguK!VHcQfo?B2N_V*U'NS)u;%EY5pB,&.37<a2e9AUHG"4:TBA24?K$HE)_><)Xd&9F?D-^t^LK'`+O,Wk;)aA$Ll1WiU<n-JR>nP\-q+BBhBE4ZBLj.CO(!aJa]i%6Y%:&D&EWd0(b<$UkMt)2&106ZEhWQ<=@Yn,g-YBY(bD<0ZE!r[Lo>gcr4DB1-AD@Ol[gA&PPH9.XLZr)"/K.@_AI&$<)!(?3Ajs%SH0T>[5Ym8@<-=-ZN_[b8Z9Ep2&BC4bc<<)7(G<PMFE2;@5P:Q.hI&%AWmR)`*3>Vb0g9kCFRK;fj,E&(Uhs,#_\0pd"'mg\HE7T%n?r]amTQPTa"/[JdK&<MN=:^4=R)DSRA(B./_M$JC-[Xo^8uJ%%%=EN->s_]+a&\ZD`qtL/*^M]GWWN4/DA&+H0`Y[\E"hZhoW6e%+fL)Ns#..#DMr,F)-q>f\+MPPbR`8f*SWK58Y-1RcmU7!^(;mgrQ%ANUOUb(%&-R,j5hOc\TgSX[K\=Z'<DX2hj:S<<M.i[Da7Vk%0h<E$2J4CGl>'Di#&HBp+C5a?;8SP'@aMtgN5Lb6+1-SGmiP@I,:A=T"6-eUOPtT;=L'VU'Je0GB(T!B$G-_Sk,*iPg5o[m5k\J@%#aQpTG983]6\pM2'*/l+.TiiW];99o\0eAfl`01Rl?REQCXHEN.Z>9[`RH,<=<KbjnH)`^Ul_F=1'h#bjM5qN)#O+uk&@R'$BUBJ%fB8N<A\:1pK5E0$^FSmXa"Gh[]Zk*6^+h's3\TAJAMAURoc[JHb8J%Xf%T6/;M>U4ppgAKbsq<8$0Q@mgOl?&=5Jkp>1,)Y.4ikI%L/fBGXHRXG,a$aN$lk_TU(kn)SZd4f7RL7QqTe$u7+:@J'47TK`n@q$n"%@5;Pb2lg)HEYS'T#O/WRf85oGkQ^1qRm6n-@:G+@SK%eo$p]g=huDaC/eu#s1LU[8tbP]^$"4NeeK+7'51)*@k\qGQB&EN&V\Z\5LX($QXY%(ci#;b;Lg^.Cai;)N2a_)jW>mA()`#/[l!Z%>+JBOblBLLC#G/U#]"rD@+#kld?`>EX*eJ\\046JK5pPGSEgWgU*Bb-E[hDhQP7=PC)!OYr2`WkguF!4P;@%$BjJ.*8p=EZ:4(L#%)1A!$"!q/RH,?s!>*u%-`kH+81oggZW;V"U[:%KQiQ%G\C"fbjL&Bq<?.d9M&BJa%K12/7$\P"2(2@cqg%f;fQ#@?mYtM]+fl-28%R^7^C(7N*=,Ut>S['!Os?'Z'&1EDD)NP^&<b%#@$;pc9$(VP[0V!!X^PiCPp?r8mS0I]qe.B9i1$aW"BB3gsKh-<p_Vi8$:W,'0f%-OiboW2Q,tLgo'kgR=us;mU&o.iYkB)\l/>F(/7jDiLC/jK^A<ki+#_h*$Z8rGD>4ApmoYIXXJKrDeBT\*&b)9%T!6PFDb7LlcO+%aEH^25Bo-NkH*KC"'%3p5YQce'GQ>R'7GRQnV\a:\->hjocl8.U*rcZ4@rFAr3GP/Wfb-$LGg@94E>3[Fq&X$GU%ah=Vju"Up-d]%54=*l>e3J[]J[magZl$S2D0IU:Z!-D/$Vn$1eAB?MuH+UaF)Iq9Unl$jqGd7[-DQ*a`b=R3IiUiUEr!jSV<PCqh^f8Kh2BO>EI?"%e\O_#(Tqp.EACd.OmODLMj+DW(etj1FWqTLl;")4bi.uYILmk?p1U+e886%GB0LFW<NEMGRLorK$.g+=45H9$Mq.l8Q9"PS.;[,5%ee7kZb8*ETL+[fY_]d_Bi()85cu]KiXq,lN06boE'<JA4)^.\6bb3&5c*NXr#!`gC2I*Xmgq'$"/'-pB.:h;<?+J<$+?&%=;PN4C%D=Xi4B/++/WFjOs<8AJNMq_hjo2LYDAeC;-3\raCK,,d>'e+7iq@O.@[L3URc[Jei`G_k62T=s['W,Ub%7*a7*]I)@$*"(-N]%fB%9]Ds:iG>]A;2N`PVcu!@%*s$n3+n<8grIo\r.-L<YqT8nNfHT8nWG5^QFi3tG+'NMGFdlKp!5R>8>BpOUMsi:WBY8Af[;o(\=5Js%0/T8QnJ>,,OhRS"32%^""*OOOm+>4QpjOM<1bXSiMIR+V.J,E_XX^p4ZQWs3\F,Uc!<cU,&!r+#7DOVu:UN.d>8Quu8KjSeb+ci=%K>Oc`o-FgrDX98N<N1l!34b`cM@#=_DQ=4S[XA-3T/GlT_A^775rBaq&-e2%<HB?<?EDF?ABf!lI;6_YFtoc<ZcH%02-H[i!RKcu%ZrU\_s&FW#rj+,-Ut'pg8JsIdY>rSG9W]I\aTg+gPZ*3n#LH7Tk:],-,daPUipP:;Q[tPrTm;f#"d'".j-1jd:K\BR'Sb7ORdN,k%nmMl8#[r1rp@KiB[/ohjG34C2IrIuDO6%E'!gd66o;Sk#AF#u<+,-^-.,4(t\>a<WB,'U-"?6!^H/m;Y2\*<"[;5qDO!I3L2=[Vo%(gN:\jZ]k+Y<hTn_l%5oaBe_L9[p4+$AQ*g2)%,Vpu[.*<il.g17;H29A=a)[HmV*17H*G8^Y+Z@.P`6`-#U>[-FI64G$",4OQL#%*!e*U>3ra[+PN^!JLH5"%BgDSBqm*%7cNcDQ'onR_grZ2]]N6!`_gP)jHjf+^a?BR\_&1n!)Uj%\Al"L=VJ,rAl]MY#K!u#7j4[6%*1<D!M\@U`3UFo#QEl<di%_pu)7?MtHp`N@+)a$];`@phTa^&gZQX\.(#p`kD/4@B"(to7(:M>.Ct=89XQg,]`B&T#L;$EkM7@>R%6I2o*BqS%fY\O883%7!;Es*2"f)keQ9lK-oP54nZFKi#,E=nmVY/\(qr?>UNB]`MQ!t&tN#ZDOKUA.3lFNLo0T\5/sk\TR@Tm2H!%2Xj1A[Uu@TlGa5/!Ngq:X3s+I]8Y;OlL[n4>K^;\MI+<)lRFFp<P<Bep97.4h_cR2(B<C*?!_h7(Se]"@Qn-s=B['rj4'4K1_th[%/B)\'$j_5R+m-ri<':e2%Mp%I.=)DAQ!#iXP.I\InpU5/b:!JS/)lMgZDV":];`fu`YqD$c@$<8*lGcg1hqsP^j0M_A;4ZSE])Au%0eIH)7M@@s&o]Fo[pu&C;F_^S()uYdWcutb=+3;fdAQg"q)U=\Ol[X1.;`A^1p\9*bsrH978>&pSX:cDN=:^"C8n!!C<5GH`b)h%%e]WWAhp*B[&e9KY@&&QU[]EQ]5W46;X6U(Yd5Y'/pag(\+e,ae4TTqY=$NFZdGgb%A3rLp8;U^(Rdr-9CLC1BM`Q(0J@]fZKKc5o%mrhXL'68$,<:+rC>E@;LM0qqS4G+]f7ks=;\h[;BRC1_ghn$!kggTpKE,90S8*c;ZiIodR`0\I6eY,%qqTho`IQNG+@6"G-g*J?&%@V*R+&5pq##pf-&ffYNnUT:#9]Lbk9Pu*!!&@prQ/_`)mMr./Q;j``u9r[_?2'=,NRUAO:U^:o=f=Z3nC-Hjs0\VAi'-(=_eoaY&%jsdZF_2+taJQCgt+VF<u?\sn=-?Z$',:MBRQ!HZ2aa?59;bWt\Z?.Z&Y<C/X;j-oRE06s$!=][8RPP:Y>P.*MDTNTX,-!3N8^f!;%]`,EfePDLoAa.`?>ZgS_V9h<-Bk?YKP6P9QFd=)S5c``70[F%Q6t]dh1T?P$f3d`R2liFkeCfX+VgJZN)=).:!&nRV9`m=&SBnX4%7(AgIR,X[JZ^P6+@Jh^W0+%(Od;VnsVm."\YZ9u.B(C!$ZZHCPB"1ANQCS'k23[YJ3l@Fg"t-+t"+7;@Oc\^r1"K7e\nXVE7F@Jq%Zj`O8_MK5mc\$EnWZM^qMlppgmTJ/D4'A%BDhkL?hj$ZBTK?^CT&r#;oYc3+W@EK'6W0gt*J+MENlLI!'FD)B]<Z;d&DVNqbs!n8%*ei<L*TAjP@LgRqSCFg/ppFpPkY)=8-kFTe0.Gc)ihZ\-KdNs[Mm@i?o4HLS-?6>;DK59/2[,_&"4hA5k$5fXJA'd\Ria2^O4)kf%[\<Skh(J;.pXW7tB/iHb<KnldQX9NA@ine[[M,eo.=@E(</`n42M1:-Z'VQ=S-=$F=J4>b"]R][Cc5)5/'iWt/PRleH-sqh\#%n;%k\?E(_"Z%iKs=os21t=-)]S9l10RSj4DlMU-=P-46EAqgbK&6RR-Dn*FD/(MY1UD4/+k=N#*C:g=<6emfF2@<>*DR0F`FAoa(1&C%Xui9#GK;7:g+4#C(.TUs1!.^?350._X4O?^2tPjC._NG,!\t7\"gQTDPd3R_:ph_-,CQ44*R#eSBcP.jUPS0QShVHoj4sR0YrZ]r%1f+Ae;;\W6kW/lJU(km,PC[=8GBqUj!o=QTb\tH,APsAV_h>#C)OP`m&5K4sBX>FL;@;1>PTe6\PGIZRP]eq["Lj1&gYRD#opYp7%XUAopDdcNYW7hYlB<U@tnu-$l5P204l?6ILHj*(f=WLf3kfNL*ENqbuWnj^ZH:gi1_bER`>+[50]BEl_!#r0f`YU>pEeW<I.Umq'%X46P">!d-M]&#\Ljtinkc;?@0QQUD4f-;&U=-R:s'leY;@5KuV\L1XLNMZ<0*no/c;&/j';_@.$GEpRO\_+2t_,I(NQSjY*HPefO%*ba#]Hg.^+r7iKQ>#2PnZsFD!C1j5Golgm,99g:qaGO+)-Q95.l-d5d$^,-[7f0A9$5l(XLXcLCQEQ?8F^J8%^]@VUh=err]AZh]%pE5O&E-,-lgI?m$PIGT=H!'W_iHN)*OeCs=.'299;a1_.3&YiXMHksSp7kLp^SRm$d4G,N0#6oO<:0*1'Y@KTM6E,Hn?tbB.>04W%HO)EMh)Y(R,.I>qSq`%n<[S]u0Z/oA5Yd1o0_P([VVWGqb84pYiL^K>;k1`N=IM)>a@!(X]e$js/)Pk_1h@=&958JjYS7=H6dq4]%*4J%QOf^#=Rt7PmF"1:``fp]##bj"V9#Jl9ZJJbfHPV^GpXGr=R_P$ATMBKiJi#_3Q?o&h8<0nP[%&^(.<&c`1.-%VREG@uo%GlG%Up)jPAhucnl_TfIlR^_p+%/$A78c,?nrq-0>acYe4f;ue6YqpldA5,N'6ehAFTgMj<kFD$%90)iMcHHg:YJ\S(1mHMP>p@#J2t&B%1kgX%G]$_j4o<&McKr.R+IP$D?UQDuZiAEn"An;5mLL_L2@tP?lf\Y[2\1bnU+?L+HO)7s4:,8;4f(o/+pIRS8'EE=\C&dM&U%f"%)/_V_K<0V7>Us!)\5A;2^JVtU?t\A=:-Cq7'p?Uk.G.4JEs!_WK8)/qXF\s=($:9:"51toRHLO%cV,5]?lESl-7)3e4Sk81:(5HO%eCOO]R1hf3dZJhI12Dig3=O$G[A.j\CiT'.b\Wtg'P<h:Cgh4*:0A%GWhJ;')=sl(fa[a^aS3;N"0Lbb2@Wp\CR"2HEh^,ZcI$=N%.$k-1a$8g%T5(WBUd9^#%)cE4oeTKIm7c;n*DNXWR%h;N?Fkcal)>HEjN(6!(VAC6V[TLrfSBnma!p')]p@X"G,Y'LJt]\pcaCrB%NG+RsHu\!&#1SYCCN`OJP8WJnc517TmcPj$]Ip6HgFVqS"!ZVW->%)cK%]kGdEM>cd/Y(foe7hr_Z26%L*g;EZ1M^,&qQn^8-Z\9%45%'onh=#:i*Z[;L6?eP[4lfPS,rZ"!R4b='%9\B84?%aGJ$SB`T>S,=Mcro`IML#_^[B%__6ln`q7rHMd8b<EO+St.t`t\%T1@5%I,434W$pt('/''OFp![,Vi<%r%AarUKUTPBFj.YIHnVfl4#Gcc?^#Bd\iGh:?X.HLQ>KkYbT.TUGrst#D9EQYkUb*d"1O[8:At$E%!G]cM;-a/s0XM$^Ljn"/VcrFE_`,h&E@gI`N@V;uX]AMmn>7cP`+e@TU$(`['QRDU33,2.E$;g$r>rm2i$$>bAa*qh:\1gMh8UJk%^]?OGB'+5,hO?^KDcGmdG,Il>C::Pj5rOEN2&D!jT83s9H35I:bI&01qDd6.2&WWaN*+>*@+3ZO@W*%@_l;Zl_ef3nph8"79]NCa%GT4DEg(r:N:uWmm[d#n48@^h/;if2"gg`=455Bl&/Z*_[dG;CSV]#ooV<5C*L(ia[G#>=OS70D3JL+sM^#A!$RZkul7Q-Pk!]T(K%aBH<$q2+ka;m:>sd1#@o[@O\c>:N=\kWW1Q0q>a+gW[56hfl#2m&hnsZ"]=R]9Y4$(S!BtlT00r,MF.o#h;<tc#DVt(Y.p_O)jnm%%i;82)F[SkYZC"&-rI..I3Kh5bpPgZX@6ck`Y>0"3Yl"l<+ee^ka:g3$8qu\\O;+\M@bi3$nm=)ocWYu3U#dlX^BK&A/M8a<'3RN%Vl\>s4][1/,H?;:"]D%JlACOAC_H3oagt_56g(6HDlZunGp<4&fa./='gWS02?;]Jq$Vq_M%WLeMk>%ZeY\fP<`X(CC)*DpAcime%J9\VZ[mQfk`jiN`%nu=K6m8m(iG*@gG!ruL/Es[gNl6Y:lHkOH0d!E?U1FNl3.U!dFi,d$NH_(B)aRG1H,*ENP>6\dok+`DaVqCF%+Xc9V@,rWj]hl:?&1&bl)CXDs6/nBr^s.^$Rgi&r':5s`c8m_Tk7I)X[`[O"BHu_4Q`3@%A*<HnaBh<X9HBWTB?)XL)/-`SF(<f2%K'RXP`bsT--?$S`_QGZh))oE/-r!X[5$A>['B!YM*p[%'V3$%c!R1Ag[G/!lUCmHPdm4[(8d^FON5"I3qU.eg67iQoi_2r.Io87!%(7D!uA/lB(c&P:f<n5Xs1a8]KV%c#"k.;ZIe"`QTSoD-MH#mWXjS)!<I[2R\%8$?::(?q?Kd8:X:rC4"lT84HiV=p*Z`Rr9GjLNh%.'I?O_Q6>$ECbu&9-gCgM`["D`L2a/?XjW07Z$+t"/1?Cis]50HZ&0q=i(V52LS[JPDf/tojaV,R#n#)e#nKd+IBB2:poTt"OL\u%:$!f2]smMN`,nI:`PFq#R[d?JQA?%&3aaX58s9tC(8MQ)g3Q^BG*nG.4Wuf1fKSAmFN06k[kpp.P#q"4:*@6]M4j\%Y4h`bU)81L%r"MkHB/Mt?O)t4Ab'bg:(kcOf:[D7K?7_grp#DGFE3n3Ui6:g@!W[+-S*YNP_H:N1#)3/C"VePbU*AIW,ER-,ZO0(7a/$+o[M\[g%#&q[M9-u##@EF4eXWkMG<3JYcUp%M6ef#[]_cY^4hKUZCl-T0/)SG53``[*>G-b&$AuG4e&'`0gm/\ih*4%U,1&+q1@e*hM[CATA%;F[B,o&IFo6WM)cLE+:1hF9jQE1o=@],JWt<+De2I)uPBVM7(:8@UWS]"9NRXk6FX'E-&`g:h+XSKn^YKbclYZSmdn;E-/E`N%&<%QC-s4M.Xl]cK=_\Y3b/71b`Zn/W/>i@kO`oSljdie$;-^,EW18G7I$ajM4b]]V9FeoW"SCi[*\!gd%i%EMa]<YIK2J)nqdIQPTD5%CZ,)$gdM"p78^C:,?jGQoV*+Ili-W8,gW,C41"Ed^G^o^nnPpKl'3Jql-PM.d^,d@%a9,qA'S:kmr-NP[Xi]D:\.oeBIb!g;mX^r%4ZdTF]Ijn1b:X2d=X28NoeQE:3&SYfajo%tSq,)/%B8]&.XDW3]\\)fR1ZY#o9N162!#]C!,oCQHt69]DYL,PaMF78a97"RKbbK^%;_(0Fb8$;u<U`[X1eK"orAr`^_=,P6@6mVcj*6RfYBnpW]b.@Bd**W]$l'`8$s>:5"!2uahO@HM_Uu3hAn[chV(B\q@Ed<+Hmo,K%HfYNLBN\6'A9O/r/.94UR90e1?^&no7&hOV=D"<4:!MIcA!prYB(=k\8b@k*0X9<GNGD3n.J$jF;-r$)`D(4B2H`mWXVhF&C!KQs%1NIg$9%DZ[\8G)o11Pfgr>4F#X&fg)WK6"kQ9N36mQuh1cNn._Q6?K3cgt`B^sc@DU92&WDu(q-XY7&+%LsGd'6b,^UpPT16L&I3%&KpDhDki(poL_&/=Z*"!IfR&U;seP9be!V(Q*u.2"Lu?J/$=&hL$Q3^hJ;.#?P*!2f)i\[Ml5>U?Tn;K%nC9qeBH3Es6nsrS\77;%rq)7QVec3Sj7:Kfr8O=b^\d?9q'CI^KSFVtp>+Qlq?E:2mObWGO1/kor,?h.HG/H655esZZch,!48cU:q-o?PIcmTmPM\%e^:l]k%TjkV`FKG?!nbJa*rF(-Jr=?A%?Q8_bU,%_IWrLQF4K#raS_jA8i$iC-G<VdWcfaDBkOS2WT#Y1[4HI8V#4oA$mQ]8M\,06NQ_u[I%rMs9Bm6%N6I/^,1mEL82\FId)TBc!RDjTW?IQ7>X4`l]sVo,@K5;=P8q54IVpjHS7[s-H]h4:`&:Y$%^"aT`k>AX8Nlf1OEgI(/q%h=8bdk^*27GI.VdB/3[e^%3-<LJI=/mc'.ggZ'C-%mQE@,O^"hQWMLNcYcO-6$1BC]A_INSXmO8"?2otk;1&=Hg'h!f/Ip:&(aLV%qEm6h:CQ(Xbg9_Ar<=FLrb>sk5<mem=nd-Q+_R,Ph2\NPlg*TcX6U"/aS`i#9kJ%)^VEW7$&?+\HoB<Rm]K@:J%.[kn\a&%_l*/G%Zhb,,c0FTR`RW5dm6_B.gDBqV@DCIhhSK'aih%<p^%ZMAO4N1b3KH[GmsVP9i]j`Vp\alT'`7Jd?Cfo"AG4l4NVF%5gj:a*5+6hZ%k2)lDpLrtXRX:+XhFDDM`K/C$F!$m^pZ+2Tl2<O8Stnl7mfTrlp92T`H2>#Mq>P=4kPE$gcGsVmSXuAoh`c8g4s[PVm63KBG("aa%G5#t@[HbMhm_dn=\#/u6j!d-9,/;h3H=&&<guO#Jo0B2D<cld9YHD71E-6X&rQ>_mP'^_T*tVZRBUIK-pZB,l'7+2$Dq/$;kVeqp%gfQW9/Zbf#n3anP-iLkYKb*=E^L"5+#B88/GlIVQIJX&9o8bg7pL'9J_i2Dp32?+##'YQK^MODI2;$d_/s78n(ORVTl+o1P:di_:%)&<,!K,raJ+-&!-fB:K2kNe>`0rOJ)q!NRI%h;,-g.C.Nn=<?14ID2%*1oH#XjGej1OjZ<_qH2p*-s<(I5#^*_)(pajNt`rc&;2R%PP)oko(M\8(E\_m\i?Ra*ZU[I+KV>lrE\4UYM8j@6YF[DHaj,pe_fP2otL%1#CGYu(nUJJg!Cf@cWa\G?X8/!m,LIlG7R^^DJi5\%ej#`H@mI5+H]J]NcU@K@1Oo_BJ3FeSnDG1t"U=J1SA+1<lh,`lfGFG_m/6d(;P;<bK5J;.Zf:`+.35%PT&$":pi%NoIc-bmmJQ<k%IJaKHpcL@<=\h5ZOpB<LIc*/(_d5NSa%fCt0(+0KqdJ9diK8=J[ti//@?/q;+*eJ0S`]'5mp=EA"dOIkK&@E@LIXS)p:F,T3<.1l%b6Q@M"PN24okOjtWW2C]3=h_1l.s85IpDaHND//74krfHq@+eB?p4;\p!q%!KeQU-ND,MqbHm,eh[JeTrkn9^c-=r3jo5)301.q[%++rcKI8#B@c]"K[O"M=4iA:=,]H<3V0^jq3pS5KRbWXTUrKn)d.[Sq/R1Ag,N:2028fq>"ben)cTa7L8FI6.ta^[BU]:%`4/Vsu_%*Tf6S_gA!co+B*<O"MI8iA:=,jNqBtbU[ktI7]36s![+cYAp`%GFnQVV8GEC7NVu`HVB3?Q0nO>VSg%NOhL2li1ir#H2*=^'F+'(%i]eM[2U?1*iTm)=he3Nb?XJ;t`X7/[/Gq@<b8tldm3Q]K,B(HR)o-CAq1jH<j79Np%rc.llX&J_Sql8L903#rmk/pr/*mAK\`fg&%N:s[Ib'E&_^Wb7!,?OaZ\_;\FooZ:<Ej^s]WuYMRh>G/@C?t2d?c%kOQlPKj:OD/9s/6q)+'M85BK=eANqUQArm<^ZdJ;=`"F8Rb%s4B!6Hgp+R8C[FPM!$oBRthuQnrJ07*^'8=A+L4[Cg?fBhn&J!F8A/Y](I!1&UVj]](HstH$o#1Gj!:hqqA0u0$Y^XZ@@#ji*-s\%7a_'M2:@Q62LX1k9BX'3fuJl7eG)(GqF=1oHs[c.l,2W9l#.`l5+ZuK][#J\c^EB"hu8-NEP4PaXnN'L.'2dXm^MtiR+[7=CWH8$%e`i82?qW]^melk@5Q?!P79;.&:X3ibIQHl1L?eC$F\oPFqqV>V0\;BQ1qhJ95*Ws,"@E$:cI+?PPn,Y`pZk8q#Cp!-X^gt$1]56t%mcK;be#U6b5"8kf]"3-+F`[8LgBHINIeT0Nc5rQ"H4I,4IK/@/B5Z@dmDn(s=8DM!dBhH9H">s'pNLAMB@!4-h%5QPhV9/Z5+GL*%Hg[G#n\NS[S%J"La!^3)gV1pfrdXXuHQe[1$Q-Q1^cR((K!ZuNcp[,#:_BoJU^W./Un%/!pFQ'bn+Rap]\#q6I@-/up9ksd522&j%-<XJS4]tp'LNf`Hk(lucR`;WnXWMpH5Dssg#M0'mfF"6$hY@%9PfB"DNISP<R>l&RWVpb-'[jQWme44s(TF*kYat_1-O0V[80F-"%ZfW30Hh]OFN4@H?f,37#(Zo*&rS3>`V*n__IuT0bDLks50E1ZJr[/-K[H[E[9L"X_c=bea!=PBHCO9c40E!AIBl,K)*ep[;)nr#Z%oJ:[npnL/?C`?a_%CB09G*M8QA1l`u2""+GqqMncR,)s!%bN,O42++-rsXI/57rgtCZRtJc`jj^-XtJ$3>(gTYDC/;($.j#T.gkh%&`GCH4FcGNiEg_3DKN"T3c!Q^et'Q_;L`]BM*I+UXul/Rc<>F@=f:EJlVG-mB!"+DJEm%rETgtoJ(c0t:Kl-6GT69.(E21=/Ue]?%hhVhmC=UjWd8an0l_:HO'E$X[Ws`crHu5oY<S?t6g25`QG%pusQ&?l`EcHDtUi14MN'?4D%C,^fi30=:0oFmhN&n#s=($F%JntC;%Mb8G_ir-"THCr,Iht2ee^lQ%d,Co/TIJ$5sIS1gK2p^adpF#BXOs'OCf44a&6[Xe*gt1FYZ#,eUFm/o#)rOU[&)sM0L$s7+JILON%R!_8"HP*R\:99,>h>#fNl'iUG5>lCVFLZ=a48oR1P-;1:dmb"#NP@hGPB(.$jIj%jfo&t4hYFgb\7U@ojVpdT+%KnYLm)fW2s@?Q%VR''o1\/:)c8)#7_ur(^0_<%;D@@j4N(O^iLYdMm4Cl8BL9DX*=i:C?%TYI%>[PFP?H5EdPsHe\d_4KR=Hfq?P/W6"I9+f,!1u+C%pFcR?h^W/8mf(2ulIa.7n4VF3mTYYV-\H9/o2r3K0[CJPHm_3Ak5)t[YQZSFUkP+4A#/i*lTF<!]a"IEYsu@]ST_,3TY)dFHJoOC%\9cs3p<6^"?L)]H<TI7:1\l`#3;JLtY=>QMld'kdX,GVpCSl@<\'GL^Q7+(.NdZXoJ3-9o>JEC(&po(%m_spW-FEd>o4djrD#B8U%-X^I\)e3)A3T'fLdO27He[E%=:O/gOp*mQ0:,5*I:6GWB#q,M;!2%*B$1IpVkkeX\6?`ZOY1"ED\:G:V6EW&ffiU__)kZ142$Vlc%j'2?J^UJIWqV^kK;d.d3`*]-ZIDZ6,oK(G#D'JpCkrRag)#IWH?216!_YX*Te8Tj7ddQbFYpZikId%4Zd9g1%/u!6tP7"^#^[+1^%6bgq_a$ORQhFb3Y^j7MV]p3Ck<G<u:??N@B<q:HsZg4aSDmYc<2j,-4OcT09np2h^2bnG-Q+YsGrZ%aE2j5[7@8"G?[u].qa6W-Q%<CX^:G)U+JID"E#re4#82qR@)s283%moj5PAoQ:,M-8@j?[$6O5pP.7T'+u-rO*?Ib$%jPr`!07ZY%d4;-.p6JZW6gI2-V(%_Acp%DX3tM04$M`'5JV6>=[P!MiGjVTZA)@nK_G\*&gCgl\eDX#OUs&0_%YWf]/ic1"T//a,RnC[YS(AjOPKbA_)RS%fUK3n;FE!SDoOc%0/fQW'5RNpmE_XFV.c*^95OWBnX`u%\\f_lY!;5/9TF<j8qP1SNCY,*WfgIWdWXDTrl%[[Rs&G4s,4X4b4[CJ(I,`iZ>b&<5l>RA%K)-f;W!,f>rWb&8>/tL2ELV++Af\?`a)0CIS*q9)&Y_+0gdVS/T^^2eDR5AXXQ)4r/oL7uqY@$03r01LW2ecqID[J_:VJpNLSb#'%i7G/"'gEr;GC=t\Vd+93`UD-gT?%h`56Lp0OS/Pi?h:qfQWKadhPTtReRu'I/N:7A>@hU+\^m>;];HF9a;<I!las(/RdOG%:]'GR%e#o_H/uiu@kL=O^s!hd8p3Nn1S$E.3-Omf(DsD]*2cZD,VVR:N^>F`piRIUa7%J=m2/W!2L0]3,R=?)qQ,Sl7[s]%14os;P9Xqs,%",&@ArJc=!62fC'G6tK*d(uf5%bCCc)a!6*=$GTi;0CT`[Oh,#Q1nV#f!TDA`WT<1r:V#:I\#?qh(um]Xm`m_%cblKSMn,EI_%^l%\itSSi#-ukX5gga55hIY21O%_9d5CAce*>qDu:-\[cuZe&,Z-j$T264-N3#CUq\0k<1Al:ZQ9[sheD\"I2_P.Ce34J._\KMf1s85%*Gj8ci.MCq/lfQ)eu,2VPT_sbrD>!_F8E5t[W)jaB`6[u'VOr.KHEATN/40uR90Uk'f5[O'5!CkWn2uX_JmlupOB_VVE<`TZYAHR%X5h7NIUFS]ih4-aU>R[?48g`I"b2\Xn4bRf`Fbf%^4:$LL4mL;#enT!ItlDJ8QT1+4.Q[:c2:tX5=[O-7LY>p0RW1jNGRM.oGqj-%qU%8$W%Y3-s7pCS*&sAcD.fSjla<BmnkAH&8.thME]-/qi4gAn7l*'#o!KM&!+feGrkY2L5G)VAP_\(;K)L!g@JJ<\'Po7e[Ee^L%#nH:^^ia\U1)!e<#Ca(;I"ULq+-d\Q:9=K!lH\kY/)(RJJ!Vr9G-V4bb%gkF<8qi#(;C?0p#2T5KuAHj;c>aEn_ZOhJUN>nIDY#;%(hW(I*a_[5Y>9DE:O)dIds]HJD2GRe`r=/Ro_:UbGO\]3M9`n<=d@kXb4u5LZM)SXS9IHNldUr5OP2uUfJEB`7oF0IjD1AYq6.dq%m+j_n_r;U$3j,`XQ1BW7[dWA2I+,SpoV]Vbn0bN%CO?3ppq*g23j/![Fec^oWiY5!laXs$NGB(i0Wnho:>[;!nP_'ApaOfpr5W7b%dT'InMt=qQ4/al6?7CV_L$s#b2Y"[<f#DkufCs%G`S*NI?>[c(5LhJohb^7XOEEVCkOHiAnM]!C'WrIjjlWpnpqGlQedgT(FSN(G%K:hAsrS1:CfOp2YVoOQU]sYnipA!2[hqI*pH[KUiDZq2S4+0L0p&(I7H%,65#(BK8)\1#`$ZtQ=JH%[J]lXM%#EH,&l6FM;WrCgm%%XS[]U%e$UD7su8Ard%%3G&c<H0uf,;3m1q;'us7KSaY-$pMJ=^M$O8!IQ/f;2StUV":GahF$1O5<"(E?]MsX2t5@icEQoiH2gDp%gYghUMM%XTd4cMZ#%15;N1lej#P_!3@Pl1fA&1]h#31sgA2$V1PVX;<YV^$"EWjaY&`'Vln2lB$jnBJHaLqi>mcVD73B@Xo*DkNj%`D5j4-brLrh0gWQ<@3oa"edE`WH;+d>mIE0G?jG-,#SbM!kJf=S/Vtg?m-lG1$YDY&<4:s3('+mYbu6(+#Lb7'kc>\cPQ"12;]Fe%:3/O_4$q<4S0"m*k#t&7r5(*R4&PuK\MjUTc]Qr`D#3k0aZ20;g#U\/g))YQ\?YXQg]iFKrliJKbVjd\mL+Mn6"jC'ZO](FK9mYB%A0,E9HD&-nBGqN?!2r%&J185o1L=\oBPQWjdoTpY"-1rHXD!q@%]2K^4$0bTl@S>Q@H[rR+jJmpM!YJh1/s>BCYPWPb[)KGA.3r!%*]id'`S,m%$kf!p:e+P>;$?;0W&rt7M"jlUL$6l'/kXrg?U=9bB`%m-GMj4a(/3]_eu0gW=.#*$)<?&E0Th5;<m4\N$j*ttkE,`4%ruFhMDkrQtIj,$nT0`JbIsr3,H8L8I'R:>h!i2.REWC5d>A+1H#W]jg%+H_JKOW:5MIb?VqS7boi2Nrl5cFa`F%Z;KCju)o<JUj^%p[A,=0LH<^s$-Pa:^EY""c]IO+[ZX1S8j$>"bEiYLCr,7pOP`tJOEG/#nf\jJ4+i97'$kdd8,HEU:4s_kCEd/W")AWn?O1=;S(+'%&iG$!r!ZPH7jnD)i>1fknIN/a@]b0TFFYQ")^nkp.-e-i$L7[\cN?$8)S#uX=96D)!#=)(<00CqD.1UGGJs8(J=EV/g@pFKF>=^4%3C(=Z(C+W"P\5+C1aR1u>Hl&Npb[YomFe-am94hAYDqtcaYtUR^+c"BcieXG=5?Fa\3@.7q&ZQb7dJl"&"1G5gJYaL*kl^jmo/F9%msH\!kZ:8\^sn.g$J-0t&#TjYo$%:GJ8QkIB\ou/h#pbQN!Qc2T8o'k!IRi(A(!1SNPKJJ?OHbF8RqYJYglJ&_++m'%];fO\ems<%^cE,=B;jT&:Nc.-CnLF&42jL>8M:WD2V,eTK9@a43T9OYE.da?g>tW$+JT[k/#;As/Bfk+6sbh4O>JQ0.sNW!#ZST_.YLEh)PGO^%-\<CU[t-.O&-%%=)K"DXP/_/9DmWBj@&#db9Z8e@BZg_K"m!T(77Mg'!)ICdWAQHM!5u7lmF</[D_I/\oIU2;rYB_hTaKBOR%K0l%/2698e)LZ"'eOh>FXAashO;QE-,4?->)lGY0<R0b+J8tVabkA;#*^H%.jS?,gE6)6anEma&D\aJ%:Rlj_J#0o60T#=&0qk<O6G7)%jk0cu=Xs^bja^&n#&8]qWs-*JK@&Uj/`m#M;P%0P-jpV%V3iZ^";4("">XM=,oc">#t^=70Ll7KJrW])IZZ@NLd]j</?U!4%9)4&%Mo)-'(jQ:i#SDoe%6-+:8&>PF$lb3<n0(5`&XHR([;1&sR(S>Zfo3\(*&11/ka/cq@quPEMiCtVXY\Nt0##\nXG+Al7'X[66s1D<%R%]\N)nqV7CU8-U&rKpeW*_'Kepb*Zn,?n7n[1bh9/Mg.ee64_YS`5f@72FX@:4a3(1kSn_ZpsPX:SJjh%j?:?>IGo/Z+gF;c^Nc%T=p$(L=^J<(PgVnVW%Abd9>c5:8,jYoh>m=]e+,9]s7clCt32Y`l?rFGU+2;J3>Eba4b'0S#gDi\U*KXq:`,gGo48GFBa(72TYe/%1&!K7G:hF5Qg6k=i`R:RM++0B)hDB$ku]JLKeYBLM6PqU&,7eBVSdkd6SKiYMWV3T4@MtQ94N6&*.nc0S\()"pLC'7.lJ][,Wi$$%7]SUqnLE4q4<DA_+5jaoV>RkD9tG0o#8To,D&2%?bc'&2[bh$P(QcaZ/DYcE9r<>V0NERk*VP6JmQ]-*([?Cr\_CG2h8uVIpm_<6%CS4^u7=G"7[dsRcJs=Ua7&r:^n\"Zu!ADB^)LtNu4etc:"+tmG6R;fm(u/tg)Ze6US.ATZT/Q[HJ09?t*@SX.g[Ju]D^Oerqopki%Xeb1L[S%F4Zesn<YMAXIgu,*h#QE&Q%"@L-lQ"8rcK]2?%8CUo2%:Mqm0o7:i\i/`TYU>8Yt]^F)mgsPQI35EbIGn3Lmtbt@mS0)%b;j<Zd2,2)b_URX#cn3ZLl`%$G%:F[^C#m+nC?]4D;X[h&4',YOqlaL_2YAHmp:e0J#qc)InXtAKBCJQ^]3UVB%'9*cn5fT/JVpJ%h:Bt4l;=R2IaFAor@Mpq-j+O(3ouI5/N7\-o\<NXdD,]#2dX!a03YKIIiPIA*T`SM%"T.0$sLMp3/m#\)ZkK9N+3l=pJe:NcH:,"%_MRa$J=je16&X-!M@Q[qPi"WAbQd(=^bLbG-DT3c<PEMXfoLW:M%Hq26oc5YLD_SCI[-.(c2QN9LfhLM^I<&BQC%tsdbm>&>mM:$%\Quf4TR?DHXPmR@&De`Y<.mbVR#FJ]Z7l^eJRI.Z6=,=RUFa>Ba\\WJquD,qLsT^rN7#qO,TUr<P$qsOd7B^5D;b:h0cm8I"fE8k%SY9">+r2IIP/o?LIt_bh3WcmhU7b_ZeTMm?!G5i?>:-FSi@kB1K.aS8Xf>UpeQ"@ok]Y.2%#KLnO^pGK>)!m0!<SbLk75'l=HL+J%d$!<7ka0Zi91Qim"EkS-@k8Qtoc"@h,b-t9,=jX)M?YK(`I8[1/d+D&A7B#_&W3Gbcpa?.';j:XU)P3u`P_]u]KEpIIOU(Y)PNK5%q?=PF.c;Fm=]RZsO5+CO_EHL$M:N)3]V8J^MJ2'<P`>4CPS#!t&JQF=!P&3&";;Ft/5/;S`#u:cfI\4N%AuT3^dKYc.1-[glrPGe%MT7L008%h,8qLq*@?D.92G3N2U(RC!0p6!k(66d]5XY_<jtk@)J2/#X\jJ`;iC^B78jstH'ELc-/jNQC":7%-XYN14&R,LX"@ORD%s$0=Xp-q;@1*Tdg_CQ^;PS7RP%/<^PEJ3G>VTeW6h^K+bif$H,l4tQVbn(-n(3U=f.>Chn=EM=d/6Nf"cH\_t6JdJXCI3M=1kMY1%X;_c!'kY6\JWiPZ5T#0]"pSIgDSnTe6T?MeA5ba?'KV&iOC94/3^PS=%R^5H#iP0P;ntuQ&C+rgkV!-(7VTg.?u:%i;@Se`:aKUZ%FX$D1$ZNDEh_:LJ=9LG"OouN]UO3amJ:F&#;'I%fB8[U,A0@?0=C<8i5>X<?O@43=/<+aB%#AYMeHI`[$Y>^uLI@EC3s9)9Y](.A%7UeqS8>o%5+W0#VAMGQi;2/F5OX26HcmQ^T9@@5'Qk8.#BEiH5!>*%"1s@rAfn\_=&qupE.-Lt43@=Ge&jS^d][.rJc@Kl-,Q*-\%OTi90a[d]rGq_ZI7#?/IbmEDI)%6%o!mhi_$Y)aSnZj0o$tu53Bd=V!%Rl71P6Ks+68PJE7!HH-+;bhN8Xc',_,'QQUcW(Bd%cDJ%`;,1&+FBi=Q<>?qiJ/83RClE-a3\c:4cCM;_N:XjQ!p=H#3lfj\B'jBc-U,e(b"8Q'1KdN0VRF1OclAfb:';!>,aK4]RYkQY'<q4%'i5%*HjYZKM$="m1Wp.;()[^k,Ue@hU3KP]pDJ[X+tdLsd\N6Y7A;4E/<Ig^cr_"@J06<?*3,e[=?]t"g/<f>JpIJ@J70$+M3=6<%87'@m^qbR%ZI)2gJiJqUR=Q*M+6E_=KH8li.J1bL<[X#EMc+#^0pY,\%,*G7pIHieJ-IhrUM5OQN>D3"TTbV/%4O2,I"F<Qomk8>%p'?1r@UV_Zlm.IA]<L9kT*Z3#Wn.SU.P_nf,:<o<+d2)+N!<=TPIGaFJpeiC?%GQJ?c`S5_3soY'X8M[`]M!U@UY_?C]MNj`3[6;%kLWjeO;)tthutpo-c.3ij>"tPRAPUWH?0&bmq(8S5+8h0*W5e!i&,R^_(?5cI.:k3"ZSB-N'm=[TgqFo2tO';*;o0?E'/<i_@&,l%"W2T,2N_?VeW$l:/mqc:QN?a,S-.^CJ=dgmJ(LDrh3VODT'E79DP0<+aq"22pPRfKSKgR5paYP#'ZXLd;d4^ep!n<K$DjJmZ.Lb6%W$<Rl/<G6e=^^@,Ndt"t)M`uh(od*mOL:06-qJEBqMtWeNO/^/3L\mF9pjjM))1uM\>H(:JqXHs#R1VQ7MOK+!!&E\$nuQ2@5;6q%:bQ8[OuIT!&LQlM^=NYM/njN?,Y87M)IuJp'I7oK7[PTU$-4?S(ZNkMV.t`LTqE$0$@i=d6Pfq^+,LUQ@;0iD]-IqVTX5eoDCHk2%OQQaqMB'e`SO>u(#SMX&1$*78!lu/6!KmA]'F@.-F;&W*.-,7Ie!EKd!>gGeg5<]F'>W%F&GhCU3Y0mR&Q,9!cr6if1F<apSP51g%5W8,.^B0N/@AN%Z9Vr*CJgX,42UQkK-H8,O;4sN1MI(s0qa&a("S.Qq;,ab^a$fa3^k!eVPlqM#[Drsp`4c"Sd76T*8JnThpaL5g%^=@!ULU5*5#)/V`H))8^#d]>*,-b6D#UDeEA;<Wg6.[lTAcZ/V8sU`Z9RUH@Z;HJP$/UlD_bhJso7im5W>Y\i(s+6?BHLC>%%78M%;ElkU-pCT1N1_T$gFk#476uj?Q/G":Q8HNSPW/BVQ"0kB+;Z@+r\6+R,GIIunMUAhfRPFc8Hd]7:]a$^^H<FW)(BAK7`XlNY$($b%VV5.H\1KNRTgOeUWWka;X$OO=rh$`a&=U`BHm@[fKR)X5XVon^c8DI.=:ddr*S!JQ(G#U%bI(%+*uYn"6"Li,nfY]]M\Yl&:dRRQ%je,[C`*N+R%jps6)WOE+TN$_H;$=7[hbPdqMF`h&<53i[ljSUNU\ZQ7`5&,XS5gRi"GPLVs1.`9G#:Cf&n>g033(d+$r+TbI`g4l%>5fg&@9,e:?,rC`(Y2*m+ahI5rFAB9bpLnJs&ZK%GEQG*5HlL?S)TY&YG9#1U]L5bT[!WjL.dQAS1ajn?O2mg^nm7?T3k\>Ikhs:%HJR.rQc0A##79<4MC0F'jslY$[Tm:PK(Wd%.md-")GJ@i?=G@!b@sOJX?Uc,1tm\XXX<^"c@l2roZ9Ku!7km?IppHac^p);1s'DL%c/BAh4!h$c4WelT:ut6k=j=_Q"dD67H@4sQ<6P0f[6N#8T++,ZRl9!9(g7]8fTL2i[Y<oI%Ws3=qt5&oMO(8In$"Ok%9oZ;X3lPp%eHA%eUH>IB&NkGjPZ,"i5-@1=$'$L6+t?8TV.u&GQqPdG2TBTH$_GIa;U2Q2Xg13-0ube:B2_,'TdVZf3lMsuhZpsm*R:P-Qgo#Q%_X-r,b_Z^=cu!t^lntXgU4f%?J\'oa.+mu;2gKOH)A@W?+jn).iP:@-\\9De!+S'-$mqah(mY1-+EZA`8bX;u+/jKLT1qg`:?Ht/%U00sWAQ&b%/?pS)*i["^H-B!mnK4:-`r.c;k1e^+UY5$WVgiJ:!SU/N2.0_97a=nAn1ndlE6e#n,VGhS^@Lam`!JO&_nWau!$8f%%->r&?=6RK[6N_5M"#Y5DYlbLS%MD'=?.AW@;.8&AM-XA+is?P74OrVlY]thEfFqH8P&2sh[+cM)C@o(Nbuak`jB]!,7&71[h4OtM%PL4>!EE`4[R@[-.&jab57*IZ+N51)oh>XLR..A^K<MmfVD5`#gA2-Fi0!k1*T1^s]Nm_F?_4TtaP8#'`)iYQsc8p6?!$6>mU,8qg%'Or"nKRpb:'HO$`n27+O"VH^+*5[B*&S6M\ZJ[kP?u``_NPQ]r8QA*6OsUKJ7j<UeY<)eaK?imlJ:_,.JgTVuN'qt5rkXRa0Oh+h%8BhN-$MCt4c8c(#Dr.nSEe9>F$f+9_VGf>nUGWS[_6p.jrL+2*>q/N+XB7]<jrk3fAduh*c4]jVf@(ss$8h)aFJ+(d)ib?!AWS(1%GV#E>0(t#"[L+s^od4^)@JEe_n#TqEm;Zg_a!/'KA8<UsftX%-e4&VCeEb@UL#V&.MBIG0Ch(BkU99;dcb6%fi#C5*B8q.5NWhD;%`utFoGs^`46p[1m-QLiSW-*HM$DA<fA/7U!m@Z>7U1_Bp0OY&W)ee?4.57]?D;=NN2TG2!l_YEb"g]LIZHG)E(er1=^)meF6]@<B%BA=>UTVsRcUa/hoS)1QiBdLu0OQ7R&gPVP^!>"-Ij]T`P[<[;7"$q.(lj1MKeQERL]u"_BX[$H*h>=`2jK-s'O>JhK3?oq=$X*^q%-nPKVE/IKa!<]Fs3pS^0NG]8Z_?rP)??=Al0))::!2i1l351E.I?\Kh7mTq^K=8W:Zh:KP3"%NC4im(5o`9!,S&7HI@blEJOo)tV%1>o5O\Xdq*O=7of5[sXO*5B\XDsoh8akD)?_*n!'PSabZ/i98,n=6rqAMK4?>10N-:iXr^j)7[,GbjRR,O&l8+r&#S^T=7D1G+2b%eKk`ID5)JPYTe$5$J!_%o2NK*SYiBF!,idmMiV!UoAC+5LJmg#jEJh-!!JqJ$;e6fl8LD&7>9d%I36@`N>S`=VNknH+`-K"l=F7:%g>G,)QglJV0oa#V4<A[!]ZTfLf56r)&&l]ooZGRS"cPtP.IMNaK+7h<4\XsQ*_Z=*!$%m1G2_^+[D<!WSLuj-TU34RRjqN]5K?]?%N#V_Fs6gY@LXMc;[Wf4^>Y_L[*:hG140sLEdquc"TUe\*S/]Pc(Hu+?J/WN9:4^58iVmi*pn"<Z!%K?<1X>g:E!@ABs8Cgs5SO(U%Ci_ifZk6'kkJ;-2#M5>'H^lp+)d"\lObY`8B5QQarT!8<@<*r5YC1NtB&4Aa^tS>&!_3A)_?l0Om.(7c!&)1a1#"],jL@eUA`/>2%1qTE3C)kSrCH)=&bll=1e,XQ)JDMWgBAn4*J.J<Np.PT3Lpt*+eCM,k;K0AW;<Hp?ETstoD%,-XZ+9c?UX"WHA@:,8:Ba.DYRTI$%'qX"U`q.N,"ZmXUKMKF:;M56:j)'[Tj<X!oan"OCPh:eAWZ$/ZBpOH.0e:>`MF#0)#"Vu/:cQ&h,XmKPmSlU0r@-@dcM@mArhp*O%_.bpY7qN>h-"NsV$"1pN.,VN?:P_B8"uIRg)C+Vn^;;CqckW`V1.kQ@$Bt%_9+[B(843QQd%baaCD?7D2ogI`B[Oa:7u`':A5UX*%mh0ssHunVaW%lN2AW:/W\B8%X\BPkHSd:]WHbhTF3p]R2]K_IrB(.[Or;`2[d6"*]OS`:$J.:!6O72$Xr!=b8%5Oqr98uF$?l*"M%_4K^f=gacW:(7knR("'YIT)IRc.b,khO1P"f7Il>*$Q3BWnFGMfc3cEL/!1sW94jlB?Hkj>2#jXfkAq]C5>OsN-:1PZTIP57cmG@%2Id23kd>=$`k`Fre#"f+DZVD).7rE/YL*u71K6cOosc"^NZkG]/-#YZ4$^rG[oK(TX)9F5lK<fuF/&dRH]:nl'sl^<`itG/qX6^f%!-eA13!d45Z]Mhk3:DAdS&.fmbQEBo.:?nh;AD\`$pfY<>1YS@M4+`OX2REqF+\Xa;],]qJ?fJu+i$k\$%^KKC)T]D[iJ\k.+PGh%<acut]FRBGC8`j*92K-**ErZ#e?,2UnP]$"B+n%I6;@6b1RJC$^!X>G*14#.BG,.'0`][G5\<?DB`OTjKbXP*"ijf/U`X@Q/RNIM%(MG2;0%E.M8NYdI2XYS?*`(9*YH*1M1XSjcR(2+WISeg(C\@^V2\C[__r:6Q)k.riBI[?,R*Z"M,:J%-VT/63$<3%k+Gkh%UK5M>%E\JjR3,Dm]rf4S'+Z-u/73(N!TQF+koX%5f)/3gXY/`XO@3]mn!)*5VFZD-uTqLCt#+(T=)8B;>*73gY`L_g5.s1`kfU$/2'E,m/%)YM<:?+s$K0JPpDBJWY)lkugYM0M=M8XlUD,o`nQYp`NC5isA[C.WO%9P."=<dNLX5]ZNs]>f.KRU,,KQo5h$0+I`YJ>"Lt2Vu6^%9oj+aSKlTC.$V3ENA`^rGgj7+e08$SXpO0`Ab6VXc<f,@h?4:BUR$arJJq3UVN)S%B;,WHJ'S4=@*ZX%]UfR9=<[dRD@?a/TbQ10%Snhm`Lk/Zpl-tn;2Q"8#/Y!V-Be&+in/PHSSa^6Z8:ZRr";-+P>'Qi>9.4$K4l6@KJNfp;]pXu-/A\8V>&<Dec`l(cY!aboUF;2c%eAtl375kWC(q$A8b1sk%f3]BU.fk`_$@"9KCtYZMoupW7hRb#"\Sn4V@C%ZnUYQmmDi?WVGRb$e;i,E@k%4`+N*\?Zd$U7-Ne^>R%4@)77MC%AN_W2\u3jOOS=F+q0#Of@J'S&6n;X;`gh$K9J'ek@t?*Wj?21'EZATAd/'mpi^38_IEm9M)`&rdk10thuVaJ?hprbMFC%i&WL#r19Hq[h5-HZ'U5kFu,`$/FK-b&)sF@S^Z)5eqt14e7mE,L;TJ`1!.,j?Mq`B.e+5.:$qaHPLSZH$9?n@7*.;%)]_^108C@?%e6\NCB"Q1`<\>6EH'oVOe@l+H7</QU4E=Mnk2%.8iOaV)h&hq0l(dP9e[NkBc3h,Oeog,W[r^qUk;pP$;n'*88?<K8]"!5\f<W4C%j$AstifC(PpVLDi4pgq23PToAn.aUtLDqD;n6A2MjZ8ISO\@FY]8:_eYLDiRjGm35j*<`<,"j#W]n;kk^)m@G,l@6)1^'GZ5B99]%,?H3'IG7@q".KB6L7:YZk&AAt4MFk1`E[YnYMje:0C>XGI@2nkZS.U"\L_:%g$\jin`FV]eS;b7:L.>A;gROq-AbPD1@B$Ca1G-f%m7biSYS.lN*bOY7Fo)9XmnG*g?YP:b9jBiYdY$+Ghj6H"KHgAMA2b,-9fdBBgc?X-mr;7jZ'@DB>QM3#G.>UN9sis:Co@BcQTRug%!e)cNMj4,:$uS`+<;(!Do/c?$0b^cD8,)B4IO%"&o'K_jn)IAgo+?,W5B)5]mBaEoE(TKNC\D3;n[+p6pTagN1p>UZJpc?9c%R'_%gBEr4D@B$DiI`N-$Yn[?'?uN30`(.j0C0";p9+!7I.OF(s3,[Vh,6anFDhHBrdN^"jUPU[69j)D]gVbblj9ei">K'.4MqH"J4>r:%$%PM`!7I(4^d_QGIE/iQ\N3'"Ngh#AffSo0Q*06*I(<#9j<NPqltg7ck2jS=@BR>:Y._9@l1.m@1gQkiYkmV*j6\1<VgXoHGs7Te%.,q4,7A`lLEbEd+E-s&df^1BEWTMq@T:jqnf=/M_\E6iup?Zb]l_Nu!'>?IZUrMHHbAdCOq>dWoPj+32Y^!d/?Y1.%d\9W&E@'I1%4Ride]5kCp^?!L:aS!U_EQlA;O!<!5qq5VO_c3?gh+6.XVmCYJC0"5`GB)S[`\.$l%EPf8?oP4,e#X2B$D-XI2uC`umda(]D`>^r%a*rUj-PI+84?=`uP`"`%0o;iG0CW4sS9bgl*PFl[4R_kL)QeJ\:X\E%RF=L2EuZLIP@hFgD>.t2nC1Tn@]%0mYN<LOBdn=o3NR'E%2)%#F!"/-V=+#45@&SuH-t-e`'>GU66`Y(U!h]D>ib5))Mtn"E1CZed8!@@/gRWFh-nPPqA]hW1F=>Hb_8Wn\J<MKi87&4.jRM'2%39\NfOCL+ll7VH>VtG3t?%"o^Kt9iOJa]8<F3(4oVo+kN<UH_^a@@n$*:>s3OaiJ>1!9BKB2i</NSf7DT>gB'pQ'02!5p"n"tu@Q%mrqAh4=5:#Q/61Ug$YSS#fPUq3)Y%X%Alp=Wrn,]+i;4]oi*NKI@`$=e4>kIf\OhqdQ:5S*De1!l<`'mRKeka!tMOLe'pJp<ZaMT%=(rSlgUf_-(5I0bXd'#k]XS0)IC&%i:U2g'R]cKcK5A#Dd=tS@_'ZSFaiRtaYa9"8kUE%FbO0n!?9:ll1VI9B#hS?Jk0HTCHTDM3%Y*u%Tq=(`m.%*aA>VggoqE<L6ph??@]Hj*5D:_g>Cd)-:ci_G&oopb\g!Uq'QJe<^ons.K.r8OhdsHWIP`/c;P^a9-84lU><;g^!%K+B^L-BP9#"(]a\fKmpDL4c>Q!+[3_(Q'$l]?NuEcd2as#Qb>+Q\)Qdo+46u^aLDr$1ofR/Q$*Sj$K3=!X=+bi7Bg(>tpp#Al,Hu%'m8GRRf]3I86<GK:)Dl6%lJo6&)^\&Uf$h2bbc!95U/YS&baRVd<"I1D0F,*-%1Q7;.gL2=$MOrP)tble!-.[,6>Q?d#ZoFN4]\Y%4[T4mm=`#`JVV^=\kOAJo#R!V0<[2sP_pq*mm7.XcqqS-kX>W`1kU4%P4Gg=Unek=Tb=I`:W[rVe!Pg-ID$@,pr1MsaG>sUTKkLJ%.mS2F*hMP]Pl.6ahJ/.KPV<`N<9.rEr++6@.%VML`Z=mc&Vu/ljfSTu5Uo\'bJ"HJb9QIKJnlHg>iLTBlo$(?XGhp_0GfSEi7f+j%1=15JJOP59KH3#P)HdtD]C:VK,ZO>BY)"Tl)JgY.,V2t9DY+IVKS6e@NiZ+#'rc*S*;hFl+[1_`6ocTR@_A!^H-%1C-kNYJ+[J0E%H6aA:YC[df5Mp.jm"hJCkt:.#"Bb=E,E9E4f<.jQKbR+m(Z!%k+D8^3.La5JKc<j/Tg#UGV@l;Mji_#e*/^%M?qXqQ.?$$aPH&GS%]JA>e"SRmPp5?cPP;1uKSn-Io@!R+f%@u0CiiZ6Oe*gM]a:2'DaG9]"kjXsqj9,BV3-TE4&QXsUWH7=HTR*$/:656s?Rb&5Gj""!%YE4XP8"rd\n]JR!5JYZpm3@%Nc'0O'[]`"*Ym(&RBEYC!Wj).?M:Q5a*I0WIjGq9mc[&lmRD[(?oZ?dFSH.9<qn4sLkJi,0?",Tt%?2!h"6-46WR_*IINZ7=7'"NDN:3)n`$'>(YDYY>u/btGYn*\QP`kAo9MWK];oEhDWE!l],S+LtLpNBigG2LqKU=4>$!;Brh"?>(a%N^PAa+TsG@S#:iS;=-Lrn0E*5kLMZK.s1+dh)\pkYKjBdh)]^\$HDGq?38sc(fQ"g>gWAo^eR)NahIUhZ_?f91+oYn)G_han/[U=%YTUt0<+md(,34ABBtuAUG#RC7?6DuH-q6DVp-):81'<aOHWRNEV09NR^_<%7NP0B\=YQPXYOGfSO6)8.O\Y&pS#6Ol(d?JnHf=NZ%kkU%oT[+FbcD@]M6u*qN/Z!W^k<K_0JC63m$a-D@m<=u)e9hu[4?`+M(@m+21ZaYiUM0>pr*,llBV\Whc<QT4?nSqe1GKA,c#2A%%MmM\K+m3^#O(<8QDA/0,=gLed:7<Cf7%k(c:j;Atg"-I1gp^Xlf>W9V@h>_Kn-&O-n#&A-=d;'(f>_6llRDF#-!g'D.1S_`g\i/o%e]8WHp763-8K&IEo)..`N[usR.!X]4\8$CNgu8=A81JV"])fS==-pMeo5qCmIKSo!*)ih0=%lqQUh</:OQ8J#K7hdt$nZJc!f0f0%b#8Ca:n,76c\QD7&sk[G7?!C=H5h^dXSeBe>rHT:!:_+-GY$3^R_sY$S[J!_=KaFFkg9e,,El"uM1:e]+o\n3?<Yp1)X[cMdI8g.%VRLWk0NZfoml^=o!.ir&EaS=%H\k(L\YFQL[u\.AIh&s?,=[b`d;;Ik]pVds<Q+(j//PCp"0)(KgUj8SJ2PVi'F%\`1(2/V0_uW0%F.o'k8gJs.0(d:L4[XTl"Rq;ZU`_t,P71F_<2P/Zc`#'JZZ,&S7c+57=5`B@G1hmB@mS8$V!^CX[J:D/`NMM;M9]Q$,o+0D\.tS)%&t9E&`0s5(n+gnT6e&TH\`)iF/I>4e`CsKD"n*'aDKK2Ojoi;!$?*fMW8'u3F@.*5En)\jJ>,-Xb1DKdA$/bRFn5Ojkq()TdeEQ<%\`]7&-&5]uU<"/F3tSBrNQ<AeG*T4q;NM>tJU-2J4K3<C2G9AeTuVEP.G=f<I_Dd=DKo`W$itZ'mD9_,_o$&ZSp1^dp5pI?p-8C]%O^D@mO+S2q5CdN,91PJHQQUQujVPW5M]Aj9I09nK@Ebct!.;%`l%kM7ORt%+q(.Wlona0OR.i[c5CS'N8rR6?r7$tu,12>-Y,2NR%aN@!BG.[Q)hp5RN8&Xh=$<`C;:Y0Ur1=M/!7L@6;d7qU+07!]]#SKU"6\(?Ip/&&;Et=WbGFG\a;BH7X:)IP`P3jSl-`M@,h-^cG%Rpu(BHZ^H6LB9p2F^+UNUK44]$"$V0V$/A#r6qMN-kG=3i&NtL`=<ss;o&_TQ8&XNm=\3(Co'5(Qd*Qi,X)QIJO.fAeLi6&iJ*HT%me=@umQ..]@.WQNTt?H@o&_*Rf!`&fL&0qT(!P"uOFMSG[SR6S*hUDc^7![I`(tgRIC`J6G,\$oi(0+1HufuI'F:JP$OuXX#6P#f%gam!bO2+.W*ShEMrYd!bCjB,mn*,3/;KAl0&dpp:qI#a06E^u9!Yn!'\k:hp^gE;LZQp!mUkAEkhYu_"di/kQ3ZW09,O\<e1Z@)J%bJWC.GXjPkrL"")St_k$]-mB8l+J10!Tt[l<,s"K)M1h:2EZ_fAiJXTH5!doG;6Xd3#Qk0'th$;C&6nVCb#]aSt*30m=*9_K$+8'%`qfLi/:@\N#n3G5)$R39Rn(-,oplQLEh1j&0A#"H\mqT"nQmBp)f20\["_o65&1!H)g]SrSEtrS6]J[U!irMd-Tdnd4C-VO(\HD`%,_%Da-4B):%-nrh\YDX?4XY`*AM:jE@g1$'@.*)h,HG7F4o_U2>=]@T3fN[^#0ha8f1uGap(G(QUB'K(c[ZH8U5EjQ?&t=r/gIdF%PIPb&EpLff7)<ro:WHc`c8H'@ngX'k$LUb.#a]>p,t2J7_D3bOAe=__Roj>32'&Z6B%,],@;7G,o]hA:RqrmLV#CBOajU_?S[A3a%%XTstH-`;^#R(O672@WJhk;n-N#T8a(o:EY:u4qVFl8Y)2n="bL+`'hHMDg#X7Vq+37XPc'tf#Lm=!cb9c1B@<3B(M4quhla!dUJ%pR.cGZrD8QX.S*4VMMHFbbe-V_=Q8A"jQJAI_[Uj?*Bk(Al.+h>_uDjmI_g9=R/T3!G.<FPquEp+:b>:_S;f)^h]2nZ7Xh%K'/pH%;_Bi"eVf2Wpn3tV2FeeE?_l>6QV;lRqPLK];MQKJ"(hF_7_,Dj)NhtWGo<]4F`p@$.hlTc46h#;5](*/!6-'aGWp8jN%KSOpg,7n%g+I7-d0knpLc.[Y2@R"ac/E(rQa5[q[I*;#I,k$9,LcC(lR6Ggp,G%D!UJO#5i*;oE(ssP^71T@<%+:u=N&,5%q'K$SLK6TgN_nY%YWWqFRIDa0]FEe3UPPYSfnp^@4jd]8(X2V/Df=`:m\kOgboM-n"h4qg`,FD,H]:3ENUkQc,F:BqY44!q0H(="0Or.mD+JmMoYk\g%BZO5H</T_rfp"J-0CJ'R!aqV,C@SX.k,e(M7.h^_!T'0g1>F<M.EQ-XZBiOaRs;[Qb2L@(lYMV?g$-U8=fD(H+[tGZPQ(ff`ah"@%J+?UuAt3dg?"i\W"suXGOUgjH$tJAk8LPT2:8[O1"u,;%)E4XPpLYXoEr>]pj7]'&<"&C>"q%pt!lEt@`5\;0gZVq9`UM`E!VbmK%YY^rU"q%=MY,:%`Pta!\/LU_OS-lnu_0GsR_d0p5efOD,>5C;S_JFERdRt3XU<Je='ecP>--;q45l8=LfDE7B6Fr[*`D7kf+d/Z%%@q',5AO"7<-.g9thK-<b:b/hAkILLrk9r!;-W-'Wi:q$fC8XN^)@15rBLn7%>l/@5/lI$[$l*fh1tiVW!#ETbd$;/Y+FOSRB[*#l%:[A5f"%C]!$P7:-=fj9JRo+<TZ&rJ-Ki#K(cb1a&V=:hrCeFfP!.,9$Qg)YsoZZ`QGi+c=1W4<GB<RQo5A#G\cVf0O3/`k%[-p?u%]XE0WCYj"F^h`h&`S:7Q)+dAS>@J]WbY*j=6jf,CJ-QFNm.fT0!15qT5X_5lA<\3BGc$Rkp=RQ/3s7P9dLS2jklICI7E(l\G'/W:%js-&&qWO`;8gq2BOgn9GZblFlb95CS55J+68<.&X:3Hr<4qiXtiEC4:*'L,om^uDBp#-49SU>4]nJ",NUh_^=J".q:rE"!hGZ$3&%r"(;oLKbdOQMYsQ^:Y5)i1Ye%IMX6;Ql^]M6L\s=H1%qa];\m_8H?\i)crra;A//rEhk@=rHh`#.ConBIE=&B%at#N0R)m<A<\>5%VH`jse),mdbCT.gIq'EMHlZC+5UNNUh2d[ti[HQSf<UN"n2oC?_[Zhgl!^#2aPcUed%5>'Q$Bsc6j?.=1ACS78>WB#<(Q?_8;hL-%E*mg-&d#XBAW#UXgVqT34q/9LD9&e]p:1":ecN=)<8JA2KO+oN``DHfH46H0KK"0faDBIN^Q\EZ[Q\`M<a^HB46+KOP/&=+DnqPd%\!P>`N1IOOqZ#nT`t0\E;UTiNd`X#`*4dX6*RmK$!'JU:0nkmla5@WaL-JL8KUgKj2J`m!QaLPKb'rI5dO5\PPQrq.Xf?\+iDghH%E2U&!ZodPmC%Yn4d\9aQf;ipG]i@1RT9qjK.9@Hh(CYjB2#0H^nFWXRb^j[):k#0d<7A>&4@aqNh$al=hl.,Ws!\CA;;o3H3%[;'%O?T?C$2U;QblD[YpjT_U8N$P`hX4$4.:9Bt^:HH$]3?ofkm_#XQ`h,T]DPVO$Y8#HS]e?^mt$OW6+Ra4?PQl$i<d2?JVFC4n[qX;%4s(k3i1fGB;2uT.ApN9Jko+dnY,_7RpDs`;R)@QtXdB4qj)p*WUdC93^%c+51mYbs*P<^/aCm9fm;H(4O%6lgrr1U&+Eu:s!MDF@%KeTHbW<%sOamG%%+"mTZgEE)UgZ>WJn)=2E0$iLp%tD8-VNr44jf.X.]R(k'pMjQ-A>>;b9p_L!#?mJZBWb4'b>+dc6&kHRDRYGq%2Mn;N/gGfB0R8M,OeX]5WRU!.lo&%CY7mBGn8#96hS%0b;1tp8-KB)TE]8G@Pg>1_\EZpD"<+X<5(mi\97G\_+($dYL4]P+Nd;)D%jC-Sk2TJT:hmNHVB,U1#jeu8/)g&C]`+J'r*H(PSL\hmM_3P"m@IK1/d5jMB)g"2hNdGs*H`h"p6%SQ1+:e)Rk/qRZ72)5Z_4\7J%7%opWd%0Dj@2*pXG>B`&:kr72/5b1BQ4+#S3A-"]NR3#4IV;U!E)<`M:kou@cGha/Au7ZJ`UIha<T@<\_P$"]*R1U=CQW':%19VE%R9'pq3.AMT<m[M$`jDNUY;;O4Q]UX.:P%5fiLl<0Vn/W^W5Cb>n%$*k8_c8PS*M>'N]`0j4#cA6BE+8S(mK==mUWgO)V!`;Rqp[R%khAc&/%U@N'H53X#<P#t)jDb@>\*I2Fh#i!\sXsfTTA%#D4N'`CGl&VMd+<j')-^O4)"..HA)QW&nVWiLYDi2n<G(Ps6s>k%_B..%Sa<0M#edikK-&V@bfB.-!/!a1nt:TA,YCR>O2>.?"!.pM7[RTQ:4LX[?%sd#0-^7F*c9,qV;##bE2@k_IaI[-GA&u"8ap6N2]22D%7oW,'1X2S#'Rn[JqPdFB*4U(qXW;PF$jWo+ZF+>?6$'sZnH98GrOJ3qS$dEf2k`=sePgKt39ZW_X,f)i_GPtp:PnDQ6,m<Z]^Ilr%*G9L"^%9jI$jV48W0K,/Ms8LZJL)?VcT_:ncRuiuEVGl.GL37cS%<3.1l=!RO?;sE(_(d`4Qf?trBUgXjMoI:i^e"7nb=X8gc/`p%-LK>;NA%`0VtiUt)q1O=BjC2uN6W&T;#f=Dk=O"?;uS*I##1-*TKnE,_trB1>JDlUHYcb>W4R,c_5hT+F%[RR`C#@#TA:=BTRhBZ%H3PAHXT=t@K42)b/V<Ti[idp!JLBp<Lr,^k:QS0?<]k`'(5/22)*PTeK8.aG-k/]gQ?@*kD\!ApTZ8\0TIq^8r[J<p^BeRdqDM%0%ht]PK/k[KJHJMEg^V(,><Wtrl3NIO&:&?Om5%kisSSc"&G(6=f2!bB>Zd3US.HLH<k@6acVd4qaDp(Otml\o\S[/LfP!g`f;s:23%hIWk&4!7.\K<XLKoJB:,g*`uLdk#M(\rI[lc%Am=>=TF'kB3MfI@hE?^%W2jX%er.di_L\SU(Etkr`U79@l[1s6Vrc0qPp"_UEf#%GXu(F\rutiM9Q`Tm$P;/#omWM92A4!oi<V\o^n*PB(K0#Ve%R)h.G`qkkQ1fG]U?0nFRkj4MGt97SdO4dq++H0fK%o7F^":bi%mb%QjiDS0Et;l*]!F_SJkt=\OgDAT*bd@2ll#]`Q#1!e(0UCH`+FZ:YW\M,B)I7[e67K:P2h[DgJ>]Pa[hB45T!RoT\(_pDg3*VHq$U%e@pI<3S?nsH`k'OnJhKdHC><0<g4YmVd8n*L6FE"rp]nifO'1b.0Jdob953=+$88('C7H-G;)3'h5SbC-X3Mi6uI'iL"ff!0#&2*%h[tQY-J6IQ1SGJSdX-=apE2:L5Fu?F9mR&TJk4$EgsFN\QXsOf1cj846HP]7jGeL/*]n_3Vn*c2-C\>W6Q>hmoHIUB8bql\[?E-H%GU3Fi*0i[a*0tl(T$C/^d.$F^nXphTG0"W!kTp7*7j6uZK*'L;GWH;/6(^jU/I#Z6H`Xoo]dXJMXFFq\>(^3rr?oNLM`hf$2a#5K%_pp>a:nV0-cX]j,=7r6-qDT7Uh1XAZKDqP&>K*'%<o92M_0sIF:h9MD%LT?<[bdZR=,(WR_moh#I;raZ.'tE3d0hO`\nmFAkB\kl%Wge"C0Kf1Wd!6V;>lr\heh+cM-+nEX1>e+Y(0$-UV55$Y;Qt%I#(5g/qlCd15rK]9>XZfY*1nGRQ_\!bENaK8Oei3.3`6-rHir"i%71k()05h@EGgIA4V@_o=L-K;*DY+#`kI&_@#+_c19)q`tqL/Ut8/$F*Ntj=ki7DhTn=suuYaC-3RE2n2nU6GA5>I+,FQJl&"F36#%(4Q$SLHKa)]3Q*9"#BokQrP;+M>'^-Q-6_s%mZ3]`0&J@dK9h6;QPEb,_+[srt+Zkl@f<nOH7%;_a$9Z+j:IBe[k?&]Cb4j7T%DA%rM\q^TORkMSU>1[IeDBs#^U%"e!P<5Lo@+<2F&&OqB^Ms0(tB<d[B!s.u,'rgm,fa]H,s/Q:t?m``/0kFNBGG>F7@f]7Q34`]R[i%GDA2ae=n<MS.e&prfLpqC%eQ\F^V:?*_rK/kX#>R-$m5YLanCoo%$#_LBkqEoL$Ebh@9Y+?2ig*V'i^r\<;&AFJa4HSs4%cc/G6=%N8),p#-&!4*8K\#'6J5!/GJ7/WG"s_X)3;dqI9(G:N2NlCYT468Jj]SC)oV+ds:Io>@X_7Q73V:BL,\V15MnKCMABi?A9$=W$n).%:ind7:,"^bl>!,TNB`W%3PK9,*uMq(c?25q(LRg=aCHmgZQ3H>SbaW]kV43<7Y,lUAPP)*a]hB;"bf/Di;#Y14DfWEWE$?`2Z+GR%!0RU(:WYdfaG<SLG],:Xo*[]39X?#0aOPA,@r=lpULS@JM^s+(pUZR$R2@A"$_(!fMaaaIQ.1u7D0LE_7C'2+F(iaC1?/9,R*,h>%aef:F,V!jO4#YNP&j4_l*<^**&1!,,nQ$4Zo6ng3Yh6=eq3<ID@FEh25D!\#081FI'm0/h?(&Ta-lK?I[6h,#QZ@kJn#WkeEO-jJ%8QOXs0\2)-mT,&sNC:+20d3hK`aPbA*u`1bb1o)s$6`pF=GBi.If]&O*,;!0'8'=m5p*uBPs\J1VDPN"D$;VepPfo-jWWC_3O.Tm%HOX$HjcJ=kS<OS&6r2T%G&4[:'o1ND47s_>(r9l<Z;<77(S#':>Bh_T+G-Gc$]9WP^]K2;fTlp(`.IAF5\(rsrh6NiVY_%&n*iJ-%Zmht8A>G%!";"CM5T@N1Fp+U+,EG'>5u7[)Z,asO2lpF55)^?>mE!Z@E4B`c"[JMog(s_r)O"=lBOq8'm0F!u48utQr2.1KF-Jbj%OY5AqGju3=-*N4!*I)U'E]<Sj=Man^YEURU"T;fgp_`ee^uHk-Hsk;KeB$4^_IRXR[n$(R+L5gh\-cAjL(N2IC)@rTb5SZ7`=9It%bNKSP(#RZZM3++E')KWqI\'\5G!8655k9I-WsFQ)8/=mYj;CO`j9<CGrF>]^Wcj73hV]]pXqIJ<@NWOoEM$_pb14kt2Mt(6:IqNb%FlGRpM^TTJVW4(JU+[)PEO[0$(jdtKK6YYG@D#'&ag0]$72j[QoKg,PeX4eW_51?pR#&=t\1rqV&^-r5"_2/-4iYB,RM1=Y-*5,B%M+.q(/LA#dE-*:._Me$/_.D',,b9ukORa(Y.i4.66^-<%epFtAE`c.!Un."\!oO3@U=OOH+\&6je7`j3k>e((/IShY<cjXR8@2q3%HVCR,G/21g4,U.Bn0naZoCT0JXNPaTW5;8Ol2:o&I+N$nSR#+JGSTR=-f1j>D08t#><uo3b\&,`+kr+%dOJKZYK*j`jW:%:5J%:i%UY$5MrV0DK/&.qtV+e>H:V`:QPKo6RG8=FMM(83(H+i[;G:@HF/)+LB62$]"moiiL5e%4\IE_E[$rP^7VF%`8:FMFirGu,9!S<%q%C*X_m/j?Wgd0q6F2j^S,BNK8ee^tYMDJ,gZ:$(hJ8[PPWJeCesQ/(Gk?CLWI7_Db7/].DVV]W"5d>_G)IW/hR2)N/2pKg]]C<f[n%]t=i'8OP`Pj2dO4_0dRNZuYIdUh?Gn[\_%pd-'*4*pNgai@G,WRB%l`FC_oUN+n^9>j2Pt3<F+pb[/s8Z97RpMV0NWV]Y&hq%cd^%XuC32TV,:`+)3Qq0UDZFR.c9J5[>i3Zg880^)%fF>%d$SZ6-.=EUtNfrb_epfs7kt=Vi8$VWcKD_o>.P_l'd5Wc,&&/mQibK,tdt%1s=jtdtXMO9`*[%"q*Lsg:i>hU"Y=G6<^IqEOlc7#5Z.j?EKo(_$M=8%o/eCJ^G!bTaf7hTd4'fNPI='E)%4h4apNM8u'<f2SBBK%6\&;>aSf)Ud0a0Y3]n]1__AA"!*mP3W!\fG.kPr%J?uIfXEm(UO#gKs]/=PAGh`(r[0aiTgm&S[3/p$EYa/AcSuR?L^-Rm^.mop6%j#ES6,[H9=-lIZN1l@.4gtW)jC2*+sKQTE1:bgdp3GJ=;f1c*j!84D]+PIlX!K;0,5muQUpV7L08iN+j8f0Y%2m>)S,.>MDmDcRT%'>s#B,/!;2F8XV%1BV6-:<X4*SmT9b)^8!a!+d&a2J+Rq7NO#3iY>c4;lK#FZ`jW^>AjK=[Fi*+e8q,H=hYI%8j*o(qrPI;K?iF^%9b*_>#+\N/cpBa7jr&7NpM+a4bVSH&ma^CFR:jl\Z3;&iTek#fK9u&0,)=H+K5N;GE5<MTo*d[)VogK0k]@$B:hL0=,)=IV*?8W*%3HXC$F=PUGM&a,&1_sX,SRddak0U(<,b(UCko=h#56Gho$1qX6,f</+!6XTbp?<,=?g9dtV"0Wa4q)e1;d7"?OR,A]b<*/XOrNl[%h<392VT&'^QXqt&dS/bCR3[DnS]=[rnX4K2FUlT8I_5iBOZA1[5<[Foo*[J)lfMoU>*)E5+0?_g-6R#$k4n/=]qdYN=n@lE@u%^X%]N>6c\^o^t4:3;%^<pANr+brfcmcB#r6k*b0XZ[1_l5([h,l#9WD>k7#n0Fj%$TM5L_re,DRshRGq[8hfklkH+<"r#&7]_t7-U.D%\fn:.0q1JYqt<)"A2?'ATk;>7'.VSXI)M4O9koFKoSP$a%$O@()g0s]PdXI`V*$rS'LiMg*l]<Obp8SJQmQp0&NGH0Y$W1r.71E&%29*Rd4'(aCM.W7'!^el\@3/NmC1U/maQ%W9/XUOPk1QJPHVZ;UDc[g`1/:R(%$P(X9kiDhI*q9hr-:_pU1q>jen<q2oCsm))R,LI%Vhng@'8&?$=6RjP_8Zsig-(@j3jZIF^eSO^],(i_N*77AkiFLq%fGm!7&g_X]c>2'\ksdjQ7[GsR'`o&Ff8[6k0)"@$c<HBJRb5G%Lq&q]jR/@%F(\;1nQ@hudfU!GQ>L9J%cAbaKC*6]5\X>Rl.%0lj[pKN`&`D!@YJoI7SJ1N_\>$;G'2`9"$=5)KFGA[@$M_DMm7g:%-PSJ/OQ*\^&(XU,:N!8YMLD#-9[-G[kO=3W-lJsY>@@oAX!CnA-4+_(;TCaAC>Qm2clRNq_Vf[,hiUSj`Y18BRO;f`:Co+<-d=9(%M?K^`3uem;cAXOZ8XkcgA2b]B#*MAKGZr;o:KS2HbL>]88T?("C%(I\::1ZOR$+h6LeRj$iEl@C(VLRXCmde('RP5iDSu!"&K-SC%h`kF.+p4\Xp)'Fi^e[>(*Keam(-J0?*KbnEBSnB\F_oi>INEr+`\>[KoCL2SF7>B7!,g^8WXGZdkSVL:H"2,AJrF:4F5o7"nd3;b%G3b[:pk@Hp!*D9#655GD\;]c**Rk[alfM!gW\lP4)Of:W+ZZZR3Pdhh@$t)o3kA^d/SLPRB1L&.T2:5eFZB2lk';*TNjHe@[QYf8%PO"/\WDZQu&cZU+l2_d5UHQ$q^9\pdV!&LQmtM(2QHt="cGM2]VTq:GDR')Zm,l2'S:Y'e52:0+<,qNgXA5^s-6J87anF!\)aRt]%b0]'9ckY`]c(0S%:!Jsc_s,u=$9DC24rhj"!R'ZDWNnJu8,?8U&#\TK)/\[RYD+RKXG7/.+q"tZ9I/hZ`3V$Mc:!90Zo^;VSPJ':%=#"m"b]B%%Ytm\ioOE2&(jh#SoqQ]%D*T?#A#Q#rF6laWEuTBoBAb?fRe[u>Re+f7/2k^:m-e]B0`R4l8"bG?'igZD1VHhP&Oe[F%2s@*`N&epLNYrm4hYC7rSQ'BaB?cJqi27!di\k2oNsQcbHEX9>L"T;QbJVBKGMSp@N;(foDppI(AplO\`Ji>aBSrs7DJKA2S3'^R%^U(H&aipGZAY_4B.Y\`Vj!*u=Po6RQX3=,J?:@=5Up1YFUll[JQ"6\BITDVo$N!t4rk_uBOc^!WfC5qo<b/BOSa1n:@WH1_bsOtA%L8g6sfs!YHL(.]@7&b.FEbq#?E);QtTBK-Jd_=IR\1T:+KnD=:@6![JVS_$Y.i1m5e)!B4o1N!?oV2bo:5(KaO(%ltc&%9b&k.BF%ra`@R-hRKH4#b%&fjf))$SQn$)XQa!$R_[)&O;)A9e@n>C`DM;Hc`L_blpg"3_X##fYTATSJR1SO@J?28$Pg,epsQqi*o(dMWh"1%HBA*f%(b+ZB090KoZC2;edJ[mJA"p&"epRZC\K)?3nu?;Y&`q#?ThCtg$kGG\!CXbV_W(VFTkP*$k^'rNsIXPEqld?=c>>>PMJ?i%KH:&6LR@F/%M;;aX7FO_4'P'`!E=3IS#<esGrNf*o0/OQfPM=o!eu=?Ka`<G0IXQ48rK.aY^8,uG&oCXK,0C*>A6oN/saClP'=@t%H8I(FG*/dQ#1\rr9Csj_j?_tpnYNC47n+q8[q<a"08/;WYTD]^TlGgXq`T&O1`E`012)f+X)(FG2W;jLVW"2NLJ@Kj#eb\n%(hM9%dC*Xe+i=N2nE?'<c#2+PC3RD6C"i)=mrL'>cBBl>*lkV`]CPMZ39N:h'JQ]J-%WQ(*fWKDM]H"D\Xg'7bM.I46$[<8FlCiAOk"a#%\Yt@)*NPG#<R'5R=2mL.en?d"k952UX/[GC=%CQo:)3*YP$oXsgJPKOcGjV)+o+2Cc0c1qSEhs],%l&$cNZP#'Tk2AT2FE'X(!<`%o@)Qm[P6,aN`)nG;Hpe_*'V+KSPo4`$W"pI#Fkj;era:NflRVB@;KN(l1k@;.,9]cl1B#\N:)I(4I])!-E+s<b@T/ejjG`Eq5Bo[%V\b7M5&%cF2P"/,S`0NW$YRrQF_,tgLtul.rA0>3cDK(FVbua%eR[.njjIje7[DAtdu1PGmY+k22P"0U?/`K".%<uX\<.uK/'Fg=%bGE[Z*F1ju:/>T!8FK0Wl1@60^Y*kbCc]9&PI/ubZK_#4c_//)'%q@f>m7?F$JWn(1X-e?=Z2g6N%LJmVpcBg8rV0@@E_b1SXtVu%^thPtcDK(>n9f-H.^SC33oEeVXtlJADmr-4VXTc%FF(K>F5H62flVQ)A"&sN'kGeXjjME<Q_h%QoT5cT``J9sVrn%pGM\\4VUN_b%1Te^,]E9"C+9ukg^=[05`&'n4okJPU-9gB\$c0DVD7qtnONahb7I&Ek>8MO/ZE.lC,#T"Go6K>VP?25tDMnYY"9mheB3h0P5dF'h%=.ciYX"L=,R'I0aE4Q,QAW*,(5ajo.@4G\ZnAO#nRA(HqHURL,loh0<LlSkadJP_7j2daj>*`$Z4'O^\HKQS2pKZ[FjL37eR7J1*%d+pHU6cYin1V'_&kuMbMp9C`pLkZRpg$"`UmZoJHLD<Zk]$-_^L+t<&LR"oN<p!0&I5<<oLV7s9oYRK^SF,-RFgAkHMp]Y(N[TIX%XWWtn"R@TCTML?t4H[qellcjeJeb2c,4Ki6FB3%(*I%bQN"9pdAu23TF;DpOn.(RHlpS'+)5G%aT*I9H:K02NF@LIA)=7+5d/3s%%?#up;!2*bYkV2F=-tMqQl803trEl#5!5:1UcRSO+"^<.K(PD%hV:EWQB/,[L3S=T5=crl@?;rPY;5UR?/j%sYAR_cE"a4`lm2P5V%9<<R%/G>7fE1#1XJ?Ui2P/!kA!^m=s3nqUdAd[@*Ls#!JK1_Y[Y@_!3^fm3l6%,T?oN&Fn-Is("\W\7rAYr_8Y(GWo.Ou?B)C@5l%ir,q:Jr'oibX^R=jojtgoMh`ZI[7_pJF@.(C=R]/3_c/5RtZ)D$t>[H@!dYFfO"/c#ei)hAAF5@03-t+O^G(lj)-S0e5j(`VJ\8?%Kf_)+*9)<&(%*(0jk8"l_OZZYGt[33W@I!]c%\\&mWA#_0_.Tt<k,K;pUX1T45=&bM[pm[8aJ4U)6oT395[km_E)KYergu1<_:nR%5'#ePDrG7kc=aW@^ZPss@l'RMHUl$I8ePpCjb$;D^6j%-`qR>!Nn-1/199OJf@VX@-_9Ued[9/-f>(pr9618K&_Bq3ID\Tc_G"FM%dHi]([$Xi3dsOVedis#ajM0WK1$p5n0ocV[]Br4n"J*59E$[sdduD@k?cK:NO)^ANUmf0sBnene9l%X#'JiWAe!TV5_ra?s(nsmC%\#[Vjc.o[=H4.og]<IdbRLS8HZd[\3Dit^@R]ECjN3+YO[5lXXE*^\BaTcn*PD6nFo@ee=r4A.$q"#9#4Nsm>lPrt+P1eY3fK$)i%p[0i8"5WL#'e2qt@qrS$V!&i>DIFUDlWXht8@a,Mi%[pkbG*e++C0kA8P?[t!DiKd8kg7#8G?6.T46rI_p-eAgS!O\K0jc$gP5NC%j4SM#3!mp?8%i0+A?r'BRrNSanElcLk2.,W2^mT#5527%<n3Zi?\aV'Y.'>oD4;g0SRnh$fS)@DD6iu[)<Jb)&,/;sqU/%pq/BZr%,Wrjq!eQVnRWF.ji`qF%1DlA4goC"G-_hqL52B%DO/[4#-=Pq#MuMli_a/K+:ZPM3W)WM.cP8903%XG6%Q^1dm^il4Fep,]2<Dq4%0J""R!C391L%&^Cg3oK7:UC$cY8tb#Q!:P`+&D^%F3>Vm=+TcB2$m2l*mtt%;iJeBqDu$V$F@"BMNSYok-7L=0Gi8gd!a3>A/K2M%Xn#4Q]jkVrAB:PrT)*,c+\6':@:PsH*3D!OkX&NW0Y`YRGDdq`Gd'dRK>iWlh<,3-<Z*N\DIo-(c(e8c$"1@qb=]*#TdejIMa^Fq%9eSU";rrsg)-WV'a3D1og"e^eJrb$?dql[M0a#QX:2H,$&ggWCH$JJt`i@"Cc=NA=H#:fj"^QsImWGn61"]_1eD,Yp%;s"/i#f,G%]kQ8Mlhj@uH#<_q7r%D0a7?:@[h7a&c>Qk?^"406!SS#scCGu0=b%8(G$:MEakOoRZgq;jVPgf*ia_7@,NSdZ:6YOYU2rF'djV<C%7rH`o3"(;"#N+/ne\1<AfM/SqfbHc<a]8--+Zg`TAl4ifkX\oY7N5aBZq$3I2Tfo9=`2D.P%j5b/5_]bWkIR\.4sqa+#U=l3KQPT%aa\Ss);fLc@?%<Q'#L2sh<IF-!O_K)-^@VWc]q'OTN05UPP%lC]Y?tWQAIZT`%]30Q%n1aAJLcHlrpa@QD""5N*5<6i(m7:Zn&qZ%AN_%q(c+`SRnFRK>)*HD/W^-lRf`rZZ?R--D@W=]X2[J/J@IUiaQcth$P56%:jGCXIMST%%Yr?DfKr_k\2f(#k?r.;!?.pQK<kmm%Ac\q$Bp&QXT4;GgN[61?.=Gb(=b%hAWH%tr54\NGriDD:b%Ib!gVQDT1`<:-W$n9U<+4lWq(O;(Xe7'ail\a*?X/hVhat1X!RGpd%52@XBb)>hYf10.I;*Ne3PtMkR;aqKE:n/^/VKcdU;M4YCqQ8mtW;c;omY8TWl\BmIe5CGfbcCRlEnXQtY+PZ68rM3le'5I.rba,Y%>sIqZOR_.'p?MJlY)rJ8:c@Y9R90&[=r5ak4r`,H1HubOMHh`1f+06mCIMf"%'04RoZL-TrQM1:;nm@H\pe][?:>$Z\[m7P'/DP@%C:gX@;8O?[MYp*4iZF>d>X_p_o;[73gN&^nIccLtfjcP2lfU(+l=]tu.YG<]k,tlG.;52nrJ]/M/Pe[eWp@,nc9$2T5Fd%IbLcDC%YNi$sWHF'/IccKnH5W]?eFbUO22/&ZRWB8QfCdTQ#,eEb-_F=@1d.[i?--dU\pidAr>]\q,@Z58Ic^m<2&WA$fC`)*De\C9F3iB'%FoBMrkZC\f5:bSt9jL!Th-jO\p_LT_6W9%aq7HsgWdY=dF3N8/1WXpY3c/Z5Y+N6Ncc9F[YNr*QpE8Y-Bm11+Xm9Vb0nc0JA6.=.%I(ssp'Z#BDrNp@?^1)AUH@5LC1sG:U/Ua%I:t9JAp%YV9Bq3osk3Mls.)i*JOh,dC5P(n(ElQIHFo<$8V,Po_Z)fdoAr\U*frOFO%C?E=<UFW>0B:ag8?]T,n/6l1<^*W(@.=0C(^5LM$Z_)rP,;&*DqCRg<03%UCf10/[Y+O%IWh8N-B/]&OR31nGd:*L6oeShrUiRSh%Tt5[WlQT=$Zb@4c-g.Hm2L!oXig+><);"PfkuTK>f?_+0hbp?W'm9K!.DfMP/6d8qbRHpbs(/aPIc^sA$B;\t>sBnjeQ)QimBHi[%qO&6fJdo&6>sE-EAuW@jR[)B=i)jOA@b:9/<t886S?#5;Q#bc>gtYXLqTd__'D0/sM%@kE;OtujUbPSW(OU#8cK5B#2/.s]2=Y^'%UtNE^Mc7pDCp+1kq$'G#M:)O&'WB$k+=lAKlq4Qll<JKphQM$"U$:ERRZ(QSWLa!I*,5WJW=F?aEb"HV5PVZm0G*=!Grg=q"d<k=%?Xj$[k1`O.DLJq\qiJn^ha0a1/J'9:-Pne;0^P*]i^GBu7O]@KeVR2=o0SuA\6#DN9#lbA;>5sXS@j$$.q73WY+Ce4i];&?+n#8p%?K/6#EDAVZh/nI!Kq8q'oZ[m9I-S6ZO2q(CGk*O^N+_50C-8Oe4d2GXp)*=KAI<K?G66UoiVDG8XHU5A]R+YcDS'i0>L>hlj"=Dk%a4mfdmZ!3.kfgBdCUoMCZ0h/FgJ)R(=%ia=c2=@+feZeE54'q-W7B\A(=u#\=WZkN&7Jj@Id(AEdn*385isu+-ikdH&WC?2O;/9.%AB[6Q>b:\]]]8Nb^o'+m@A[K%NGjm78J-[#8VSX8>/s&$r2`-9Ht&R!F4DRq\,VTb-)5,I7&Wq+_48FO,(C?,45?dY*t^Qsr#1#^%Z]D+shm946a'09WPI6Ga&(>BNgZ@hrp0E6c`Il@c$=()gGFk%7.i1@(.CdFf8&?!31L=-*Zub@:7/_8BRO7h&$9l_FG!@n$S/WPI%J[u4F.)dVWPb;7ADO*sUgt?Qi7)Bhm;i-ZQN0^H)VbX#F;ftM)?XEHBVlL?hi"MgYN?EP:hMV!("Q9ZAd'$8.HA#(4gb*j3d*!6n%m-K,pd-;_LKJ2>V!;n\sr)sF8>l].(c*uOo@RQ#4,1?EuBp(Zj^4%=;Rn#Dk](c2WoFlji&^6GE?dA,3'g.7A8#/B8DE?S$,JWfs%-/"S*"I0L(Or`cfTm..$3dMM_SFP&NMkuC;q@:d3bbo,\Hj[<XjoORr;4N0oK`hdD3?q@+6Lp3iL#K4_D,[b9jDKbo>kh,/LRW+?%8;O1%J4*1;5f.c="`P(7qe<<<$N<YjULRj#n/VBVFPFC=-\YR4/bhZ1eTVooXng@Cb0.fZ1<+&pIMBZ2'd]ebeXcHT]MGL0EODVO%^]>YA8K@Olo9QO)PA;>P5JWPbk`J\,8;9#MHbR\AR,,LcT;<cnD%A;q1R.X:l4U&Zp7@GGkaC;]gNuCh7!WG4GB)Wo$<!R<LWL\:%0$'e9GBZG!d\LocEs@&5\>`a%OqPL"h*3%d7ch=C]'tQ&@:0l[haRJr"adliU0:Jp]a"sooPT(X&c-tMhFQ.>7j2OcDB>D47/K])%'_^XlD@YW1RaPI/P^3qq9X6M.:QF59.\ec.^:Zq#8TB3TapoUWM7_2D^Y$00Gt9%*Y8:pQLe.>Nm(iePEN.;qFHF8_S0$j*NUf)E%Our/5CZ)gc/'qfc#IDKEZ5NkH]=B0^0?eF.G8l(6na[<kZ#T,aNI51K+D0?^rZEHjQi[+=JPSY]`#ldu&KoI<dY"u/^lRO^r#46W%H[M=PU8_m0O="tnLF>kp!L1S5A^)5L>->k->B&]F*cHQ/d;uMW\94B@%g$Hs*tC:2O<sieYOIdtM,u-(@T+BH:+77^,p24.'40N]%W>!DpmgTRIZsO*];@_RThTPOL"pMg>)@6NQT=7@A(^a0O^qGd7'iR<+I](!,.Rek`Sf34L$3>qf0//nGR]Z:bdenE7pI%Z2=%?1b%gcumro*aDCN)&iQJi#/m%RhUK..@QPg3/LsV`GYgF?JqIg_DCV$8>W>9D[M/0s^W7]@HKh'k^jFYHKHqPQ5].52R0.:!)-DKI`"o%"SJ1ID;MVgJ,tZ;5TGjKd+RQ,$J=*m'_9%]$tqYeGsnRVC.A7Oq]S30m<sG+L$\Qo5'/&&e2b/icLr4]SD;dg&gu?<73(2S@[+?O%<n"PW'g\=u-<T(qb'-*f'=>C%%m\.J'];U?<^dqU`16OZ2;fmLO4'9%Fi.,6qjeGJ&H*j>nXeu^H8c9]k:$X;EY"<Dd/.@s*JeCK%efT/QU8\"Hfa0bKa3r_Sm%Mf-DZs%<kHbOeao:X$)Q")5+cqQ@pI`gE_(,((^iXKJ$W-KDoQKuqLu-uMWu=D@/LQKAh<'Y!Lk][(%+;G&6<&.:r53bXaQ_@UX_[Gsu0*.b#.Y-K]I5!k)PVQ(C4TE"_i4>QnS)YWVG?pG7a<g,!jCb-i\MBQqM]Z/3Jt#d@*E73f-kQ>M%\<72Lj_eUbPMC%4FQPeP+ANP2AJEj(Aj$%qOUdd7!O>jS.KV'VVb-nYm#^cZD&mETV_hrH,.Y!,Wju,^pP;__-&Kp/9B+Z;L'<:o%KYH3^VDgmZDK;SbP_SYBX6dXZc)Y<%aOA7K*TRfCaDn%=Z!1BY3V;.I`r88dBY+M[nMiPa<QZ4f4\Ra@"h37f_/1kLjiK.ImEJ?c%/ToJ6.%GPs>lnca_e[?k6R"d6-gjR!c#\>I?Lo<PoGs4-\I.ob4\k:@RQN8;7#.U&<B:#I47Y6ndVUo3@[Yl'i8V/i:SAl>0mCkO%$knF1H?H`+Onsgl_Ag>1AR<'AKDS.=BXe<hO?lTS6!TbE9D0lAiQ;&,kYc_Fi.FatAj(*Q0@*VV#ld0*=N5^I'<c.2Hjjo*>lm.a%$N0ilctAQ8l,e25n(m&%OIK2]$@qjXL4)lB@<R,Q+lPnM"J:X+h>8q_'N#Dh'e%/[[@]i$#e)D-223;b9-ikAa[knAA3Yfi3AD'K%_P"b_2/#;&>m+2!i!\bA60ZJd]0HVNN5VNEO@)=f2m-R;cQckg\\4>li+[(/*Xq8J];r`AHdDAd7n=-!Bc"pG=G.I'HjV(/:!3YH%;]#QQdm+qHdiH#*"IGY`+g6U;^!LNhmEmcK([W5Pc[NVp(V$F9#;mbQhPR-@#+`?pG_@[f#NtA)8.6=lW)W4e55Qe6$[,HTNQFZ[%,cbYrg6LE0%Hp2_]FV&=W>EU]4H4WQVm-eN(IfF,bL;i&GoGGFeV-a'!DNg!)r("scq\'O<,--+=E68c]'P;.VSn.%(]FSHOL81]%MbLa`&^k^49N"Eri(RW0_A96CAZ%g4:'5V]n@n-DW+BD1EA[5p3-gtcnQh+J)-YPoKqe_iDDN[hs0=<]<75e!9Me#[MD19\<60A(%VL"%rO;+p_(L_<@<<&uL.MOJT2i76OC*H&l<UhWVPsWr-l0X7SGPE_5+bq7!)gLX,5(%=MK9'UZ00O!XKQ4MQiAbt:rc]eD6rZT&%N^![lCik9,MK#!;\Q&?5iER2er:j*a;s$\r%itZ_@eKV,Nt`=V68/tEg[cP&:1p;CPeBc1Zg#[#`'B9Y=%?r`9X!.+cJ94QCVEp'%2^Y,7G%n7$;qt2=876tu@h]uGO2`UMkmBXUE=QB*P3C,Tr\Wdba[G'i+gXf]2Pr3;$`[;PiHG<Q=Y9g5I0L`5lTL87`1k4;qBC9Y%4#q=];%@O8&F`W(M8ITL"&JfSGeP4&W<;;LabR45TKWalcdYK/`dC-i.e\u\d_QqY:<E]``4k3l;p!eoT=[$fe#HNYKs.0;Tiaoo%<6abc"mHU1<('Tf6RZ&odRj&sZi6J1s'eAacHMes!C[ahHT:o(a*h>Lhq;NRm>/j(r=IZJ@>AuEG[A.ok4%Y-GNSd(hlIiWh`gu1%[%n&Ss5^>i8PWXM47g"3_7S\@]E/J=KGJblH2cq:?V;DHHgJ5S@PH<$j$1>s7$d8);^]$Qr:f>6jR/%J)fL)tb(E?o2u^*DSiho/%FiTc@3dhm+`9GH`I_!G(?hYSejW2;!5MrCA\G6O8G_FsD=$24ej_*O?Hg'2CYoEDX+1KPKUGjPb4hU74o]9Y`f=fE<a0`MEeWDpF%Li%YAnaW0P8,)IXFGK:ur7mk?rS'!&Ip[G@L">'#CGqbK3Qk98Xo"r7g,b0Xm<O'Q_(j,+[loVXCI^%>m*s8nVhU;omFtip5"k&M%;%3*Xk?k[O2d.r$f^^]Np8$C:o)Qn6=-"=F='m%6rV*aCLE?D?6h3m*cQ'QUXG!s_E1``7oHeq4YM[P7^jB?Hl-B8&m8Xe.G>HY9%3Vr"-$hj=)Q`_OrCh^h*?JrB4p\ghEC)DWgg6$;+ROb!of)Y)u5Q:N->hM74R6,NK`+9kbcd%r<h\,ck>WFq9/c4H48*RauKs8g4%O$5SMiR]/_R3)A*b:OS<"Dp+t__Rs!Dd<;;@Z:n(3PtZ7m3$%mG!..W2`(d5I"aa>r'QB&Zmm#OT0:R5gRD.8FakU$d'pa?'[:>`%pbpNGrq=Yk>+IW)!TDqN/Qqg;[=tm?kU6\;Rl8IoKYssDTA22!RW]`m]lPOnZTk$&^@fIE9E(?t8e+)#F\)@UIsNi_3,lrGFU&ET%AA@Ip=82ooKscqZOTfLM!2RDJ)i;u81$t5:#E-C`^$j]gk1GB[Iqi]COU'XK,At[/9<OHu2stcT1l/_9Z?2Lc0P4rWq_mSLA.@rT%1;@*0=$L4HPnU4uE"OVnZf>7sIIBru_Rt26OXj@tC.\<s@%;AGao_ooHh9V:>h.E71rf8S.j><9UAialGJ@qu%r57*(f\];1Y5F/%P1AYOC7;mI?TGgk6SJK:K\?A#bS>#GYA_KeYhO[-E;]A%ThdXdJA(sm$2`bJHCn8i-1!0iIi4L)a[E?)lO@q8T22YskV;h85Ib+h%s7V3kHgK+1@orQ:#j+Yer.8dk:g9_8An?'$g"N3>(BCjUfC2S:W>FNAS_]lds5AuRL?#K\a1sk?j9L,sI'HGlf>hM1,:8Ilf>,mM%KVJ&oZh4(kYBeaj#LcG2Ihj:B$pT1#V^!0pIt+fjNCF^Ijca?7hKtUB[INp#[]c9A>E:u$/0Hk+HS8;roZM,'lM[*=CBo(\ebf1)%'rK.5X(=_!].UJ`KQ-q1_GD6ZZ?9;tp?h"r6"Qi8dFiMdDZ&fq)mM[mfaYB.+kF*YOo;I'[M*E]G8>`'rqWgKkjQhMdnnnM\ag9O%Y+5ZOok6"$_NbQG4k$eHcS%"A]B_ki5G:X-p@oRqU.0Ld.277r?7i"3a&drRSJU(roB/&i2=1::-Von5]7-(5elB!;O0XdZ)PV`2%ToGhRb55f%6XLfTZbnccrNhukm):>b^4\6*h74UKr'%<OB#,SEH?B##"n5..etY=a>]T"6*&pN>qVs*3s3CVd!Y2*[pU,:`0/&$t%Y^PMldpPQ%!Mh6Tm)@3OQgMaJ0+Ed<hli7=s,.1`,_,:?r*8Ct%9fVRRm4"b_5EX`(Va7I^AR;rFlshEF9OSk\*hJBcSB4qbKh8l%)YrpO2.<dI1SNhjOYO^X'`+J,Qa$:eZL:*.`+Nn7^#@:G*%]q>^h[9CZ^l>,q8pk,<b(3oLJKCPB\-2R%P+l/eELWTX!4'MYOA'B%8#WLo-c(TtfT%`mIW*ftp<@+1G%%>o]^]!#m1"f=H2detRW(b-o2BhYo6=W+%Jo2R7b]__i0ms6S14iO4,/]RFP`S#qj6?.,NUWX%F\H]-fU/kS\!+1(35rrV^TUR0qtST:;DMn2dB<D;r"jGPn!dtW`LA6ffspM\H#6pgqJC9qZ*@U'5$fH-n^/`FH>^b2adp%cL:kJ-%-b_uSa!hXD[m-e&gcC3F4q0qGS+Q^Q'2nT$9-a<jWXh\nlSL72rZI!fBJ-[<DdF\XG_U=uO8o1kmc/"ln:,25h<`^T+*YVp0phob%DO&i*I/t=VOk9Agh:=]M\&Sde;qcSoE49gRnb;br.GSd1Yh*@Q&LfhYc+TH&51seCY[^&f+]>i)O2S3VH_g.J`nQb2:<:i14\#j'%)^elP\;Nmd;b*q3g.Zthi28ATR+8`(U!2')-b2k_K]f&&6c`I`\,Frr@!(k_EncZ2f'gbj>Aj>CgI1W$`cBgph8Y^b]<^5cA%."P%\?t%/s0@jM[NE*j[0aIOh"G6e@:"+i\a@FTe,7ClFiiD*[NhFDFF'imiNfN[*l<WE.5hm>2'9U%g9en>i@]_9CBo&$0!kinICjKA%Vf:TiD"0ruE:)T/iBhF-ZA?T7ha_!5-FGWKL]>$Al<h7`&ske.k3U38CRu'?DLD<Mnuk:6s6KUCr!CF:5!_U3SeP@Fgthr9?b1O@%d-Z/\/B_*&p)oPg)aeb'-4TZpZ0-U#p=l=1U\08,6f<a_HQQ`"H5rUL@mt-<#BMHTr>!J[Kj\B,Z"/,@b-A%a*IW8_O4A@%=$,NC%b*>&ldDb/$;%DoUjO_3Hk8VmbYQ(IT6q<J'EP+9`,lhHjp$&)1UWn9eFAj3qUW8);4)sXZ?1YPE4<&bE`L@t'aluZfM2crCMr.Y!%8h]C#qEK;s/8=0Df?D6!0!?O<mbBkPmXk^GLI^`XXF!oZ%+hNBfeM\(L)4$J%&3a%RHf47pKG<.a4[6PfG.RWk;Gl0T=TRdnVK[0%j."b(Q'<QG-9SHE/2cSe<^6T;"aBsmp:#.ubL8cs\2-?sI;Pn;e_7j*]qX7&\Ej]r\or.Mgsu/45<.,@+kEL%13--a<HnW$qq!b[%n/4`@*1/g6>"[ndH?$$\]%@2E*ZV_9LF^Dg5:'<P%"7*kgI!F)htZ0"?,W,<*dJ?/hHc(cZs2E'A$0!ON&#nH(c1s/4.>N&IXOl%%FgTl[D6U@Rgja)=ke(SpWI7P.fDNh;WI<jBpR0b(XGachp03QQQNs)+FRBE548DS/g"'GbqF@ab9ST:!*r>Q^\b$TJ9e0H6nes=o%o&Sgu>@-Zjh0KcQ?K.gg"0$gQg3^RdXkG_Tf5Kia`$Sj!G=Ro`;Fe(PcBk:bgpu=GI;OI^Fca',Q04LU`OU78U;rAVIt"uC__Q&5%@l@Ln"T-J7^HEOlYrb.:Jbd,,MRt]!BuJjQ+&)t%l\f,`ft_u62B&1+LWE!#+isKTX"*r&59G<nI/.f/8%%7dg>%P>Z^6(3gU#::%p$FscrH8F;o_o*;8&%2+%I<"@jJ1V(NF)1?p6q%kHT&J.+aO&B>s%`Sat@LapU:hT(N+`ukdOb'F!lkD#P[)<R;Lcep6(IX3M168%bc94&F)L]mV2[WMB'lcTn$d0Ghb#6c^D#RAnNCCqQP$rDn9ud@9Vpj"*&=lN\P/U4q&LJ2\/11-^@_?Z@D5\".UBdf?tGt^0\@>C%/h_[gMYPgGJ"5=\\9u%5=(3<eeoq%j2^^Zs?FfiSnK9a4a?]Mc3K)q!]ACVM:aY6EQk$$$SN4F=h:-i5\t@:*^9c4:g<oCMRM6lq%FcXG60FV;'F61Wjhfl]9BT;D"B@/3>Fis]4J6S%C?etMUfQ?Mek?gg6k,\U\lWA>XFn?BYP$:ud=01q)-6`75WQahP)S^[cdWFlt%_(B`]S3:YK*Oo-rU@$.%?24?"$,L.*Sp5OO4SrWS'8!G@\s+=PGZU'?)-,6(VJ?u4NHFXX&Mc&<m*WkgSTO$*^%cobG2\JiWr/3b%0MRP$j2$Su2kc"&ZnM3i`qf>^_0;)3&%s.'2fG./C2W1L9B<7aG!Zo'_4d(Jr5@tMN]<WH?-Rf^4LD"Gie`p[ifJ)54ne*kX!AoS%5<Y@XJ&$m"#%s1:+d&;ck8QcX\^Mip]%f*M^bU-5hr.f5]DKmK%=@?TH2>V:pMHZ7<2]K"?eO\oReM$oP-;XSH?A>RC\Hrun!CXS%[Fdh&I=H\2d>aW.O@t1rI-B(F0Bf$G?Z;Wd[X!W,rRrQAmSs*N_ip!8b<V.39Bl"J,=oJph!M`#m)%\_k3hn,ns,Cdmd.C'7r#.!%P.]r^R_(-AfiA!/2XadChCk/SnDqrGbO1YUjmSf/OVuE+hX@%bQiPYU_c'k%C(=(23O8<kj6QrjL+Nm3d0fj3PhEcrjlDL(mB5K8%>)1gS$[\(<nuBZSCiB"oSoXO`^%e6gCu"XMd'<2odCJ?Ef3/#o7@X+Y6[Jdk5>9.<B5SaiA4NEdgnRMDc1\sU=.!5[;WmXEe%^Al%J3`sfo378NP=Rh.kgKdC<c%-pUF4CA,Cbg$NlEQU2':YIi@sn9hd.G#qu2<)^WfY&NakbCBg9VE1c[@t#F-\FD=kHePpm`.H1kH:%[XIh5f=k4*gmo[(^XFZY]I?KO!kR?NG3U94IZk"&4,>'[X+)lp3)6._%UsA1#jghtQM0#MN+6)q>hH,Br*jF_PJ6i78ZF8k:8akh%58Ue%<#>6"kJt2a\G,6AcY)_>oS!tGT4gaM3`H(;l;lg/lf9/Nl9BZ+ROCuuEV]39%;SaoKXlJ=U\cE$]DBcR2_brckY$Cc5&hCC%?XNg*H?Q6JC[V,?fllhr*!I_VM[fUD)#N),lU/k&N#e$<F)p<1/_jukqu+rMD]/P6FFr;Zn["]h%!&$:'Ad!dJ5'2PGHSD`q7SqF%A^O:$/oKK,F_D9[rO#Q:F\&3@e,5LuXdrWsm^I@YO*@[/AV`O?4oFgHMcV!JIUH%'_Vaptm5bOpI=1dQg4f$fT0N9\T+nj9%6&(W%d%u*hes7r^qmRqNjB%DjT7/]0>jq])@?4^%1gB_C\b`3/So:<$qtEh!isG,l9RjahV8*$,kGeIF\$k#Y2a`;uiIU<<jaI$\!I%W!%-3!no5E39s^4p4].*eEQql(#\mBXE4h:(iGgopG8hIV&K4Z<&pDqTPc^HFLLj1W4]hXB.t4h[.ZRb"gkH.1otX`*$CrV5?0DdGR&%j3c?KNO=sc>N`.-F6i(CB4&;rq!e09s6%qOBA9V^4FI!?rNl1!F5L95H8UJ9&%A/oGdtI2gG3m\J7PX[*T5db!XW;pikN[u^TW$*%oCI;Fs#o0u]uk-irZB)JYE55qI!bH-BG<ZQfW\_1GMpQ-QQ,_c*U+0cbcm@_#4KWCT3Qd=ir&+8a1o4b,KBmf18j#:-D>hOa7Bg[%T&"_ga/Q0kkC1!cnY\$hq!RM"X6Ed;r\lHOb,]j`n*%uBi97/DII"13ht$$N]QIWBkh3:-^H?K5gOFX2n,"%'E9=rmF7-kqNN[5,%fgS-^2g46CH21;8G`TV=)_Zek]BI;iACu7-aJL(O`;J4dA5eR6aEF[0q6.D1O\J,6kj#pX,+Co'48@]3OmRUD>h4Bn75b<PS(mp$%<+Jph9j)pi("j9HIESXJHumWah.9A_`!iFfg3Jl=3ApR14sR@Fj.GMllmua\3Ms'TX[A<EfFr-"ePlG%D]Tt#Xc3j@rnT<:^I^90%hY?[FQLi&(E+aX4FAHDup[2ok(*%cF6J3:r^h/^<rjAS;N9p#da?H:&,dS)Cb4+/ldQLc$G@,1RHoMb\T=Q/Ul_8F`fNCKSQaZRL%,G.tMnX6ff5%6/Cp=ZF&T&oot6t94BCSl(N)H=`/'`@c\WTrr+e04c7;b*S&O=u$n[K>nSpi"rDmV=Za/jKAPX3WK7TgO4RI9\ci%BVsV,1q*(qOc[nur]37:?!MJWj:FoM](k90Y>4ltVp9[6]X=HD10sii@ro<%T;QV`4a(Q-0R7Gh%[3OW*@?9A?S;1J:7"_(,<#V5%a1hIpobO`d>?j11V;Ed%]>LtaIT.3%^RW;i\q32rl-1+#@SE_+Zt_P6qZj:a$P>0-o,<DkHZ)Q"jN2dgK!pon;ZfdcHua;rmWbXF%Cq/j!Ln4/*hMuo$_N*Fmq,kPJ2`C"@N3+,U;u\$@cTD?Fog?O^2K]:S)B2r0qt,O1lL[=0)MEI8^2?<rIXZ*R)ZjP<2]"V@V8;82%]6q?'/_Ab/6#-pQp@WcTq-7&-Q[a6<O5_gNKsZ#BGIP*RHp;D/K71N4o>\8lh)jD?nb*pC]Y*nQpL!?,93qPgFZ[lZDmOHDQfkt_%dj-NW>:e@tNOs,](:tU0)\6:6Bt:.EWMaYs47MZ^OJ/K'ht\j1e@*6ncBEF0l,m(O[YGp3^Wc$<:,h^l(Va:e\QE?#T'UNXIJ7j@%CQ-S!g<ViC5-XK5p;>@-YH^18hFmLDhVeBkH&]LKM>["SchMS56i"_Zp@mnOc,Q<dh0,%qgM%qiHAh[h-i%q#e,8^Srat39T._!R%8k3^lMsAUFHW\of/+D#3T"a(EB=p4.e'9*9AbVheqHnSsLY5H%l'"p"[6O'%?eR(A*<+pCn+q7<J,dbST[Uu#)i=G&s4P^[5[*%E%F.\BUrnfC'.kU3SIJ$?4pJsG!s.@o6S\1jPIfK(lrib(Kr+l)nThcT_((Mc,K'`0?Llb:@?_,GX?oFX[F8PBRqW&H4jUZii7umEH%acp)N'/^__@NLA.Wt0Vi%Y*N\LusgMHu*nY2jE+8J%`).Ie2_"ZS)%?cM[20r1)p6'?%X<]\>'C2EJ?R=KMs8$uotXlg*HR[\mC!%id0tqaMn+:A+rLj-XT&a]Sj:B:VQ`qMd63M"*f_>mcEb=H>GV?q3sqg:_EuEI*6P0X:OsY\8[r?B,^!EEV2_B;I:ME0C[!S9o5tY%2<;d%$.ckbs766^Z?>39gt&%lri*h(mEn]gCUO)2X#u`hqaf\m<V,:hhi@^5_Op@VDm\*ac#(al-`D6SM`8-%l]+'_Df*/IX_EQ:%rnfC,RBA\;p\hY#5E7%Cf5NjrU\RkBf9335m,#LkdD]M^B`R`'9hE'npu87Ml/'1(O8rMn%<7]+1[MK5:0lsGl,;HY,=lWF,.)jW%g(^godZ=2Xs&6$Iq;apcQi6fQm/h'/7/648I#T6H'KXA=>dG2HP@HBYCD:%rFgUSA)p^@fFo1XfF^tIF;Bk:brcR8J*'&LOKAFBQ%4J@>`i/_n:MPCM<A1;nLSARRsZ02(DP:7j3h5EN4g]"P$TrPZT`Ra$6e9[;+Q"fZmE+h5p?!*c\,;0SAP>p"bKD2tkmf^76+CVF8%Le9m:\a]LRk8k$Dp?NA^]d.0#qQoJ4rtB*drdf*rYNZ(3T(-8L.S$.Fh!;h3@$4bb1gMmc0E:M*[?ItnXr;BUdaJGLNbRn=5si;4%q!.Nn>S-=pJ,%'ZVq:D9kM_=VZS)9Ik^WBBWN7&.f51fcQN6[SrO!jdmQLR4ottonFT)'b[=`\4cFnIFn^7'28'dd`Hh!a$cN)f#%lM@W`(Y:lUf8K+G`@'8ud/-L\l#QX0UI]6q)s5taC&K%MGPcm@?EYAr9n0ab2Jp%ubA3<U$2rV.kV$;Gg\&>4rVHO*r71Yi^J=)*%n?\U"5,?FCX]m`XCmL17T+I5GVlAa"'B>r#dB#QEb]rsuPO)o,-7`\d-)bW`+6mFoVR15]f_!Q*`BjoR>qqhb=fYZ!_('0JPnXqS%+o-7B\P6RS]rDcZ$):^X&fE3h`mGm1EV'>T'Ve;,U3fQW.HGlRbH.Iol8Or%?RE@T9q*FjY?5o=3S)m..G)2.A-5,+1RCqC@_<kC%mMdq]1esN=TVkq22a^#-M2mZ_,NFYjcI#h"5&J=!SRObtH@df>fsm\WZkGSGcmVUK/!cp'-Nq&LO:;r+9TG\V*8N7TAi;#4O0cZ@%g1Z[Z1^S^fT0cN$fjpE#q3^aDIW6idHnJj\`ps!9]fll0In*9,IO3E'_Y9@qn2s1PBr3?M\F<B-bkfP9-PK.',IP<S>Y6c/"\6nJ%0%,r*OR6Y=F>)f8D>*X/4H.k>%*+MF/&#Dsl'Y#UeSS%b1M4n/:#7C4SY9sUoE_LYFdk!lc4%C2cu5S"A/tPkU,<m!rG@LJ`cJGT%hUG&k&rS;XBBnkti]U_W`_)K]r8s4ND1PBA9i3'Ll,uc?#fg1)/0pE'/c/Ls8p@&rdaVmQe%eH,@kl%=$^M4GCu*bGAZT2Vb0?$S%/5Y'M1k5+C%CFLlh;*F(U<AGI9H0<V*\F`uYOe(Zff6Q\Z9b`,BpK1P!tVD>Bd/+9l&!g<bHcnbYd@b2[#1,R8.6C4a2uGYigV=l%G[or1o^sEQS=s#]Bun7]`Op1IQ4o5n^0%TN4?[2Cg9a<fYMduGC6C%=&W*ab63C.k]j%2dZqchHBGq^[[*qT;'\`(X5;gj^,0?+V%Cd!=hbq`!A9--BD3Kc(d-<i-t*GsCa8[%1iTe0,lcp-$<EhWGuBrNIc#kT*,4""N.kc-"mS7r,GX.5m<p@fbf*,20j&'VDml,0ga%Ue_I-,u9.]n'2Ru:sPlOEY<X"Lh7a@1"1$4FNot*VH[G::IY@g'b1?2gWrCj((C(NErB.F1lDNHe^Yb]BJG@NEJ(G3Y6?^jeu,0C%nMH)7+u/IQ,g]"'fo:^Fkc(jp#pVH+$cUIdq,4D;&Y"gS5:r1o=C>]1Ee="i;(MpHlaW1\=Mjn[YnPkf$ZAF'@jKenOX+OE7q0^Y%fdVT:E1nZS3):5s:,X<0M=h4$)C6%>YGQWTk\6p**DB;hX[l[LdDmY)P+FiP1[ATe'3:!qK>+3IZ4&GolWNou@5^D0A\>S?'>hE$%^;IN^KhY["Z83AE>4qr)Bu7TZkmpf_+s,o&jBq8G;)6'V_+Kg@UBPC4Ee^6j8!5huAPY,a<hseWZA`/lfG#hO!iu34hR%s`:BOf)%,i+Yn)*]F(_Y4eD`/L>:U8V#L70rS;"(A"g85Dogoa'VL*tGl70[I>U>#G3L`<g\r@G)Ek=Rq/_&J@n4#pb#>5,eTF@CV:9Y7%Y"%LYIrM(Nn=mQGde$=#RD[+Y5n7i%qB<,V6LejD.1*&<p*G4=JJh\K/p9bl\J_n@A]m*4*)K0ogBU8D$Y4>\PhTq=QN34f5=)9:LSh%fiE:5s"?EqTEJg2F"aR#86@2XK.sAq;dZ>FCrMQ+p]*sm<"0/%@R\KQAhE^#)4<%u"EU8]?F.@Oa1BedqF,gBP0)R@MO-"8'>o0n%W(DP)_IbN)$W0UI7'Dk`5!qN`<CUa=.M"QaMKC)a_,rQK,=8DsYrUP,DVDmdB$>ofS!er73GJVs*1\-+N"(FD.;fCV*>h@\ep(_9%<J_1.*&7u_BHHsn"t>eIV_+p9-S7tnCtj_UFJ,Ue`$9o>-l*2dKq%r%Am1.(@Pttm+-^0TOA)4>@4XdtPN"CLnmW0OOqkiW!:MMU%r%ue7N"Q*oK0l5:3Y+;<ClK?cm3Zis6dq66KGKqSV@Ze$rRce%[tF12GQchj2$78LZ^ju;aH9=m=Ip6?('k[!Yj*)<(<N(SN)iDK%//ugd"S4kj^<(=/Bhb'5GI+SeL8U1\@]$qZa7cB<Sd\9kLle/oA?3k^7OLY_@EE+p6'B&rr[BBn%%U<)MN!/o3X8#WFYmojO=`!0%UdbAn@ZD?X"PMR`H&igfahsiA0JQ'hOqf@eN%is6=;4W0>qiNR/M1uj*Z8fgo'<PE+_^Pt]GdWR(9=2rQmL"sCUT*F_UKuNCE",G%M-_JA(1!6>@`hZBb:CMUR^4b\`<pBI;U^hI>:@J3qiP2aePq:jJD$cIbA(*4kHQ,`p4cM90kkT/e;#0*4L)bhHP.]p+;Q9Mk<X5G%@DtK6^eC-6[*DP"3TO%[;[>1H(cVpq9dWu<fX0<,l>70P:*E#3_C,a,Ta2e[l+a0!$Lf3XO/.CE`B%S8WfA!#M-'gjRXImsBSAH)%%bU[mN*Jf;gQT4")%ckY+GIhOM=r6SirnkFWk1Q!KM$n=Qp62HA-8OZlj?jq#Wl-DqlPkaVDG&7X+4LBiQb5r4Z1E0_BbO+fK^8m%2SdE!cAJm#g,XScM'aYBnM7OOLYIrI/dOB-O"Fh=%^1ZV$2bAfq?i(I9&IeV<AB:?$q]7h,el_VdSL0GAMD^\k-]kWVS\I(/I4.<%pLf&ZPJp2>3n4D/a?%l4q'uApa\Wkc?56QI@cB4$5T%+LI3=>"Yu;f$<#?3JBZ>9?=t@T4*[c,GR<<t00S'+]Fff7:@@jl7ViMF"%K#WAt4/ntXPCW%"p_`9a':(d,"Y&^$WY-Y%.Qlmmhi$0?(.<BkMPMARVIiZ[=QBrY.jVB`"X@19fqPDES73)HX^7D/Q6Q$3R-#e5%@0O7__PdgDiab!`O"a]V2o95b`ETOHN%jEA&U8DYMQs!mr%raaKLHNP,V8P'd1QXV'f%X?^-7jX?uYaZQ@Jrn0J$5Fiu5]XN/^lZ%m2B7TN&N9RKk,9?^hAHr[:Qd<#\-LBH6B0c+Y6+,/e!Xpe_auiKJq+V,E0D<)lM.8[*kl3`2QCc(("SE+>YpZ^;,>qp\bHS0?&n#%OXJfbq7='g(%iNXgPN2h5F-sZ2JN27;3j7mKlpENo#:!(7[9p\WeGkoO+jll>AI[C`VNfD<G@\u5UMF)04n_N01dFJEO<<?m^4>!%<6QtM%Ks*UHd^jlFU/Uo<`h?l7^`#@KS@K2E=3-t[_eJp(0^;*D'Z"]LQq-FMCStK-H?M'MG01C*,ul433>mXBR6dS(^)Mcb7sW7%Zac,oe2.4u0j6foCLi*OaXY<M.d?19OWgZ69H%d(JuC6)U;grW_b!Tn86,jQ2/E?-_jZ[gqWt,+?1;j\k6-XHMVsQLDhOqeJO)'5%>@2m&M]+W_^H[eeQlN1I3721[![H*[=RN/:!6eU+qEQ2X(;93G@_6!;0ER?<Km+H>K_W63nL_<U=O-:%,6hT;3mph?Es<$#a.sQ?%.>;>ZG!R8VD$W3iQT$UEJn9(tRi.UGX3J'Q`c`J(aWs^p@#214g*K"^)@i%\S2hN'UFEQdQ<8tZ!je3;S6U]T^`7jBlkBL.'3dK7%AJ%7UEBB$1%SnZoq0"$^PI':>+>1KV1Q(-DQkOlbA-)lA=I>Y/$;@O$R)\-E"%sO&!iERX*+36X_V$@.`q5/pV%2ZZ<$X0@l4DgB%XpQhe:'3^\j=2i<<a2p:=EKq9'WR&l9WV4s:$hf4m+F/%eJeb5C116#OKkK\b^_6[6UX'&i/rhd0XWJU"Y=mXO,.M^H8f#biagdm%/!LX"a0#lNe6eMPHc)@;Sb>-E@E:=+#)qAEaGMh)bJ[M")BBY(NaX@MF\bE5<Ct:O3uQ#CKm,gLX50n^,&GYN>(mS_2oqS8SZa<Y%C)9);7\:FJJPeoBR"n'QM5m7)5bW-j^st[cYiLds.-HX^0_ktu.ne[T!7)D:%0X42Kn-G#!J*IBjX+e3Z69RP820L@pGBJ`)!;j2%5#Qg>XL;kB.DTtU1+-mqqUD7ZWf,D/!Cm'Tl^^7J[O`"$;8'c`=<6kM$%^&o3P@Db*A&+te*n)aP+VARCCkF%bdo@Q:r2obm$`fd%!p5X&A?/B*I__]L@]:)>qS;lGQlcXg!J2na8L0iQ:OnL`NC]8(`,Pu.VQ0Aj6NM9'@i$Np-FPD+4#NLY7B7c6=NH"*.mX]JV(YNZ%Ar=LK2HDE[VN$.h-k3gbeBe1BQ>0&_0uchIp/n;T5_@OEFZkd?a_1AofWnBF`P=Ibe*Uti4X-1\KR^hl4W%^siN=B<."3Qu>)T7Z%jhP,0]cCi[)Hbpb%>c8V)+e3J+W]e@+9jbYYuFq$*Z3`@dOs(Rn7nmKP0YV&#d[iCrG;0"]GRZ>4=)CXQDY9VY%!N'2R!ThGS8#)%D9-Nt+2F`i!?/$F-A\]&o7;Xs.)tfY$G]3p)OTXYAnP!Q7\3Reje:p$?n?2BKgJmN'o48Nes?ce5"Ji9iP8ijER'bY8eeg,(bO^n%]7du<9HC;MrkWio^cJ]LDIi`4s)q8!eG^s0bs<JHs4X8<C-O1MQGN=@.56caFnQZF%$?ET^"@_J,3LqJ,Hr=@`ngg%8aL"r9L-C0%)h!o$ec6K)]VDcC"M-9!0F&ag9?cQq+eQ%g?=0$!p(9\BU/#IF&B4j+@:a)Z;EJH+MI]"5rEP4]9WV4SYU'ncN0>9QL,MJ[<0.5^%7O,K(Z!D4H#7F4ae8B1@8HD0]BT<m2;*S='?NE`gM6gl8QJ0E9Gg%^1)9i<eF3&Sm)C6+5KQ/IK;N%r[?p$NqKa5O6;&4DVNX92)%hSfsrS<Gab.1=K6MQh'e,q;ePX9<rh04KT`^j_B%okn65P0eC3R0-rI!+TGd4/4^6LIi^G^fohAO:opQ&hqLDYVRa[_B/1s#ci+q%,5>uLP#C8gKOSX.IkK6S[7W\,9Hn%u3.';gIDNM2AjPtqZ*Eg3,p7;R64><(cZ;]Ckhh<\9b_"0r_E7orHC<1:-IAj04X(bHn.S"%"dk[TSM=`inddi620!k+GE?3,Wl]9hbWil_<Zf,'2,J#d-T+^,.k(cV,A#P:aJ?%_f7HE+ppI?CD#I]05N"2<[O37587D%GQ%UTj%a?$P4f_BPMBO`"B(L:'&fI/(5Q_X[P;CrCtg-uZIfUg+JEfZ_;`$V'\XAC=A:N?OM'/`NB,n#\'fT6D2h$crr$ELs;Ok[hF&JCtP%G6BqWJ0]t.?OG#(.)G+['88+p;J4T%&C%Y^qk/8U-=nL1clk*KhudK.>J[VN&m?+o)!BKnG`B;bKF'.0G/4mYF[:--,aehPKU'o/%5JY?X1u_KbkpCQ:0PA`5;.Ws//%)]45]0t9!dFa0c6MOi-4W'?UahD1g.L6),Xs7lbU!iPAWB$+O.mk+`(KF@('f3>LZ(#*N&0M]%#SUZ6pK5AC6j^<2F-@4M]!$&iTJV,"K7S^c8QZPD%PWq<oId+!_G'/+]"fkt5nHT:Sp*Yk$(/-ekNg&]"m&25#S+L--"j%M9<hB)%QKX!09MFY:7.en!6*(5gV&]R=0nHH&Q2&W_/!\"GJd'a$h<K0l>,b4<4"EV./hINk/Z13m7JEN8#_#Uu:,terO=nZ'6TCJ++P;XX%?H0p:DL3$2&BY*NM'cW#4G9r;mLbV1$oM>Y]^QPanWFJXm*l$q034$W$*<%7[ru*FeBWDbSs.PQo$l$*?Hpt82?_%I'6[]f#UH=D%Y$S+hgmP"=Xn3uK<bQa&)'VbA#p<0$q0mmCTumWB_P&p^XAl,B,b$Mu@@Ac,(R17?>8?5R:8/'2V$n+!cg$aP;lUb?lD,!RR>C%L%/@FD"4,m3m8b[%#>!cl3&6;12G1WQ_9Bbf1e4T,#Rj@P[]O+Pm[Ju124PB.4PEHP4,\g?n``>gsP_,^M.F69\F0P<\Z\";FP@27"%+KW.b%Xs!G%Yf!IJ8mn?^_-84G&.h"R4,`S(^E@=p^gm\XNGrKj]t_U6L_<7k=RO-CKq>8A*,'/bIUXd[AdZQKTgq6Zt_l31*,,O%WNE_*XFs>;ql/;J=bqod=Vlc;?@tP"$aCUd)quTdN1Ceo2N,NEi$Uo)'9cT7a:0g^&#A4ClKtlj6!MH'oO^]gLu9FL<.ZgA-6l'm%.X)K5.W4b3#niD;j2h=#P3a/DoO*to`^"OG+)@+*cj<Z)_+19C$)'.%k&ij!kQSiIMj;d$9_\mQ$3Voa!X(SaX[#9o-B:8HnaD`i%%4nQ-"^0Q8/ucjbG=kBhZjEIT"l]l::nd+R'061#U!D9UI+BE/Fnl;A5/MiHB[[S-6:-/dY=<:,>d&g6rr'JJWVq#h9te$/#SSEt%**IE;@,!I^TcZI0n+IM7m!UON+m]:R@\^f+e's/.\a3kTXBI$fas7<o.E9.)-Tj\ANk.9((bgA_#i67o&nm-@S:b:@\`jh^Gn8+%%a-*R-$G80](FqQS.A9h_KE]qX/L:j"fX%73f9)-E:2L?lK21T@LR'uIWS4>YI9#7BPMmP9D=/Z@G!J7:R'73"WM-19l5\GMm5-h3%M)0-s:*m\/@TGfCNo8ZtBQ)&LB4WBr-p6LOH/X7gUN.[k;+&2eN08[oZ%%#J9M=T&.Ud//625Ki=YQNqFM<hiC8D+fre+ZG95%iY%?t,r:=,RiE#qZ0]TF-f*ApeMrTTFb>$,Nm?-]f1E:b"f=&#@a7'bdE5CS;6k7Lb/uapNhhS;J=\'O[np0,caT'"ZsI;1esO-?U6i%kG%[gNc,/<)A[&aLk*V]58mAF\]dY/`ZuCpoC[!8!2D=\6O_Mh2C]&:KJsZuQ,m?ObJ=K#4m6Z.)jkRWBF.AL560h7%u+5+"jlL#%)F?ijLCl$o<X'3kVT\Vo-cV**$!kUYA!U%2<]:3gq3HIC@"a^2Jf78h:.YatIL;jiMQkRY(c<Wd^p5jsI;X$j[W8=1k(T&HG'D<]%#m^Rn<rit0!pYkHXC?,R>n2e3X"N#b4tn]h4)#DA&e[8(NZ!X]o\Zo.N>7:Oe=+:Vn.';D_[r&n!'`]+7=oq?Wiue09HNd;:iK?'%)"f6p&"#j#od<Vr!D5ln1jMPiiQMN.-@CKlZbjY=.Vstb6mX+#L.-o5W-2$9_QlL3V?TR"<S/DYd:1?S+^r<jBYnAZKN&fq"3,,'%KHa#Y(:OrEFi8qsgV7&q7RI+i+LSf"f4JS>oV8-Kf4"<W1(p$UL)'*59LdO1#%G5*b,!R\*MQ*UKH[RPQ-Y*d<*`(4#r")6;6X'0%?;X0Y(F[-1&R3cl.n6b][%U4sLXL"h+KpQ05\;9`b8]PnX9lLU&Ab<g'#pqD$$t2P[A;r`?pRT"+02,rb#`3H>3a1Z,uNK!`?fsU%Wc6hMfWIn=5dd?oBfo$F@5I.V-nlg<;s1(iAGRk>8Rj#"gR4_dM'I]86k_I!&#tT8B:B-%j"lN=9_69CQn]hZM]TaF&c1ifW<L9Z%N*`T[*72i>6-)<AKTXV!#`pC-$B[mm[>/e<^i>0u%0VV-$'5a6>=%HU(91(@@*pYQTsH<^6\/qTdH#DB:fBCM6*J'qYsJ=L:#09\%-4O&#)!^CL+&!DOOMXR+0JQX!/FX]$mjI8_LaajJHU%#aJf2<J-nV.mgn<eE#]k#,+sD`h5DA<_OA.OUJ8s;LT8auCHXL%0$&kkK%OK_.TlOaPJ`RH#`@hs0(Z]seWF46?YD$t"$/(;];q7"SAm1_6h!h#ATM5\fc\.PeLqph7%QdG2Q<6`sZQ%i5SoXleN"m:TI@Ag&d%@nU!^mF3nDj29R^4'0Q/J-e$*gYbZJ<JVV0$m=$(]PLV3>VP:dF:'%kRb-k;6'IS#cjM,q+Ig?2Y9YiU1ms]W`T1Np6A(:G(Jm*4%b_.TrL]D\iDX_*H2J$Je-Wc4pX4Yo:@9PuFNtF?a>894\L5H9hU"Ki&'D*L=X-=bu=:(N65`jU_F]CaOGFHaS5nJc`>8?:T`oqt.%.q-B%.)KS^TQF"D#p#m3M$o88lPGr3$f;O^D6(D2r*5E5<>0PCdLs.[0P[]_hht*<S&]NR8tbSL;Zu+/@$i*B08d!Y"iC+09B^1Q%U]f=Lm:&083-ll_<753,fdo@iehmd<R6M(m;/CrRQN6]Q;+B%F3ZA=sMqZ!0am,si-c2&:H!&au*FrJC[f]GhaI9?V8u(s/GmRcR%$9U9Sgb^mJ8jVSc^q@rRm_5-jo;2Zt?jN$m9X#:p,`+Sq,c$+=SkmL/mZffr*_]2i6k"kVCoKb;.m3l4JjFgCWo-23PE9PNiKJ;N%HZ98pM5\6+5=F`Y'D!-7(75[sfL.2]#<DA^A$h&j7.$Z2_'Y2Y87>g+$jKXKQbn=bK]5;Vjq4In1b]_7%Al/H$eg>so9rs96:"J$%/R4a-ne+![!ZHln_#[3cO00O46D!R!nEHZS@N9b8+cWi=(ajZba!sr8J]S%;?\-?620%c^c'=[CN=&8@lj%Bq["a&IA0mf@)AI=G%bY74/3\X4?hCmUZe$NXtTMA<We`Q/Z8VmbEVF@2OfW&)m[9u<pka#_MR]RKUW#2ELqW49GAuesl%"^#d'=u[MWX"HK%B4me'G#6H%ZW#:#?"#VCRFg*t4e_7Ie./bsCqCY*=%lA>pRi*iPRd7;4%C9<?=rAC\f?EU$>HAs&7s-F=bJOrd=P*)UJ?oM$(Vln*We[!27;9D%=EZ/EX'EkLr3kJ:8"h&hB02NM[:YXT"#U3;.\0S:<m(K.5YOn&gt'PeedD:\QD8[YfYP2B=pinr!UukT?<1nM'XL5fTQZ\V'0;tA%1-s<>ZgEmg1(sj_N77mf7L;3le4(H$TdB>eXU;9u8kS=(.u8c1^HO4170#:P2,Lp4+Q:Q?c@4,:NA?p<'$IP#'"U)ZiXZH='pY!0%l-l`Pg>2m!bolWK3Ys_B,c/Jk;6k$\T14O-)72"'"IYD!YLZ\?dr&0<8E]QRqB9Uj\4NJr6_C&=JRHj#Fk+_S4M"u,`u;nt@\%\S%Q1X+$mBERr&eYa%:m(lp#)i#()3:LXV`MHTE>/j/(J!^fK\=`\+oEdR6+*I/Dc-php"`IfkSBa[0$6]J_M5!#Zmn_Lf0U=0I=#+S%&j[#X^b!k)2G++))8pK^e3HHT-ttI?9Ge),#VVA[W1EU3)F5&7+T>4_aJ#'JU*rLql(.*)h-c178-fNmiIS:#?gJC5P4T`u<#&er%<D(+:Tb^)i?\^'V@DKfLm9bqJ3A^7r9W5;rf@nA=kXL9EF&d`HjshaP)c<L[C-V:Ie#>Djc]Ag.1JBE07;'*`JLDK0b.=)Z#!<K/%DcA#e:lXJS4EAh!`SUSF?L5(Ki>/9hoa;a^K1nsPqZ%poWj8\U><r-CK%2Ce.KlY+L;-P.(t>dm40jNSV9V0s],f6GN!WX\D0plQ%FG4g5^(T]89c;aWU@c</]q]C_Z>L4=-l\C!CD0Yn.U/Tf/;d=dH^>e]KTZg^U(F_c/rV!\.#"pMBM+MMm):Pk$%p<IUWI57%5Oii%PLM!"'\6Ts+j^BcP[fpI-l_6LgY!;fZ%28m"0)QnY:sEp\ot(WNBsiS-9BA.L281CWhbh998mf&`3NOVDM><F;SqWfZ_s$[=;WaP%laPF=.nWn\+K!O;0I88l6VsSAFr7nj)%57K(U[Nf(/['Tl`A2:!OFY<UGE3MBaaNk"(U2%[kN=]D.-aM^h3ID1[i,T\Q<!s&]KF)%-JQB@Asg'Z(-""FgiXP:)#)ABlsX:aH$aC<!E7jlXMo`*iU,/Y),X,lF\h;R"fC)/]#+QZ>$[l^!LRNVhJD?W;J,;I=b%g[^o===%PaSu3"BCssA_,/l+.,XMi=I.;N8,b&m=fliX>4Qk@KL#16g)ktMfD;?!trmG'?\+Xqpnm[&[d9\eU!!RB72GoJI,t_.0EtoKXesR%Zd>c`@%=-#@)?&[$7AS7mFW"LcGG*o2nee:RC(=L@`OL2,qX5#R'AfOWSdql\>)n#)$k#Y"k6seR![Yn`(F5NYb^Q6*p$L,$NjGP%En6C3dHbF($"&'^"f\dC]#Bi>M-drq;IqG%CG.PD<`ClJ_UQ8Jg#cngcHA:Ng-W7XE]%F?m?312gZ`ZbC<C]]%ATWKeI@osCSB5^%#'&(Pm'h2d<XQMSd$O2pIUGKHkQD1Jai%'%'O`Tci^f^!l1p/+6)QcWMD?D8mNnIP]C_6ueUq1V'_-&@$"oqFW^d$@$X\!N9.EnR%9T=R/E#Y)B]mrUE+h&.(1#XZ?9*/4o]!0)*ZS5i.+m9XKC'n`GFN+k$:hA9fb$#W9=-[3LKd@j2m"f@k]`BW`'@)uGXG-'eS/SXW%k'TcobZ@Lu&"\uJ]*0NnCd/f9YV19l1oG1)HH_<75:ckCBa\d[BHDSTPdJf>1(`,:(g!JClA%6TK`3e2\0D=dKs]5#J-jJ,X]rbt%8m7U+'^>q(\_81nU<rTXap1Z7_k&/J3"'S=Roh2VRKP<:q!5=J)N5QYXJt\C9(;1Y$jm>78qSZ]6(uJsbVI=(*3c6'KhgKuUehb6%PDeYD=4su]I\M:Ql*V`OEYq1tap0G@Y=`JlPd/SF[EWb?h,-BRN*g$prN6Y$cAe-DWGS4s9^&l/`f6R:j[3.T@5LVR;j^NkG*oDC%X?fM)!\icV0<gkNcsb/!+'u-Mc9fE"3^(Nn`0@UTL;dnQa9#;c_LP'ja4[[q,qTNB\"`7:(DVThCF:#WS#UU6TS1\f@7=>$#[LiS%&!TgS1$d??7;GVo/.>X;C2h`uJ:<_L=_O9.7>63;a!`C\>4C&bU"=IWdFu`EBUdRfUZZN5>?g>!%<@_=gS=m##[J?+3Eg?%/Z:u?%-%s.;m@dX)@$Oim+IprdW0.Tl>!Q9+gC$HN^"RekM5%lHb7YJo676uZp3TqM_H,l22Mqk%j@:aL>@GIg9Pl6Z*KIF[//fd'l2V,j%@=XLF8#t'(nR0`)BSVG$g1+;1]thQS*AQgQ[D8dDlnG9?\$sgMcQf5RKa)7`k7KJdg$=A%V(,m[.=6KY@T@pLCo,9R(pI8qh`Ue7%m5@VY<;ea/VHiBO"6SX\njM`8:_a29)Q<85#0/?o@J/eU<+qA:%N;cRWB>k8F*S\[C@qG0"7m3<\N=C(#tpuLqF-@<?::HPY\9E.%_o+ZSdKRlf;d:H]Qm);29LoL8-FRV9jA7\sX++J2UUFka+ItEt>@:Y/eH@L^"t.sZ4]Vl9<E>lWQPhT?^nda^L^?eLa3aWBO4FG+%#ubh:bZEoX@:9aZ"dZ1Zl`ceWcsaekm4kNoo`;?upN;j$'a@@DHjpp:,$eU0X[$(geW#Hi9SELWmCU0hE\b:lJIIb).oB`j;HP-c%;s9O$p=Wb[dQX@3AjLa'/2607FNZRa#&;&?VpKTQB_H.oU:0j^G?!(XZm-n\^:G>Bb/%haG$$/)0ZHs`-u?R<&sbj3.8W\$m:b4K%Q8"@\gss-b,:4sq-F6roq`I-\;<S-*qYHF&U9sS'X$*(:C$N&ufE-+os)j^49YDp\;)[W-EY'qmiNp<leUKAUPYTtI$<.\MOHpa8%*\FT7WU6>igr`E*Q9p@<2qAB<P84KGL;l\?"4CU6:SG\E3#sa8.1B=[6(/;4*a`bdco`bs1":ft60$`5Zb@t6a8IX&=[V:YNRDp9%FSQi[jPso(U7<pXE<Z0lq0BoCW%]l%?Q23?OO=hh8BA0o(-qD_E:jDdV_Po>i^'o.8`/\CZaHr(pFL%a]t+jdWX?-$Ip\[/O-js%%Rlp5Kl19]KYL9bpKWEHf(5`EN3ZSYBVSW=Q_n'/"U6I>bI!`%KjTd=b;5"Z838nLJ\"gioW\@mkT8o:8'fp>q[NfJn9<@?dc;<#6%Zm-o&Kb8AY/0Sk#4()7e2.AH#fjWR9>W,LqAut]R*jM-6csbYgCVZ1?5%(Y\^^a;G_LRnS#M)2dQ)cTHeh8C&=3CAiKrP=>7?B$&%@DMH@>ZA7s'frEQ41263,)'eWUg/Tpo%jfnBjaP5(bfhK[D;(EX#gh$;^XGI3_ZL["(o_aOeZ[<%J?BEAfJ-D6<!)98!nt,4^^`n%$6plEC+$:5f-X"o`5G%a1$S2XKHc9XWs@0@.5%eRB!;VoG3^1m>P2><egM`D]!K;%eUJSTm0])XqWfhD..gVYpH2n3QVf]8?I18:%T7eY!IDFjDrYi4U,6/AZ[DtP694j$KWrM5Uo1Gfa@$Q_u@DS7pl]dA_?uh:ELm>1](:8G^Bo1Ns6`<a*\ilqpU/ZdeMK)i!:72CD%Opdh+>-V1t#QqMET;!kcW=GPeIr+da*>X8CCNil19-d"d\C;Yp<rLVm3PTK_Cp"B>](;-Ve42&hp"*Wo9P'(BWrB"0!f*bb;:gGU%<%50p2H+9Nb`AbF):hERD,@7GfGhb7+@`;/h,ba[SYd4PTsf1e0d4mrYWRUc-ANt-R*Z@5N.gs#>YM$hAVlg;V'W"P]`u\N\+88g%"p2YO5-Fg,VBF*M;9O("[(4e=8H[ZYo;e3lU"=f@5M7?Ke&n-o?\XsP6+)Y-$Z<"$IK;H/Hk#%ln.COXm57Fpmd&FH$<CCQD,:qT%UgfXW[!*QG=&7DKHR.29c6F+<%ng^s9foH/3,7naq`D9(N>b*h!2R0s!:f"W,:'XK::-\^H!1J'PRRC.QWV@Yn_9_m&k:*b1^ZT,%e1f`10g9\oJI1dQ`3Q^BW)RNYN.Eo(lk0ug5nii<)([3f+CQ9!OP$?2U^b"`BGi]s\_n[.)>+]L&TVJ?AYSm@*fqf:],jT"/SK[!%R,4Lie9QR<N!mQu/!0MY/g)l9#=s.)h)O#@c953m0friVeo_G.<Rl;\(nr6%&_%CkVEq]hMKF5P@*1<>)!V6fED(-9O3h;fN7fVL%-Fih4+7q<T68KIOZIk0s82(7_JF$f9ru/:qI\Esmp90384%q\[NL1K'%@D8,lJrds!Ge(0_bA<_G*oDsY/>Y3@!5ZA$XXtjJi/>:%@C`DM%P+dm7R='1S-Q!i.iT[%kQ$</[VJ^@MQT7^LE3%n\-U<g0r'RL5]>ujiY^,M8Istr.P"TFgk#al`ES$c/81-8LbM(MXe7tO%>?;<]9Ia^PWe$L^1.!3#bSWt:I9C#8WM%.tn_#V\K.pcZph\U,.d4+IHu!'4OcMdFT[_Yd%C=Lj,Rm75Cd,#*_kJ*fgSb?N2CtM1%`XEZ`!Q.5VeCMkHj=7@95sfu?+R+^6Ml+%)o75*0f,6*>eCR[\jQHd0Wf$*riP(>>G&AA+PgU0X7R8E-;%4?YSiogXA4FCk=hdf1%W!:Hl0!Sg%b&=\#f7;s3YP_F'"[-JIqAcaT=of*C>_Qcn6&0/if`@Rf"WaIO>TG/HPqO8^iYo)]aqF:uXSc+Ek&#inD;IBa3@nc$%]>\.MUqRGIZ^o[OR8hOAd_C(GdNYE=_S<ZBFUM`X"S3,oQ1s!"G-NoGD;@<>1[2;5ENqAu#ZuMo"ppur'+h)FoW]r%TbNHQX!+q^%dnX0N(<s^o5WN4S7.j@d=;F((CB(qL6=PIgOqaaBf%VLZONT'MRhcJq$NIbEq5$mpH7[V#XT?mG>m"]p6M@/oYi[Ju/6(0O@<%^B%bdDH^Lm9u7=YWm?/0$sG!b<+hLg1lXO-m.X7k?:c?d>-Tq.Wu+d2jg'>WuP=WW$jG@*!eRq;k/4G+`r4c1Yh+jffk$U*-Zk_F5jY%F>bd,Bn%gGhS^]sdgA-p3rpn:R9%[C,qo$:./p8!&3A$)Q^6:J/'s96ikK5i2J?\;1h\d;)`3`c.V*<bfcH;?>m'/fL"[Xkj793P%l#[A,$[%Fi^bUl^(Nk7GiPCbh?h8dSiH<*:XSNhNQAdlSr40K2N1!a2A$on>L^E*a`8"nP'(^Pa!A.W;dh1WhU_fEjC`Y=6Afe2'%8-KHcK+LLg-5CW)Qr]lJ<R>10iFIMa]Rh#ZEh;(gRs>/Xk'W"YCuuIS=BpSgE)p?rDM]+7(mNN`"W\r?=l"+OSa>nKnl6&U."pQp%/O6T9jh:6K9V^=F._lC&kp88T[]7(Hq-*=9TZV@nM"&Lk.*nosb)>&"XtquFCE>1q="]u!XrSi:8<6lCF^N$uVJCs$\)nQ$3$6M-%@MG1`#t@V65Su67&r]r6C#ufj-5a"XVT!IJD9XqG-9/KQAi;r1q:_ZC[1KR(h%C@$FMsJmJqT<$aXj,T-`BhK[3f\)k13d#[a9H<%@cc*^=BaoP?o+L(`bNub&[Tr,G$R0s]#/pWe9+m#b?8mYGoa/!VT&:U-,#>kdR49$<ZtiC?\cUHFCp<)WW>1T=Kak'Ad_U^,S2s<%@=VrV6%`D[=rma6kl_HQBb4<qAhlZ)b2AX7'_>%OA-+SlV@Au>":^gedK[rIJd1>Y07Ps&#V)(-:"g_`&2Y769FJ*0/=99p16u!j%3YTUs/2*5o_SLb\9I2CQQhS[mUU:+jRP^(mYR!]L/T`$f@ChJd2WX/-d^\?YAf!K==JHHb/1d#,0KhLD^r.K=0g.V0@ArQ$_oXfe%9F5S;3BtHD!;SIU/HA5O7(=]5#gJ>=.YRN>DLi(K@"9$T-m1_qOpNO36`p`W2WF!F0h4=H.XPQR9J,[GO>c(_Tt0ru6/$p+J<oI1%-NVfjA;?GH\jJ&VbtiMM2J!p`\'Sr'm`@S!1Ujd0dSehnCp0#bAutZ9mNB,LcN/*n[VM87>=U4seXc5V;"TR/V7OQYJB>;I2A6?W%bi[IAUlW?JacQfQ[U]pLj)]nj=CVnA%#pZr=^m@VcnKC(1EIKjTYkAW[)6Jk6&1^o6meUPch\r`%:]WZjq2];n9,,WSAPt4<T/(&%0$Dp:A*2n>k/JV60P?`YL8'gLI]Rsc#AA)]+!>"$G#2lmnckM9g-a\&Xmp(d?`6,>6=nG"BXUALPXf_MMENc*%Y.4i>R*MMH([Ip%.0g<Nf`M\@@9WYLAe-_SO,<9Je$oJh+sS6aTU@ge+CCENc*W$+c/rYk8gX+/#T];QM<0s$(4c!bq(lCT:,ZcD3uaD^n-^ZAE=PjQ%=&Y=uWf<?l`5]b9c>Anp./9;Kd*,m7ODr,CBQ4H&6>`;3[ABEU0)(GX0eAuo[>Dg#;I83D0/OZ/qQ%ij$I-8MHcZ'20ZH,&AlQdK%dgI[-`G&;kW7,h8/Kc2DF:c#7kI?&.3snD!B)+M3$4Ka5]P+C+[@.*4nU<3Q_@YgRAdmPt1Oe:@&10Mj&bBlK3<BS&+WsXDB1BWV%R!.%!Yd.5D.+2<2j+,gZ>!nS3+u]hP0@^u@o\B"CC5_0c.gq-WedfkJAuC?hLRL??qV.DThI1C='&Mo0Q).MK;4_.iU,_'a076Vr%jgde_!=/NsIcZ"d@gnWK1KgAZg"M]uc=DJD6^-Vc)1tPpKgg\^]pr,P3YM]YCrQ*9;-p(-F;UGE_qoLDOTl^\>Fl:m8HTD/j50]O%'n!kp*5rUaoVQ>JZTRMfSFs?fG:;,PEI!g$UZb4e?KK<e8D5X+cqG]u:gU(^Pidr6<^7#s.j1<Os1nG"?u=7a+_X\UrbU`"2J>!2%.hqXBk5hjrI><]m`<V,e*GA7h9`l*n-+CON*a6p`\0MOa11dh%:nHhcZ\-iO/hS8\R5I5Y`4UWCjMp.Oc-gEiac"hDc-C.Pgb,Wn%dd;1-;HVe(Bk="mDu?'ZRX?s5qU&hnF"cVr$?e6S?1"HC,InS&1oMsI*NJZ#BVr>GZn]="4*GE,f%RsP>N]>*](ft9eY?bQn%JMB%qI]qVYWt><R&uhgmlauAEpd[F^\[$eZPTgrcTcdToYJ`Dn"2a-]"UIs*[*Pes6o1Jep"<(4F6kEqN:C4cY[U8IWG&5X*_@W>f^do%bk=!PoB)f4rd6".)d!\j^%hHAJ(JJpqn2T5cTcdLlIci]qBZ$K<n<<O?,-?ug2$YZHij[EDLE13]>8)SW)K)`M>iY:GPg1L[/SZ<%)Ys<W\mPJPc%9k'6bDbp/mA^OB0k;r_fac[K*bD!SVDJps5n_NFDoF*rt!uo_0_4_LF"GRGL)F'p?7'aeS_p51g)c/]<k$M3%?ds%6DA"L\+s&?Tc/u`Y>RPmdHr%'8<;!(iGQ4BS`kKa[uXp7=Yr]/ZsiGl55ofg[C4]d9oE`FQcFTbs0K^PnR*s6=MJ:D*B=.LN!lJp%CB<tL9fbBu4lP>TSL+I&l?"#Yqt12>+%,A]l*I;R`l'\eWG2=nq^j7':2A9bOgM$Afa'b>ABfWf#1f*Xi>S,#oK=iR_d1oCU0C@O%'ZfYdp5WX_2p;eO'[a;j&+g_\+UFs@S/hm<c=!gNB-`lbNnNpW9u_]?KK]d(O'^aSW_D!mi:'\(]J-CEes6F4Ri)_eDtS*$V4Arc%clK"Dj'547>YVTddD1HbK=OIFWTVr"RD=8PP(ub%>25hN#d%L+0Et!'I4cE=P,?(KVj8#1VE2#fMfS4EAFOUd(P>a$W`iioi@6H;%Tk2-^oM&)1a_f',+1Gp6ER-If,Hq&fn\iQ?RD$eqqH0'3l=:I;3ZT=08t)D1X9JiBY5(m/)L6;2".>^,?V*6@.d8.^LgWDT1!#&d%NiNIC''E,E%,#*KSu4E=d>nA5H(kO\b?KPZk4kHjmRi2.>tZ;oM!MPU#V_J^PO`aq/XSPL1V%4jnIqbphX\?DU8>5a%A56CnR#Km%B)UM+>t^$eg4UnM1t)VXLmGY7TQrRBNaU*Mcp>J;`1IkQRDp!-$hFm`lU4(s@7$YFSobeb!qSI9*`hWH3`jfu!c1Q-+kpdQZMB`r%X8!B;(V2]Q8:B>Q/R<23a\B!Xp`KSPQ4*pn!jLUa0`D,dH+E^t$;H">TGO`C6G"_R/8P!ZJ$4pek,j7j7BndS.-p)C$o[1b/qV&]%:+jM9IgNPk6Z<iga1Eg_/0p"$`m\o'P8&4Mg(g*7aC1gVTLVFATc[[?g7Z-M4id_MjHDIN!$Pe8\ZiUi^/.M`SEW[#bA"iElh5T%%")eKl"':I!'Grhe>lg!ej9>Fg!A6LiO!ZQ(HhSj?n9[@]g1S,Y=rV"]c6o[9+WfE]*`',jrYcO\#fqSW:-PY]a<VJp,#0CNn"?V:%`&"RF7b827!PTb\PEr@"liR>##H2DkZgjl8,:[kFHn5J![eXq\Z-U$F3d#>bH]Khd%E\:`=hia=":N;nZ$nKPII.D/K:FkT>RBsW%joOiT,&L]beq+AJ]ZuJ,o[k'Gm$Y9`]Fo>'-=tTmom!TEa2RW)<Ogj:kWrh:'?R/k.BKT=p$SfXMK/BkI$hM$%bge5p]!s?r6FuL%_^L]*[_k'Wf"9l[Cn81QbkDYJcR[F_e,%W30-3<ip%6'VdUN-`HVY\hIJVm\s,k'GpZgFis4"fU>heLC(CR$UVY@<4CseD_#S%Pe%5$;qr%kagmp6%5Q3#OMWLTV47joaVNa;d;23`$h#A0Ti%#g1=^?j?hG5o83\F3G7gmJ`0u]$&I<J.M59DMErp>d*id.l>//\(^dM%HETk3[jZDY@!f+6s4<5!]6;R3,C&_G%V*$$6iK7COP/A0qOmgXP3PFpH9RRt*sX&!1Xn^>Js?4e*JBLUN)J/%0qlgLWlG5%,b;id%1N5NdFG]OC[t;883%*;K\QO`cn.@VGUcL4Z&9BXTql#'nKL\ktmas:)NqW%O5&UC1FZqui?^A':TsmOR9-Rb'EZWV'(\D6k]rraS%^e&(/O]L:3E;4F"/*0\>IulMF,fpM*+HclGji2NTJPEAs\,!EO9+LSa6*(NUlVn[&Q;_JY?mi6hq;i8;T@&>33e![o93f3]a0V"r%P<nCBe+*Hn0=t$;$bi_(%[El0R"n308V_lS%#2F6=XAe2.`_3kHFuA,>L!LK5DU$[Yg6G![,ub2)5p?c?CN*kQ4U6lDr]rLFl+5u%,Hq[NQ"I,2G.lAia)/#ne@irKl^g#0-WcN"(kogTJfTLaO->UN-Y?_+SP@*(P&r7&F0mZS_98?oYTqN(J377hhNX,Z7QEY7@ijfM%_'g)0SfmZfm,/Msa6_p-j;bf%H?q#p(0qo"1EhOJ,6ujUGbDM-=M32)ZPAg*+]<_C)'>nUkJf7uj9m>69i?WHL7#9P^K<ER/G"lh%3o0uOl8X#?aM^i"-I@u6+')W`/1ui-84f&eoJjh,Mh^UdM//I9n4U""XMc8/mMOmFj3>rP%@(<,+sk9dn`<u'4=b,+)'[Rse+%E1%,pQrDliU!l+@DHJFX!5QR]1]\i/.Z9O[]d0PgI,EYu9X0H,1X$)((DT/i_7g#p6J=OM?I</9qmSU>U`P*8h_]fSqdB0J)`eXt^Lj%Pa<PnU:HX&/Lj#lo;IDOi$Y\?f#P(^<bDLP\CLEM37ecQPCTA2@h"F;,cFs9UeX88hH(&EO6VC?k"bMD31%Xd6r@8ulu3>0#^-mu%$hkZkYe8cdN$_-4=WYtB.R#NM[Rl'<T'PnALi"F0Qt=:M!3U*)_@9LG&7-DUD"Y2"QF4(\)j5eWcH!u:Q<$^+ZC3/%RC(CpH='6'%Q3<e;lQ%WYUg>k#V-$N%"?4nBQ9nbc<&RGo_qj@7G#N,gN_f)Y<F/FSk%!,)j3.A=*#""Uaa>T9p=_>:WjKj]p5ut>/RRi(=\ChZ%9<7[Ss%F%8eZfs)Y-""s9#GVZ[uhpUVe&.9nsiD6,K"fL'\R)Jf,>(CHrY$jh<rc(IGX\1FSGGgpGd7n1=&[V/fRT4b\:!$F:&-Y%dGq/J50S[1CE'M&c8J!Eo-H*\&/T/,Bo"q\T0Hh"5+G;a"+%:&rM(([?L-H\^1r,[HCs;SD6Mc&_anesQ/h;2&ohTPXmMLX,kmh4%oKg+m:<o:?a^$5alulC[16HaXL?S6;3M2*[2#&>6D,NV(Bc(G&m6*&lV(>J_J1qm6J??d`A4FWV7C++9hmTT4h#i5VG,H4WceGVE%9(>>+BrAmBL@.st]@295A7+Z2Q<^9JSoQNd:eB\-ph.u0%69l-8e\M8qrH!`morA1i"H72_;o"*jnn&a:5@n>&n)(f+.;TY7GqQ(%RN@AF:7/SB6d.Y?DX]Q=;j[,pi8m./ZY8;'DBCLk(.>r'lU9$^bA'`/_+j,S_TtT1ZdlP]!$UMG7M+eK(bUEcEPFOH:Zg[`YTZh9%5XWaVbDRssbs(hr]0rZaKcNpi2QRNCqLLE"P0YnUYb\VPg>mek]Z<Y]p<[:(Ed!pZMb>]H'"J(/jt#Y8b\Y#:H#+6*DMo+SC!_A7%>DBHt=S`mD`msh[3-=-iZU*LZoC4Q(=!5<`&m!3p%A'onQ?uMlcf((Rh!BG@@G9CC$/f2-^:SPD'e>.-AIEi)6f^P8FI7H_'#Ic`%T"@IX_U9#_`&k]5,X-IkU9Pa8WrV14j;tWA,u"cj/5(UObH8:[(gP'9BmB/O+3R8[SI@i/R#[5K.?TXZZI(@?k,!a$;.;W<8nZ8Z%0;X1/8CiV*Q:55U0>*4778@q]EY'i7)U&4Pa>qE%LKJ@k@+2r4j*5f4=FaP;s-!!"4N8giSC<)`'Oq"mI2H;,JZjuS;eXD+='t6&%=\5Z860JfbnZf6me[bf9*,0lK9&&\W3fY.n&-[Ip]\5Lo\-%Wtm^reU5G-g:!L.X>MhQMqH)*.AluQCfM,tK,a,R,8$E@NSSHCrP%//6BZiOT'm*]ooAkPRaC""USJnLUK,WX>&Unc+EW#?=\(f6:c)I=0IQNmD3g#*C@Y8:coMi))b-gPiqTYu7sYY!S*%nFk9L2*df-%_43YpTPT__k'P(o,lm"4/F3X'TLYPL@)Epr%V!O\A6TIUMbquP'mD*^Ln*oj,P??Wh2J%S.8"+44/%ZRM8Ju!MMP[oDq2"Z^S]k%%jnn!-h3tC2G#-e1X-='LJX*oJ<qmRT+>:lmGHqs!d?QIp]ep4HHk;&A,mq31eNSciRI<I8E(7:f!dC>O#a>n$SG>>XWDD8TCDa?/%=BKkkcf@r,^[ndDKUu3$BZAb1fDDXu)q(HB$3:ku[$(SQSjE05D@OkP'61m7Dl?M7Tj@K'DnZ`(2hhj1&CsXU..BP"e9aA@k$<2`%$b&(Q^`:o2W1"Kj?3ijn[tB1"bW`PM\.aXOK#]UVg$mg]*6Jb//K^i1\?cdrDpbUC!O6[02m]X7KO>#!("g+6koP/`#0nL+A70.H%QC1q750<rB$'#Q[pdT/$KdR)JlYuZ+HWEeO:c:Cp1!nHJI\XJW.Zs[kJciXf`!e=3YR5&=cnlB\bD_"m(i"iCiQ>-/1<p9E'\+Op%4K(5j-58*r:@[9HXJp&c!k2p7mmT%_XoepT,f\uYASgPtGtC';Y.iG9SIrNX&UXO@o"Sgjh\B/F@0d1p@1`1T#55Z:1;7TI^ObF4%8`"]`8fB=&@*p;\)@d`^BP1fEiL@&_CbJr=RM_NCEr<lriPD3K-s\T>i%Vgq'1BEPE\DC&AO;8,o-:>]Lo?!$*sN3lEHa0n1BgSc%N78nmATLE>p^(+@EI3bRU;Ls]@&21B!JuW0Ko;$:8uE`ZF^4DP)+,Jfgl.^lUEDCe/:$orp0mQf,J.qAIfPsfLC#tcGGcm8Mp_Q2%YL>(5]6E/[W?,XDL3HFV)NJK!M)P5Pc,1*cgp?GddJ=<r-a\4nS7.7f7>Qm'0Ugk&Nl7RQ:3V8J,]ng\M0'eU!/3ubdBjPp%JI7$%(ZN@j3FX@KlhN@Z&>bJD7f8_a]_.'rKP5VQ5=?19Po&/p$:59T>i9dRJ/,FP%0u@i1_FY/6LXS2D$bp#Wq'k#`IDn?$[^l"[0##9%)%R3+6q2tR"r'fM+q$T=g-Nb7O%kS>Y7Su*[0(R_g="4_RfK\-d"Yr<dL%?6QjHB_k7\WAZk@IA0"9h5&6e)!?!P>0iUa0B_T\?X%Y',3*f%hgtkr[_]U3&Y(IAutF!9j)&h?Uli9.+CUP8D%s):6-$bYAWWaj<pAU6'31+P>cU2W;BJVr%=.1]HjM%sAde6?a9qd6J!-%4UhPkTacZ<'GBq%j[d+;MlX7936mh8F>J[MLGMl>)oHWke[tr"[$'A+j)Hg@*_1#k_14=fi@oSJrLKX5q,CXs_:C\2?>EV2S2i's%=3e9AHV@V2h;c:<2^Fqq?L#:49!m=rgOf_.?Sf^jg1*4(+e^uVi]bPBdYHXg?**[H@d`R^Zi5#Js)hLp_"JG6\qE&fKZTu<7Yb<?%iWO!:T.Ut?ed-VmKT5R9+rUmM>\fBI[?`94*A-5_\N,[6A*XCj.\Nt-a_4L+OiQXSmj$:P@[;iRS=k%f*CLl)`EC,gKk#]nJ-c^9%A,$)E3E&btUpL5/6ahP"Q+9r[0k5Ic0KEk>"XqLO;)%XaDBSrj7neX4;onf<H)H)0oZ?Tt)gr"XCkm99\t"Vd`q80KD)rtBp5p8F%rJ_<O-m_8U5Bf#<!M9+cFH840rP"5;*%qDC-r/?Qam.-W"fDYs\C09cfm$:t7"Tk*8PFML)s=cQJj\gJ;6G5\MfLI?P%Np6c."C1%-ue/j]MTV^kH#<l#sc;!6f=6bI_3>j>5PVqEF=#L+(,iN1`&EDZgh'(s#o4NAJOk]qdU1d(\\\tYj6e@POD$aq\=qrd'C.`<0?+b%'>["McsqXBb$8=_.dGn]/rO-HKr7QPNo1O#?CqfDi>;\BLb1$0<!Zug44u>(\ZZRDcVj%tn/iO3^-[A]P7-r)quaq!DL>YWn4JX2%9/L&33/i2l'jpFLeNJlM@h_:k<Q6l6$k2<?!TO1oN+p_!KmGh`Y@krQqI'PukCGX`?`$qGnp9(s&X_&<<+$gR.YcFmpYH7S64hEN%9p;[rNqNNd@T8-oO(&A`-AnM;1,*V#X;Hsni\"WXf10eXDs7\m]OFP@"dX-nL13uSN*0AW_$?S7951EPd'c_Q%Y5D>TsH2Pk\RDh%'8Ur%$:SjkPGJ=NYoMit]T)T^HjV_b5.sWE(Zk=SG/ouWQQ^168(?]IY@gBV.`SBcZC_i.qMZOKeOjq+b.,ldHXWar)PrB.@^X]?%iR88RRd.g\H?Y+REMd2bP.P^X=N-0H7W-TAJoSDL@*Zf=5;)C+`[=q>-B6cCZn#4Z,l'%@8-I,UMn@#L6cD0kZ7)".MP74/0RfBu%8F6E;OG%#skD<!IXoOoq"6#Gh'T4Crk)=15mF3V7V_&XiPIqmiabi["&_==,!Q(!7?^FP%&r^UI\X/D][ki>1[!@DQ+OMo$E./Jg%W!I4rZ[<V$j+GBnXGDkq_=F!?MFHo>1g-B!*#=s='cP^$#f_YV".T%AQ]iB!AQkJdrQ(h%heG4l`Y*L,no>GL?l4?L#DDq^]O\N&%S!bAA8&HKD:s+/gAf9X)=1)F0MW^"Of%29?3u]/%O7Qiq6U+g`Cb[>m6e+./JNiFP7;J_e+V2"j/kbN;acuV4`)=TIJWjPs2;-as%$s9ed5HPnGY*eBPAgJq+=C>-@,rMc+OipETos/CYOj/<-)"V&Q=LA=O,6Ws0I4J?m[&46jU.$b"qAL20F&:(.q/*Tk9(\OV=\,;h%E98or]c"]Y+Ypo/()74@>W&^L+@j-HitJ9mis,"g\66:ML0#6RBrefRg8U_c3Q"sNQpL3*UjFBnZ'u[8>$'UB:Q'ADAZ<D%Q1B/V%I7a)L/;8Xp.p]t2cHG=p$?]&HbuFo-kN?J;S/0::o2Ve'#!RFUEdXfNHlsXfDYL)sea)?D&EJWSDZ!o.'7@sN;iCpaN\[6X!0"#_%`D?dA/G`2XN88/TSDR?ub@S#3a+::QTBI.(I=8_`mLaLj1W==M"fga,R(nTT@DH?D#:8%p>#=]SE/JY-cOfo:)247$@f0p]'J1to%_@R?=Q+5kEj8<KA($Q$eXKA[m\OU2oVje4^iRSU<rj#XC[_\l./&me[7+Llk.&`4<^7X^Xl@Q9dY&T0rY;+AJj:suo'@8kn3;!iO%%/Kpt%tNMmnl+RkZIpD@9^#p"MKrN;Nf,b/iiWeObIo0Tlt#1D9U\if3=I90)X<eoI/rHQ'S;t_2H<[3b!D:@c6u[h7.EUR?mF>#%&Iq<3!K22D`KE+4Petr9]X6,jD)0\'jk;A*-4rq"AKM'7@hBE<*Z)n!9_G]A?jNu^qP-Hk\BRU8a%eaJ@-"6h`DW"F."%JD?kIi<%0]R2e+)T!6=>aa=R$OQWau+Qp";dX0K2`J>KeT0]9YE!^%7qBM6PX*<J1t3er*-Zm^eC7?RgkTbQmAH,R):C@k:Etm<t#E:(a!7\%)!hB5I#a%kHs.UG*_++F1_-Tk/)h!4B&lH:C]G?JO%g8#6>94E.R1bsZr6:Tk,WJ#2E(uBX!c$2<5<*M>D)miI*njd#Ig&Z+]iOY%,TTF+ELDJh35ZZe]V:S=\,`"u0M7l/j7YE4B03)>i00[q/sp.`belQ7?\PUK?u/Oc#.=ReTBF8c\]MY>-5)7f'S16kIDlUqR87;F%.>CY:Yc4edV#CCH[kZG!_Sg3i`KTn("AZO\:'B<HZ%*kUd=T`k^Lba8j62Y2hiH+C"m4RHTnbj"do9[Wg]7ong!u4O>`FeBR4B++%,^DOJW$j!(?uorg`Zeq&@aNX760JQZ#1taC.5r"IQE+SW!]J4uq_3!oHt[DB&u,mQPI(I&D[;GqkCO#]^oH9#T.8#qHru,4m$7Z.%3^$V>7H_S$<O,HC!-,i7@dFL'ZaqWljKF,/.G*IO/M'7IeL,<=O@*0U7OE*D'sD+a<id/8A_tU=JqA!HSM=pFmJ+13@'c8n[@oMQ%AP)P4(9q%NZ[U505;Q?LD&/HK(a#NS(qU%ncM-uL9Y"ZWk5$],c@G$tT;BbsZ2.;CIMn74>bf;5^;3UAIQodBG045m-s1c&f`f^e%*rpAYhMjTg1KL7T=hJ.^VGKL8j3k`QU/!H:bCCm;T.;u=Sr]pnc!JR+$TYCu.EEo?2_P.pmVdq*#eIsKFXn:jAg8Y:_"_.u-uXr2%^[cgWJo:A=+t)C\_h,U5cAoet(f0kc0Z2$CAXndTmQa!R3;HHR=e4BChE\g]cj)agENP<4ZapKc72=cj%dU9r0@2@J:g`V"MMo%I%rG"k"=.@69;8a452bt%;Gh?OqcBB;-A'l9A^M/TC<5[iNHt_4V",aYpSZ!rWK%M2Ci"eaG$6DSX9,n+7OZj2++N*.I`XhVM@F%&.%73lc`)5UtCkF`Ko78DJTA9!_mkWra3#Sb]8g5Da;H4<](Yrh.U\;G`7-Ul;e*n3q^kFbmPKZ.Z!`X#5;`i?TPf8O!d:+^M4$XR::%I0,<Z$sFEKAkCR\1$XkR/*jQ#0PC!Mh1<O%(]f0>.I2qH19!(V)&9qln:U63/@$U<7LCg`BCs2;R:Q'c7Lq3JPeD'9oR)G>L&t>O%dFR<+0lFA?J9g/[dg]CdEA6p5_=$Ya6"Cq>Is[BA1QYp:_7JTVEQrcAJc]H.X><l"U`Mk/BE@oS<b\sgJOQi<X*G*Z];Dp/$'J7R%B5@[6+'+RF#bQasRI4Y7DJl#%%uf=sc4p<p\.a./)1^[S]k`2M,j6u5]-+mK=4"K-^c5EB\MW*mKRLelo-m.le@gJ;N89-K7f`rC%%dk)dS>srJALLGf?_DJtJ8q`bF7XoNm;Q4a_'6Fn_/1ae5j(Z3&fAnHlFg#%(u3tP"idEOkLC1lc9URk!crg0Oo]R*TQ?u]AY04*%],3Q3\Tc>MaiP@DLBj,)kg4^*@$uG]()&qR$i9uWEknM'6[5;<;p[]:!Na*,l,"0KU289ieH!NUW>>C3PYrE/,i!hdR]MFD'Vg+B%(NBJqWIc`X!t9S^\c<3_XOKGZ;iG;q\o837?fDVT!Z!fodDAP0YtF5t:r'U$kT$Z*_UR["V?IAsLOJLsV!#j[0et(B:Yi8UMM7.H%Ql@aQ%_C:4GSKM.FWim0<qmid#:O+E6j/(;OGCnc5m*&h^0%`kG9;PB`f<;#Xot%M][FZckaB7.=Vq#>L-iO:9$4hM=N\!aC=,EK%qPYoQlj.^L=[8K-k^p=[U'>UQYSUEm+DqVq(Ru4>_@Sg6k2I4g#*pSp"J^NZc:>:8Fg:3?FMVg%Ot:94E+"j)WM+>TE\L@KV\a2s%d`:0p@4_9M4>=jo5)p/TE'gSDqhqn6m.1:o,Zi@`#Ja4i6_4<\$"6@pJC5Zt&[etL0V@`oh>en5JsHTiDTJ%V-RTZ')&6PB.;5+c%?o;^u1GiM59I:7;*+2gnQ)Y]D@)9Gu1B`YbK._dER%9u9'2=#02<aU.^r"<*%J+`/Q$)>n_Q;<JUqqT7BSU\4R1I#H-9eYuL?okJ%X;]@GeLV^pS(!JD"3-1L0'`b$S['k,Lo,MqFF=W2(hX2e>U(rr"^4A.:`f4o3"jMI46/>O3M2'h-nnC1FSSfu:+h5DY?II'%IE\i%^`5SJAnd137-[^]V7%Q4;SG+Sc?_RJL4KYH\##1;nVabJ1SCIFn!]A.Z&0!9aBSi=Re<g$DIDf=FI@)U71\sh)=uk,M!["a_"^a"%Q@K4YmQjLp""H;@fmI]$)=3IX#KE0`NZ1g)An&HO&>2^O;["2lJ4jO\>ZW?\^k*T+$c(CVkU6q>iK5qI)ARkiHB_Q0SRu9"/*N?8%^m&Y4#oMn"#LV-:21T\b[Nfm5=29sm!Jm;!NZV03*#R<!8:Xi+FKY1/J5t%E/>BftmForh:rZO=6^?a7bY:E2Z1E30jUkM8%%qE+%C/$u&TMfRjQM$[qkbpP]2qF'Oc%'gSM*Jt'UnPBS]sLE!M+#/3'Bf]l^iC'><$`k'`dHR5^]]T0"Wbjepr45PF=:P`P]a@4&fPPa%d]7ooObEsp?%JEE"b[Nm*MX!Z-uCReQk*U/'@K]eOqise/2/@ZNL2@LOIT'*@\p0=T(7\,/Ed`1YukA0I]VF880gn`Ngp?<GVR(Z%SK)5cBUYTdYu#.&h9;U.F$WM&-:FSGV;RSi1/cSY*;)BE49TBB@Y"_DKs>"*6*g^mEebC5CM_iC5s9dJq]K**\T+)^kS"/4)Bbjh%c<D&af4cA)!Fh+k(B?c!J6kt^jA_#]ng(.Yd*%t&8&>`+.AC,*a@cWTBnB[H`QB(``$3^sPXjsUPr-ts=Tk]t*//B38"^[P3)J<)%;7Pq+Y(I@CRO@<a7BEki:8pX<*t5_.W[lH^.)L@(UFqJi$?RbYTJA:O#a,_ae7[8^6*Fm1,nb@c)!PKk'%=A0=UCjL-S2ciQj,)Z%2jt+Oc>t&.MHH97Sb3RP;p\_tYqh.sCF3qVR6$g"Z2+Zq@2(5'W&((X##&nkZsr,*FTr^l2Oi*5Mjc$W%D5ekK4Y>I9N%Rac,LrJ%`CB'&o59V8nk<tL7VRB7(oaLG!hD'8U^D9!HBVqIHK-t.9<^UIcq0Z`%]4Et,XH@3,J\"_Af@n">3p(bV]B"C/<EHuA^t9UCihs;%"'5&qgZj9]Q96bsPb`#FhOd)923#g:@,d>lr_]\e5j(W`*!`h>[h+^&g=YbT-1PIMf+$KSNQa5^_9X>^%2e\mHC#5c@O"RUfsON(%5Nl?K<,pQQRKb;YEF3@F()qZf9`rDGK&/pkROmZ.l(h"Ik&;]I)'7T(<;hHK?Ro;EfX^g>9_-Xm)Na$AqB9U81fr$o(R!nfqBuK@%0D4\c)Qh'nIiP1$)WVs6+1^rs\f_=M`HI3:j@UBV@P1e^"at269<+Wqi=M5Z*()k,4[_eP)DDu`&37mu2q5g5E0+rq@iQt"hG>#l%6G"SAP'(38/=D)RqN^`HP!2JB,o/s^)DH+.(j4#e2q1:ZTG7>KMO,i3W!3(hs2Wg)m=(BHf3qJ%n'EutA0Yf**qgou?V)pQ#]LDA%D'QVJK[JFL+DM=1#.EDQHe!sQh#,l,Ah]V?od@<Gj.TS1`M*JB]M#J%TYS/L4/Y(L0#l0C'8%g@j!Dnf?'\cA6d)fme"0Znc2lY<%6L^"5KI'OgVfj>HH(s12R<DL>mb+a:U?ZC'h]"K`(bpl[;n01*3]N24(^SF)N$fuVoL$AiX&&@h&!e-MY<=^?i;DKZ]JadK0VT2*%J,8(>k(DQ>LkXdCo0[1YhMjbpETl?K+$pq;@=b[M"Vs9=)Cf]7L)7`h^EFROnAp$;@1-bSOdlW3BL=rj![[VU0j6?N*cOE1TofBm%HPm_N=<X-L0:IVdcJWsS&YDA@og3&"#\V3`OC/l8Nqc_LBaA@m`M80@$@LWD8?BVI[p[A.''!AP01CV/g#/c@I8Fc/A]VjI?At%p%q%2?nb0ULV%>beoGi(dWS4H?npcTQR%2dpin8ZIaaVR9+EeoRVig,h>ii7Qu7MqO!.h5/g`<oYYPV=l:<a6AA\fs(mY^H<r/OB-P%5+5+]R0Y>.$]H^k]BCqWA0S*'11<rce25%2"MQ03%8:G&(;(uq8Dm^(gk7hQRRS-^#V0QuXNG0%[S@BH*k)tK@8%ZH=?U*kY!/]n%9UJ0_q^8JPj>d9p[7F":N1pK6EWGG<Wn7)UFBd>d(C4O1ORX:r)a^\=4p5/Bb^l6Q&-WFW]7Orn7W',QUH#7XOA<CP@WW/^Kj5eF%&&O\lA.0'e7_:gI"IRSkQuGA'71'e`Ks2W/BnQdI8Q[T9<d,9%f8-"ofU]Tdbn-a?,!"S4d<h+<KL8iWR[B1Z#bu(L,4uL:QJ(9s%!$ePrEJ+V@_VhEieU0l))I[/#/7&sciOaglV\)>%K#MaSN+)sK%7M+:ArAMMb\0A\Xs,D-@;mq/Mm0)bqhs-2KTV+q=C&`1F?^kK%jSZi]3+Qh\_YUr5_AeA7\_@@9+utXerd;</EbZ\TU'2LeKV%CVDA+Xj)\lckL!f3dQC/]R0!mMq)&t8bP;[GsgY@f=Mp*aR@1J!f%69/i;K$)4TEm$*,4m0%31YVt['k[ggpsku3.F>:L1-`SeG#)/qOP=?7<T()#ZU>3!Y0B'0@<6(QJ05!#6joNda@[b!,)&o^#BC_k%/WaTG<?;/gag)$WSA<;f/+?FK:M5P)1[1;R<oAXI<Z[Be`OK7p\S6^S&ZI,31I%YsNrXGF0H:e:@/Rt7,kIOZF!lkli6S;;.s3qo%ZBt^m]ZZfR3Ll"`(LM`_7Ml::r%XZe=Q#6Mp_lV0PQPFLO?_SXV[a#J5Se.NWsb?%Ns)kbE/(EdIM<8-GV,a_YeY$1L"!F6Xf$t0%i0C(Smj&#^We`CfPq=8X&/(H]AOSB&H0)/I\A7ET7;,%](Bdd[0O$R_@3qk<"OVA\V1K?"=$0/V"]hfl9d>I4GaR>\(ki?`IS:U3%#Gsrm]#cX1g,<@R/Qc1:@<C=PC%$`F*=pWiJT8&)=Ta<`ED10QJt>M.,E0`4AqL)!CmUQh65URGbG6;?mW4cW6P,_uAfsrK\.m"u%S0opo"X8bs"j8A?N!tAN]`B'eQ/-3nF1bluK7jgoHl7osZ!Ct]j[65VVV<&`KGAbj7uUHb>3)OmejoJS0/-;>Q]4ZM\^d#u9c.0u%=>i*HA=+t'*#KUsbD%CGP&nKVIDT1KV@b_(ml:A9cH,*S+K2_f7uf:7bd%'\PVRnCZfTd]X9<\bVZfcIHV"Jf;dalLJDK4?&YBFs%A-jgE$t4?&V\)<rU?1V?7c$&d&L&c4BdAM;HS5U;@<BCs3MM&3bB),<TkM:5C(Wq_K&uqTN0m#V9*VKhRP8Xu@9MGq'!E6_FI-K_%k6UBTE8gn.f$JI2&Ou;BjV0!,M<$M1HEPQ6LkLL!).gu+8Q`O@AQls,3OE%\K_8u&%k'-?"dZ'N0YXc,*`^'*?EbEQK_6DMBtuKl%A]p3/(u=pm%U[)/3j]mEKT0rY)3?P-bg/sb'fMKTUBt^uSOV81[s)`mX(7SL2`P5nhclW4KJ7De>j@!!LL*+3P[(L^EZ/A.rEspA%$1$,'quJs*CXrXn#idUu"V:t"@"AJ"#\1SDp.Kq]CDXK'N6Hnhi#qC#LC]%L7TV]Q^]YK;I,k>ZKQ4N;!\f;TFmg'D+fsK`Sc`Yf%@CG/ZKTU\ei^8CHI?#%3,-6dY7@TC8oL^hd72W@f/9jT#713.XMm+f71'r[994XElTG_0K,!8WFItTmo+ZP(bA?M"j*@4QomZ<.p%#bu@T$N1Q+nU_K",cnK96]&Sc).kD[8/U1W[_O.SXnqN55sk^;''9<De0,3T&k:i3'fI@s_?DI&8f/p!Z7mi6S%#L&CC+DrP!sI!%A*/kAIL-sqq$8]/Tak3NRBS0GDi$Feeg!J?0MXrF&StjWgju+fQnZK)+APa_!^@,24oOOFm"CY>:Et\4"W"0eLb=(YQp*4G6"I6M%_W[$#iWp*=#C[RW9euBPe]QdCi7(Ol9d#B'KLK;lm(!0^NNa`<$_]rgP:T+M=jB_J78Da+'@8Hg#h(=m[T.:ip^REa_MV/@\uPR#%fgEan+cNRO01H7%@h/n;KWl'pC':q0:a:dj"cMaLXD7I,C]c/d</iq+R$*6kN5s=p0i>qKD-Q'EU$N=kL$Wkb.5D)Cs+`9SeC\q_%Cd0m?&Rfe?HdRiZ;soaoP6dokhi#KB=jqC:W"E'a;'rXu_KmK+&N3gc=](nRq6@fV,)@k!.qabO,nC<g$eVsG_3i,4,cD;u97em,%PS$C9^qtO`TU\5BEYH";>r&U%fH#6QKJcK0VS.76imm?"bP)7Q8+o<#gW2](["7M4R`LJc]\FJr*VYR=BoOgP)>l&FhJp6hCa5#m%/2LKFo&<SM4e3X\M6!]cUW>%,c;nLY[((D:HW]$.N!@$!3[[Z34/Ikci-/.%6BU#JSQ-H?6+c]Egce1I=k9-]pF[55QO7$X#@;Z5%k-577'f%FC99-lf/#1/lXj6`'K5g/!-uqWc08;YB$Hk%[JetFm63pomb*t=U8>BB67q(8>;riTq@`^'j%7;R5mL4@q\d.ZL)H$=J%OYe><i/b%Wc@BlP^"=o,S=YC$.7NR8`:RoElAu!t5CEd7b7:HB?uJClb_Li_r1Q?>B&o2/_=+3(-"<h'i04ZRP"VIM&XJ-:DorHj%*fCqJ8e+20U.3s"ll8=\$I_h7O]/>,X)1\KL6rEF:W&bFJ[S#b71d,gLIh!tBkmkE*dDJ9KMLTm9aIf9MQ6'tTb`5Y?4fd.3N0Ht%H$fkJ)IX=En1+&)V9:G$gF.<W654Q@_"Hut=4CT9o;"I%I].\Q'`T<W"D8i&=I"a3_h]=q,ZC^%2h6$/EmuR1#U<\m%&ro_o]!-^%Ee)OXE+]R[l]JRZ/74QM9oUZ2jNDa:(bggi3+EC7nVNc5pL8i9[:T7:.rqU\NC7/r&)8%d^fngW#)GVPc8GjGG<_B&$]HZ>20=DR%afl35FRe^C_`;";1+`;@(gll2.i_*HgLY-#j#II(+?5j^Su>3H%oD"&fFoZK"L5qM>R:`2NdIG#&QUg97&&<)!bI?FZIGDB,@(pK%E#oU!F9gTH:4R=RW9%Fg7Yutl-RN,.+?5Dk0Y.DT4?L@BSqln;!@(gnH&D)8#[%GVT`g2B`B(aIYSKfGKMfHckJp3a#]K\p?kbqH%IPG4n"kFT#A?7dU>=r?I3.DpP4*^.CE(6efh+L<p'.kRS+A)q$>_Tug(AMo!![E!O>`T3WpFa9L$*<c\:5uJ^DWltq'@;Q*2,:@q%3GX:&`FuebPGIgDmT<l@0f#qL66%uhdMcPA$[ascJak>]jX^U*[[M7e,9q:;Uc!a]YftTa%IAqQ28Y/Zj?2;?*_iN#o8Ec%2)rqr%]s\PECP5R%=QbcA8I.c1D\%d>`]F,`YSKfGKMc>*(GA&1pfml7NNa=q%m]n*pkhrLj'0k\RZXmD&6@-[&7pfC_%C&p6!-De@$I'm%Kj#,W*fiQh,HOM7!=@N]U2(f&^&s<F2&?Ki=_n*T0*4W=@U34F=HAt0_T!@g8stq]+3mK!k4l.s0Y6Q._IEn_WlkZV1ghVked/"/%Yq@F0XS3REHSNW:A2-85AA5QM+>CA2mQuY"D^2m@@R;V+`#jPlIGj+L^aNcqMe<*,P#k#gSk-Jb2U35F/G[UKN(W?fCWHZG=;rtG%Ml3+D8>eogR0P@e$]HmeXCs:Aar0Ms`ctd?',.M+19_r'E=G5:CKKSu!UFq<C*uE4F6'D',Q#7[aal1=BEck9%1.i+coi-*'<U1T%0T%$`+F_c)a"H!TCuiA<8@X*',A.H&h#hj@"(86$.KV<H)7p^nW@4HR&K?7#@:CVc!a*d2Zj(>g:T$a;/KW6L!(Jo`*BO@*pZ^1X%4I;-^Pj&4MCn*@jPVL`$8!;^lFp+!FPMARG6NL/iaB8U7pV7fO"dkC.Pl:/>[)tO)-C%"H;DnugHUQEo0MN1VHa[U*U.+&B7[H=Z%fa$09;:\Wb$mXTs(%6*ear1gH%ic)dfQ0R*)DL,O$*+B9Ybd>a#-:@U0I9<\CMf3=#-;Tt2;qdd7$0@iQuKBp0Yol*/(I'8;Q<f]%.N9^NU50Q+P,/l!`4ou@L?.!.=O#0i.R12M@BFsh7l.AX67@^.>m$-PQd((@/<ZAK%,Y!(hhV$,U[HSSPbKjKoY<kb?""G$2:.#;%l';Z\"+EO-AtlNrHKj2TP^O73EE,&^>OJd%_mZL9-ZZhS[r9o0<D3G.)/mVjj>X23K<Vh'f%>Q_&4tkM`QcGGO=2<+K&jHgIc)O%%/`qVNA@H(rEWQdGO\:[C&IsZk7.GP\IGgp&e-NAT(Aknjls&.2::?'&`#f#hZAI@.J]P,B]X/=UQ]F)V)R+3u-^=6Q*+T=#Ds,rY%Ca+'U9'=+fGr(r2+1!mFD;dIg`>%g^p+>e:J%R")Fc)]s`+'CdKj2D!?E:lZ7\`K@j(:?7=&Np]N8,p>\!R5'l+&*ji,p8L5AlUh%##+X-R]^d+W5._0mhB`T=Jrbo67;=bSkN/2"iVu.FN-gk'7%i#VDMtZ&$+PQ;glSNE!e1EJSES[AN9nlpr2GD\5T.EH-!m=gQ+`1%]N5"c`Q0Ru0D'(N2.2q-eenS"I_=>BNs#j'D=L0$^tU!;0S?L%f8mU>!s?;.dg*@CF,:ZqXD)TD4_-)KF6erjJN(cVo'aY&"/][u%=a>>lfNX!t"kOHj7bKZ8[X9?&i,);DOfui/"%L*.DppmB-uucb,7f'E)d+g:HWqCPm41\rq[mVZS*#]_"l=jOrSo8GeppW%^j?3Q%&rN"8TZKhJhS7F%:ZVEbnB=*CqCA#e!oC-.3*P7Q+-#)i_+E'#=Q#`!NS-_VkL/E?&+?!%@N@EE%T6<iaB;.[R=[r-8Z9FONg^N<%]SEIXW5*bS7&kNf<Kj=C]O+;5,/O<0jB6$^,nkhH]P1)l"lARrKOa)VF%q5ihM^"(5k*XE`kOW\"e/U"hKt(%a#,mq)o(Im?'.jU%"l<hDn8N9+Y0Fu+JG4RPH0<n.8k#`bO(sklJbQf$@XLVi)R.Va,I`Rgi#TP&B/DT&4'MgDJ,DWt1"Q5i]9i]W+5JeXi7unSWs&0?%Q^9hI)dG$<05(*=Cq%1dj.&rkp"ihK%PE('WkKZi%2d+mSAQEr?&k_geE%ha+$f%!%JVmb@`I"8O-!9q`%@(RH6]NmbE>09iZMOE%"YO-0Q"/n7.UAY:nF7;TM*mf1do2n_SC?RG%j1N0XAjuE:fiO:M^!9M(q<sP=,N,u8P/j4a0'r4jCZB@''fZa'F'@e1D_f>?26l`%cgMK!E"P';S/,j.l;H7+6n>!uE<!F<dMagN$LZo+^tOU?2.0s`\ThU&@M#WF,Tt5Il_9`]qSl\@`X.N'1c41fEK*95`%$k0XTG6/%*\IYdL-4X-OkMY1*,tFQ?kb54EF3+%,H\YH,Uci9A75>:hhj@j+j^"eYV[K6ki'D18b=e\jp"j2B+<3N@alA7kCm*eon9".j\s22%`6\9_Uco69eSbW`JMdc)CZ%DdH-=);"FuVgi.qM-Zq!nO!7lj2Tu;U#,885k(Ougg_<gK]ch]4S"L'La1!=j`;]^s*!NZR?6>7:P%kb<j-CB1,oZ&[Ct04bVFq?J_BSWZCH?9WOC&n'`,\WVIhiUs.2?B8k@Ka!PNLQq$)Crd9EU>tEP0o(uP"0Cc$L2t!1Z_UF'A+QPM%M&'GG,@o$;`,#WEpV7gF#FP%9A?TW6N)N8t7@4^CP]HuocB4S!XDa'*(R+JZMsCMIN6#*'G0;t8b+/U2bTZ(Mj\+J#E(hfj2,MkS%gmWI]=C&^%.oa=<2*OjM,@_0"5O'&iEK;.#=$/CB>bC^L=:i7%Hg3[Ni`i#XQ*U?hH.4L+a=q(qNa.`[4T#I4Yn$\*,RG4\),%&U%LRCl*T#e$aUf8PI;Na60k>kP[/s0@`8RCuW.l<*6i"g?2ifIC4$222kgEJ(daDIOpT`W!RP.p7kG%8tm6uLJ2<U'8O$WU>?-3B@Y%L7G&a<O!rIP-Th4fLZ](nA6X=UOGso,u%+@KH2aA[^q,90MWLtKI8J9%4rb#@Z==+/n#0iM""B;%IBBkRk!0DNHbT=OQ7`l7g6,#%+qH_mU$[m^@&$2/>"6GTUL+,(OdcR=aaqVEM"=$:j"lTBmuLUZI.Lhga2":+S-H']E4EYZifm84#lr!-_9s'KC!'Q..=c-T=OfQT%QJ=l'7ffJ9@o\irVFb9#irPl'@oY2)\9V=(2[u.ON)__C=:6S.#\*+-Bl,j\D.mX-^uuF+;??m,NLL-2NJ"'+k0/Rbf0+\)`n7,_%!b:B>dUduLcIeubk,ce#V&KNK@pWW]fFh;tp5<ph_!0pqfIU7,HPS8o=7Lk3-')UEjNQ2GZPW\-NLg?5Y(8Y:"PDB%BiuEAhOjnh%[lfu4"&,9d<V$J-?h.<2<%dN<nE*b(_AmT.))/W.m`[Ut6gch2R?rhB-Z\>l0YZ\SbXPu9Uo+6&lX3kh=km0:=p;o[A!^1'N75d!%lPCDmA]m]k7?S<ECDn$srD8tFMoX%Gk.oV3=;H9R`&Pf\Bu#V%@TSTj0YZ_T49r[S/6a0M>a.:V*"fu$oN)$-)aOoMfa#h$OUH(g%mj8')nH.lKa[N0rbO#@ibVJ@Qa`dQ+H#\Ab&Y)"7qSl;5`i^/"*G'CGH3Y+VHb2HJXP]/3p1!TYa)Yts.iUV\(gR8gNj:5(9CG^#%<PepbnHM\XVl>.Ud(T8FJAha-!%#2]m_".^.WoEM%tX7>nE"3a2E$"fXqE=*?;"\6"m73TI6^,ITXcOrB_b8AeYbNq9/Z$hjQ1Xj%`&GNW5mrKUnlTeb>U<LV]Y/jj*r,:5"+)qL)R(i.f#5\#&NrjNSHb%VJM3WQYU2<-e[H!HTCQ):n6@8CYWV#tp1rU%RQSThSp+RQ%+?0m[`qA@-fkJ5]>-L-g=bb<o#(Z5R*\2i(X%!ItU]D<>"AaIMYVk>_(Vkd$=jmXHQ5T@X&7?J0=:l3S4luge\%_"0_CsTF+'Xs6%&75QI_43&lb6NGN?9PH8#S$m1Uei\""H9)Z/(au`P<uC=<5*k0G<@a)Q1a^Q$ZQ3B]AP:SQ>\J_>f80<Cb1Fo<6`JFj#ch\J8o2%%'rM/R`$#NOj]c'a>=$$*=-$X+&/\[UG<nW)?*[mPYVG1_j,K]9XN32m[\?/0p`Lrg*r0OGeqa3)bS1mYf=#.h^uuuPMnoJ\,:6F6%,+3gP(Dub#<pUW)gB_Q0KIWm^jF$:2IOjCdX@hh`"4P'L8r!d^B+^Xtd%,)$&$:@AYU[KX\gECg!Z,2K2P_uELX2#Fm'l!I^mOPt%_YV&o%FP4RaFbOo,lk"PrB]*>^i%7$UoXZ+4n@(mU\T`^LB1N)UclS;!-Tmm5r]IlL*oaW7pbe+r!HhSUSe-fb:8FQ!Jke`/QPAj%Qp]oe+2IYW^Vpfdp'AK$fd+?i.?oohnfs3@3,T'WV%+r0"W6%tG?bql@j@r6LLn!Yc2^d(Oe)!&]^3+p3;H]n,%^-%7pbe+bT:.\%hTAe%&?p=HJf:lM4eF,egiq(*!iC>h,pr_/JY338fgKG,5Ot1s@mg>BqnOqaJC0Vla05V'C1Lf8[\uR9fE,+8WDmGP!G`W?%G9#I%BF@HZ7@"gqg?T"0q:RLn_!G/PT=XjtFG43.&X2QL&M%_b5I]FRb1s3,H,pG%PP73;0K3PR\`mcI/b$(nMQEH*VWirm'#<=58NgZY%"]8c8A<.q07Y4f]nsY>@SkZa_DAbBi(AR!O]>q2[Cg/a<:?6UpqaG1L[`=h#m-"'dNhIuoe$A37@;e*5&%i0]&h@pa!nWR,('R<o%j@!>D1h@=\!S-765;1+Mij"\k?/G/A@^5s=4nhMZP6[G97Dr;8@oc1F##Gl`?(")UY]kBBccQ2>M2D-bdH)efJ"1Vc%K*K[Pr@]`%-S`ra.Fs"E*-PUs"o_?b@L;hIZV+mSJ&pW4nIsSi=Y.O2BQrDEq844K*nM!hJ1eJXY:OdP'mQQAD]*oX6]BThUYqU27^`Q!8RkKX%ks?E]\e-.+Ou1a3W%Q)?f<r2C$bT6c`>J*E>F57U?H'fFj1_LE?!d6r.Us:[OB4%(l7lX[YYElk(@[c-Q[jY9B=jN9?L8brT#dtQ%\9]-5GlVRu4Ui7+N-.bgi:f@HmQSQOn2gQ1BRr)GL6r5&A/Lc*aI*fr?*h?M)>^_41KB1VM4@"eCW7UGdf>NWp@cm1lHh;]`;:1K%XeEr^B9`pLh?E4^kehkparA+6KPCM>-?CLYil.ledrHjTaI/^i@+07:DlO</%69Uf:EJC>R_D-?!H0.ma\ChjBr%e)OdlXBDOY3$%KK)s/3pCbFgDfuVM*oQ30\C+)r<>Ut!Uj>3P+'J(+`P]97<0;#ar0NY)FK<Jk5-QOoD">)pjgnSS-J>B'PQcO.@8Zfc8,Q]1(u5E%%\P"+p=7Ikm+L$*7@]1jDc@9':6D(ON,/UZLB?&fg82<[!(jVKF_[17ne*tG<tTYRpQ5Jl:N3-2,3-JLg^<Hd\&_8G<]:g90T$W*%='lQcWcnab]k-P8LVW,npMqqhlHp%IB_6P?[c!HkM;5H^5$m^V"@fWtk9V^H4QYP7WPr.!<j+#-](#+"ZbZ>:M;bA%@g104$`o<.%:'8MPK&o*!`kd8gA1e[R5J/e`kVZl5ZnCG8p9&6T@j@n:Up0uDPQTlt:s5C>N$AMLm1,(""j9&9Ul'BV"(Td+Eq]Z_@T9!GYle8'%!#S35<fd@7SO4s&8>gjZ!a(e0)VZYG(giDo#)iWf.ol_QD--^fO]ggU0-t=AU(sC'`_<*AaoU'ODAk4+'!9MW8K9ka+XCGQj?Wd_%$)(B^$5aXl/oF[P6jd1H$Q)g!<ZDMbV2TQe113I/CoZN^`8h"BIfh%i1(D\5l8;Jg8s6YG>hH7$-"@`3"@O\K>ndlQhjA+(Z/X\n%P(6/cbVW`%*V41Lj+L5Z(0Y7bq2f=L42rnW$A>R/])XB9Z3;dQ>I)0R>VHsrXc\uOA3p+N0JI)JXWVZ+nrSV72Aa&:m"3[$kdn52%?5M9<5/pmtk-8H!do\R`c3Ladk.pbG\J8=%=c#K]Jd94)qcTT+kS7SDcNi%(8503;jV]u<#F$d5!llMc<eO,CHimbnUSa<X<2)fg%-s>F">:^"EFj&8:X?D]7#&J,BMNT8bi)ggB/"((U21W)oRKdTH#=!e4N?eR]MuuQs.3b0Bj.p42bel/6J<`Z#"%4SJ*R=nVAq(F&%^Q`(Xc&sEL)*iQ:-XaEHCNRn^MK+^4Zr5s2O2^>a<&Sc#&P;7:6GUT1:+LS\=P-'Z3!*&*op7FtJDJ'g;[*o>;'S$%Lp6T3-t%2X%V?)$s@]'Vb@%@+.0sM',4dP/K9u"i*J7E^&itphZFt7LT6"H/Sb\>\Ts5rg;ak3_S11?aTHUc[C2A.o!Dlbg(7?aCH*cVHo_g9(A%N1]n7_n]kO*3@`Z\dth&8m>f_ZXhs7F!N$+0UEbELiY0oUTcZOM3#0$fPZL<D00'4CIo"EO4h[Xas^F$]Lqt7mt:Ipk+]3L;DgOu%gK%<]r,^W]`U4?UUk!cLS@)8VJIf6OX3uipA.Yjc8<E\+]T-fKVJ9]e-]b:ApZKI1>b(@]Z\^Wg0nL7Do"^"sQW<iL:97L);M4bH%&jPkp\nZ70-dJd,pZJ?$ebB'uklB&mLoe!^jb44pg/K@4\PoL,U/,g`iDo[iKgW"XHD5Nt<dj@RSX<D!qm1qJf:W&m^]3QUs7@uD%_k6tJ5Q1-0r;H*`q"K:5a1qSNs8MWip-KL<cJMRpk<K"4huE(.r;:2WnQ4c6^RG2u&-):BTE"HmJ,74#q_(26]0H5VJ,/^9neV0[%]Z5^*r6(`4r7=14e)12cJ,8uerph`Bici07e,8Mrr:+^Q.MmI^-0G&`2ZNXBs3q#>7kX_"bQ"7)^]"+\e?V79%m'TSJ,&%Gs"M"U%^OH4We+iabroMIUo7-f4Vk<td0E*GtJ+rj?p;coO?U+Sds8Gg/s8B_4a1qMh>Eo-SDs-Thl6$&op]'XZpQ"/*LO]0hqX=I\VmjbI%qfDW0^]%Jfr]f7h^4-'N^\d8XQ@CTmo_!]';=3TIHoK*FS,_jDrTX9!qY;fDo3:smItE[8l?h6JnboU^VK]e1),/'Dh"]'.7RQHm%JW9]f+5Ul0$L,>$MkBRds7N:A[mT#SR[CV`Sg0,Obg0s6f\iqrnM;F"m&s)Y;S8<Z!l+U]_0_U-NN#ak!sQ*7<Xd=c]p0"X@hJk"%RRo(cc-F%7aR=S`%N/kC66"X.eaIt`0>BO;mt`;7iOknj%d$1'T/,c2kEYD5=+4!2hnIk:a6aRM1;,GR>YNXm%qW:9RGbGsa5scL%_"<3orb<04j702%(<<Lc)o!cUqM4g[#npFt#u#SAYJ,$9&M`a^'Ani1-*$,c*cap?/c3#Q3;d.`N7S%&?"j92D$dY"rAjU?i=N@j%Cs7*<g;?LY16TBs/r-XX)oe9Z[(cP?@1$f5GMFR5!kDTQs8BjiG9$>FJjh\GFW?dELIQ%n$;:"0@-8';K\8H[]:])_]6hn?rnlW2%pOD&.kMLZe#Dr0qhLG&;:':DIrknd3)dc1?!;sl%r8Z*P4dU"shShARj4.9>p?HmFD;)&]-gmXsE.jJhOT[JbGJf-"=)1HR!<U4'%2;eG_XilAV8r!1[*I<dG;X7-_$<g5QW@0tDKLk_X*J=Q##d4^t,U)M9hkW2QmSi.Z%'Y>rc\^(SiG;$9>CH6<6=s8Ogg?P.e$i7E%=BM1ZrVrJY5Pne:F4kfls6*S_T3N;h7(b&10GQfW)?7qKX>P+WZA*T-p#in)`'0cA*"`"LO&luuh5@+@p?=^P;hLP8mb:V&h2_:T%pY0?%Xi_OJ8IKf>RRV5XeXsn,k20AW*f@E15TEGnou6E(d^pCdJiA;ED_ZK++\_,Xj&&dZ8T8]W]M?PqJYI*/]^q02lkC+XRm_5[%<Bk3>;3mc^+@R=8.*5/rU6;(Qc;tuBNFhPT?*&&D^8mEH%1U04GaAm\3\XIY+?XK/$mg3WK3TU=aT@b+h&cq`mW!+C/QiW!UtU([%3,-LtQO=Hi3'A2&@E#qn.8dNCq:u?(c1O]97+op>)Bc?)EJBTJ8%-RDKN<cu&gctUDCN]>O06*%dcNa/o/jD7@_:NPp`s[H>!td@%S^s%3]"NRkcGMcg!]LGB"GR?o@O*BjP=VbFY+PnM*dc.\4j;P@9E^^;Vd^\oK',3jmej/!mc-K>o.s[bFQ7D5ho2Z]3R6qQbUSt7%#D,1q8a:jE<%g/i5FZP>pRA=W3*Yu."Zk7T:!LS5dZSTEaZ:@WIUiD3D7a/ii&n(hPnjNHI[o"X=m/!&L`^&e.$@].UHedJ_k>4@%$R.M.eXsqKOW$p1)h1YlM&X,;?3h2W!Tk,`d-a4Pd<,GT8T1FnI?@n<e?Z^!<c16'Mh<-727siIo0bK2K*r*#&2#!U0DX,<GFJGe%,&'`]9aWL!W_]%uZ.AEG2tTb;(hZtgTDE5bk\]cF@RA^o^oOqNn%W88;%s"Iik;8.j%=6cELV<'Q5?=/[K0DGq^kp9^LoE)>N;sT%4:EPq\Q.f..mrmE'`[`PjQ9l-CgDGb57a=EG5%DsLRD)%flsO\@JobQ`F$Hrm+h^[579S!`.Vi?Pt-Hb>l,6qW874lqtYl-]WP1c%5PI=U;U(^n%fJ^f*'+5@@]`:(AJ.?&@^#Hc9-PZ/-EIW!f?H["4[rNs/"Ic#R>9L$&mjO'kVl=a$!rnKJ:oQGMM=4T^OlNf#^/GO%j9A^-grdm&QH[7uplkbQY7FfW?.[k<RnJ?Yp6mpBml):lR>9L$Os1F-G+3sZ;k$GJZ>:RslY_X@1(PVsf"bp3A@QC;2X'NT?!S>!%8$kSk3'$^HXe<id-OB`"8FDAVD!<.30),[uD$f%uHDj%=[8f!$qNE2_HO@K^>)iCKl_4(Ed!&bI%Jdp!6PsmD)\1`CkEVsl6&6,O%Ws.Id"J#[=3qsUX.\%')CkKD&M=nASAQuD9YM^:.q*O/ieH*fMMW&:scLt&u):[OSr<tQ>6?MfqR7i-0JH5`s;3]^/D<ks'eiZp`%"/gb)Jl1'pdZBb9_Y$ZO*sO#I]s@Je^EMN>E59H`RM7"F_W44SlM5aK$?G?d:rrFiCQ_&?8RR[n`aT*kiRLIg@2b=>gKktJ3g.Cn%K0D'^>P/EGf^r!97V;MZgFQg\minI2WkFO"5O&3'Fu,N3je=YY0k=P2Xm][RjM%o.n>lK'4aTO(U\']D;$0T;ddL.`3E&DIMlK"S%B/:i5k#%mDV5`6E3LVE39(HuJmh]Mn17eJlPqc5S_g\3r*qaB+kBFl>-Z;4gIQO[HH2E0a41.,11dB`*bg5eL#]7I65JL#YO,5,8%""ec1grs@64-ZDcd];`/P^_$%SqXenGbM#ZWSE6%eBQ%VkkltL(B[7h*M1Y<0D57g)40)-cYlgTT#>+F*JE;;_>GGK%V[dlU]-W'%OJd)E,J+:,P8HjM<YrX:J^8gj0dHe@M(f^M)$u[$8YICq@LR``9KA\e/?H^H7?]123n,E#8fCYJ5.`/\Sju8]'!I6o2kmup@3A?a%We=6D/X@Qb2PqB11iN3XPunZH#=91Znk(6$*FVi[YKtr(Oq.k`/mW#o5J@EV,L:H$E.aiQC>d(7*NP_%[3rN5=O"X+4_tbH'[1Me%;;NKp:"-m0Ee`ij""qJoh=$+U8m4*Ed3=.Mf7e_V9bWs$dbq('rZ-`=pi1*Pn+A'O6*\T',>,aqY3'/<o#LJ:Rtp*>%N#-gG.9XT%Z]?@\B".a'n-9Y^o\p#sn[MrPQJJM_a_,ocJ.)Q)=CT&)=dI!`I$X@gKC5,KRN26C2%"s5dr.!QbkmK?\G++.BM>gC)-o<J)1%9s%qg$Q>)e//fTV>(rn'KjV$^]S^0u(J`$guiBLJFo73hF2/<#,5U6*0W\Y<bdQWq4,mPA<T38S>Q[n%17uM=lZk$J-m(YI.n/`R(Z]%gJoTLX5<@2@]W*Ygd8gOi0jt**."b[>UE/Y^V"UdocFs&\*+]te07NK1r#;uS$=ZdrKkf(IO]-Tf7\MWI3-h0^9tKsISYD\-bG.M%?(SB+pc/C.8Z]hT^K`%!VEA%7(R6rh1L)&Z-8P+\omFj;D!OsH):`Lb-7;@#WiBd(`CMi5Ya_:J>eJRJ25mrYR$hkP6V-kPRb>*9%OaJu_J.:2;*Z6&q]$BA9(nBTV<M2eh^Pm<h+Qtf;TOb>kNXK0.bJqbNO*.,QKTT6XGkjG[&3s70Y4ClZSJ8$fAT3RE6bmYR3DH4!%B2^,:'QBOgI6J\nE7jC[hE$hSCsBk&nJ9koZW_e/_IH6*7(M69cGTYB*JSMWM4_ZZT&sJ%F.<&57[j](-D#.e629Iu.?/'i/?)G<%;k6^iH50b%Eg\P&>\h6N=sYPY*n,*jberf:!OLCuGODm%AHB(a\2&5s,4\mdo<>%d4*uC'#L#d7#Vd0DT8U0;gK/D/DB<s`Isg!s%o<@b0lg,R**juaVEpjU4N6!XTkiSoG^CjYPS**HROrkB+i[kB!RN;tmdS&W@PbARN\CdEG<b8g%">c-FQji@dg"R2JKh!2OOG?r1%.%MW`,ZeW8aI5W4oa1dO_=+V4oh)]Fk+T4Ym=c)uRD]o&0(^C,f5^+.VqVW@Vndq=$Z3rdaWdhYcBZY2#tZm#`df"KTGgRg:&Pu%%8rDa1)'WDbf=:Y+:lkGJcoD$oe#H:TZ<"0fili9&6M0^1%nhA+@iiYaa)/[r=1Fa^B$K\[if\CLkD(?J6Ti,)p016(GCl..D<=1:%P&`MZ2bT0d5P/mtl!%@dPrQPMY[W(:-=)g.jM=D]OD!t@eYO4YNO@afQ`QU^1#,iqNNq*tIdS.j*nKXq[<_ANj/?fq:tA.G-@]"a%h=?sRAOQKgLWX@iKM=/8Jj\`!WX\BpbZmYE`33W7#U<N^mL(crD`a#/>d+pP,B<$C[B?X;*c^-uRpR>;$LEs"eDZ2d]mh)nP?*k+%!C._B#@K<GLE18SV2J"+L'l1b]L;V6Os^:e#(+TK\k,$n3:b`9NKm?SJ">@B]Mu)Ar&"r%jj%X7X<:V"GHL4c*3)S.oVJN&KKH#_%UK!jmi4Lt?cd'EEeT-Q)S;4:fa[]"\SEY5=IPI2E7u((\2W#ZY7p:dK7-EMj5@.=9odaO]3<4%:Km)ihl+M$OoWLl3'6Iq^)!^(\%Jmhg<9Hof:Ne@sQ6][dl8GSI"5"`:N#)H>>+YUM8:mf^&WIf0_k*d\:2^J7e%lemdTJB--\(Dqtgkda_[!sCR*(t3t]3RjQ3#pr\%Aff2-b(?V$9/$el5c*G$$i7u=Kq(\pOa]K/iI:'e9a$$OnEsq/,iH:\LtdMSO6g/If2aVi./90!^K5%uiMO*f.Vh#6>d$]S9qH>r%kqWbo_Va8J5JMX+JpX]`iA9cKprpiBN1Lq;nL$$J0B"2_l;JF8*B\>45@rt$d(<V9Ea7s5OF!?-d^USd#li+8d7.NDEKb"aftnR*%.9-'HkAa[LA:Hc/NZW,?1bLL5E)BYf4?->Yfa3(;eRS<$1qsu.Is>ZrIjM`"_'@I/>k7&?7(3q:nV","k@(!P)BJ\!f%mAan^=Y7%flm\IY=.<Z_5f;U(FJ6nR"tK8A,a1tJ&pCS]C8W_O^tS:-4"uLs&c#RhHJnrBdAX2&'5,-PbQK:\0,fOaDa\K.e?jn;UVV5nO#Mn%\ZaP/k`?/#pW-'.P,opn7"0H:k_ToF\8tK5U7f)pO'Ou9r%'alE6g\9r#G=)n)ul-\XjU],'93c=`hK%]h\Ol!TfK$9E8=_?DFd#%I'dFYr!83`=).d``@4F=hn:@G#C-K=X3$1P!1i92=Al)S-WP!t3!jJi]h2^bQL`^Io,nU7>*CC&*P;Zf\ug]d'i#VNgJ40c'V#MJ%15(X$Nj3([f^T/,e:li3PE^.qX<JZu>1^5P!o_-98lkI'"/Aj,/F1^_WQul9[%E6iX'2!dr]Kh/9A\[?_52;08tUl9dl-6Qk+T6.%.m;qdOJXZs&1DHKK=Z+k5aj>7$^F*4'ITB*b-h:6#LY^S11%0_9FakN4+SqHSi\T$H69f,1_t-`pquoBY_jjahq-(!0^D"@TS0j\%Z946;+=O\0k3M!2c$\\Y2+E>+3nus-kFq<)f2h8\ob#ctCCgn8\1OjPf4k%7^,Wk(d11UbAmf"1[p\6!"TsXFaDXKP:g;4YT]q#g%%r!J3jkrWTYs!0G7XU;@MrX0FQWYJPT?=\RFH*X,!8$e*N!>72LZbO:m-[f%*bqa'/Q,F?$@pdf#qY95)iNYPn\+oar(&\ti_Gqt%M>Zm_Jf@'T'W7Z7r/S(\H'H,Imq/,oD9tkI*qiMu*3)[SHR)/t+0'V5O-E`F\E(FW5a4[dQAlZ+*eK^I]nj5VqX[OQ9B*cVo]_Jp%M"Aug+3nG(+2:i1#?_c_!pL`?*uE`05/3B5!>3Yhq3?b>0N*ApT]GS]38^Pp<\gE@&H#J!`^KnK:aI2q%CRO",g&R9^4,X:6t2>U%#Mp\gPo_)k!#lUTTl`"=Gs3CjH0CCa1\PN(^;D6Y;$2pRA2$r_;3%fqfP5Ep&J'6SR%R[SW;U\?^P[5]=;@!h)</T-$,Wt:0OoLr%N]PlR8q_">bY&#dM:q%L+ntgP%1X7s9#[OPm(GGaDX>$H]7mm]+O^cl,J+Bq/a4s<:l[-WqQNlEN1KZ.;,['6jL6"!%JZSi39\:f%Ils.lK5sQ7`Bds>P%^JEGo0n*1Y1`!Xs,S:%Ao\O)ot4_5n6%'Yu/(Gd$lWn+[=4_hT0V,,#H'0#0-eABOP3Mkq.`\HXG/=9(#nd%QEcot+:BJR01;D,>G87^b1m/4ld49q\4CVnW9PY@]hVuC80eZZI(m")G2KDngm:u$$WnW.@d]Yfpp`j0XObP%dj5KKo_%f#3%g[.%oLqg9G1Y9trHn/*"*@,Tn'/aXX)eJH7OY-$3Es))64sHG!F<iupl+2pr*&d%Yn%<:`QboB7eNih4"Fh]XS>KHD_8$aODg(hAat4[%_>Jc$RLI`WanKT_V9uL2H8R<h5+khGZ=Bq/B2e9L4r2quLG.Wu]p7i?57kt%pj.C,rd%L4E5OcX6r4cE]=i\`RgdiX7?4,d&(GG>%"%7OUjH45qhp5u"Z+dSJiG8^q#6O%^i93GSW%@;<;o-er1CsH[EKd&+M0aIY]eB(F\`A/Jeh<6WJgamO=SoXY=:C3q,3*-Q2'2Ts%"M0(kHG`OAE!IAl1TH+=n`i_aK\am!6MZLjH"b%ThP&,?YT_bdRc)VVmiSBXW+RG'0.i]%?p[L:lnpm?-?6?kRX#_s*TLY1V6TN$%7hGX%>%J8f;q;'T<!WLm*ll?;V"'@`ahcul7r^_kCpcn7J`^EU&0@o-GGXPp9>\sPlF=M*Ddh.CFDri=[[<#9:oQ[EebL#XoDDWi%?([)m.)4aZ8PhB;ImW#5kI5redn#Y]C"E:9mtp_jo-akAi4Q;Z+H7e9I#j4S(qjta%nreEoUV]O:OYI"&r7YH1pY.a7_a7F'uh"h%Kq9XrMXVZo<$Z*'(-IP6Xs_a0:2p;EYp,:/.btmUeciT]&4SP>_[#9@D]QqBRZkWrF<9R<k9nOY+-^T[ids_LRfK)Ni1p$(7<gAI%?E!dr>Z)8k6$L_EbXQal&>mk68@'t1'iWd_ObHC'bmHDk;lF7&""N#m*G)4d6DNj=L%@:QTn)!]2%OuM:/jL@nGf.43VgNFI^!-k%qP"sLin+qLdGg<2Pa+,RIrGK^[FG^sIk4mcV<.X=(#f`R/3<d`?mJjEAOe-2P/u)Cehpk.5p[`HSdjGOs.J^Xl4atL(;'lq&P2uG%<8EsL<.$)7<$63hX#[J:X?#0,TWX(A%^H1j"5>E4T14gdLiUVh3pqYQAak>XJT2@H$i*e#?ST*IZHXY_=L'RX?Os(H"j(-!Z=_5A%P-f9q%X>LQa+BBiG68BTeSg])"J6);/=]aF=#FnNA<@F<d8f8GD!l`d4+u\TP_*)/9\77uE@B@g":!`EV#'E]9R'#=oIG;YC"epr%Ni]Wth>rucjHG%tO\Mu%YANBaPXV$*/lR=CI]>(Lap45^B$F*304#C).q*U>'p=6@HfPAaU00;"UkOUM?89M`R&Vea3e=@boU0S?%ln3$c9Dk_N%suVo<fCA@V3,OUCO-9hDiU$KcG*>&Bo4o'i1u:GRNAAVGUsi&m$=#-X8G:?T-fe'#$=WDRUksZi'olef#B/]Qf]61%lfFL@F9f,aa[=!l03..8WM.7"kj[r4@*ZoK?rn*tNC&`S3B2j)^,8kuV$C/":X+S#Qp1>3PU-QC`8'>6*4<]jfZ/7Y%W*0^Y\N?0%k-UqVP'P[`=tVGHq41rbcT$.?YdUrMfWFbL(j)h!8Y1_)Y?N5hK6^QWWbBB50Fo,GUg0'7/7E&0aQFa-?C%e\.g"jA.@Qa.6M2Ud%`q_hAk/^h]iA@"O=WVTIR24$1IG)oLQnf`rhOI-LBTh0@mRRN<))GkMRpWeKR,<<:99]l-KR.Oe%l6!M3*d:GmD9gd\+Y+)5k?M4%e<S$)C.a%*Q?!S`,0oP_:NsoE%sqBtiO^K#iOI6Sp^4rbf]gQfh08BOLfln,j*<<hE^>cK\ErA:KJCr!?Vg9tQ?D$?Pg^&pF&cOB%VAnIlEif!Gb%n*9[(s^CUV:MCenm(GQ<+c4YKq(:#0X"U:?TVT$iBPMcrU7h4beV=^tbouUFao_Sd\\%n+sr.>_Id*63qH8Y5q"c%lBdEqJ*QVHGV8EGj>Rkm0H(I!mR'^Q0YVl(K\G5>79A@"cnlouI.p&BD(N`i\!-FQAMl/NIGSH"i+hh9#%+beX<.pI,H;]).*,Js%Io$\c%aP3<>=rUXoFN_La"`++pBQ$W0"Tg(E"7f?Qnt2;YVA2Lk.?k:'4r<soqbBW.jO6<3h3W2c,41qa\[C,I\X$=LVKs8JC,Vg%-R0/g=HS[n@+iS+T?atUa%BaI$d3f,fj&QaJb("5<J!]XG93P0Qe_Hp&*K4L@b4&(;pu+:^c8;^l],l=TfnJ?Q7+Wjp0J>$J^`&a%K=L26XqI8j_W!kcM1-a=WJ(Ra2"O"1=\*MRf,SAd0<*::ZVTW`ap$6N\j0sOE*)<[O$OF,;$4:B-ulLsPqhgCa<:#pdJ+S^Tf<[;%Kui@crUe\ukF[2p;R"JdBUeO)cGP^MIeq@96eA_Rm*\#?RPbsPDB?gB\et]_*em$T`YkA'q:.bLACH_lfqk0Xh!A8PB?:!O2G9NA%UtEKBS/XFp)fKKO/o)ekI'J@Uga'qWCi>LG\4e"Ae<Uc8>/p.:YK/)bbkq"\KHBND=;4mTKk%\op?fSWTbS@%9p1B^RS`Z7&M9"Q%R]9fZ=PL6BS)ihnPO@_FntKS4VOCQVfl^#en?$Q]#]_qWqV4+rMD5VNkZWcTA0,Kdil&3/S0a6OOt>shKK(k9RW;utp\)`_D=D5H%]/(c_2gE,0^T$Y\g?B05`-R(gkMVA@8\Y*+N8k5?O(s:S+mnM?<ED_18(i#.7`nR+'KR`bCMbJDQnGR?S,eq=q*$3Rpm>&L=pMYE%04?Q_I!6mtmjRM:U:Zj9RKG6&Iq47q4t+#[SlD1dLVT:PhdFg<jn+J0B[_3%ShrsLO8hN!U4-[)BOI6lfALYuWnNUCedj6Z^o+Na%+[crN*";2*D*Ti]nrdMn9A>LI;R8U=kE7s\'Ul)RA0S0m?^BF/1KlP5kCT5&[QBp)25qUZ]S`>b=Mao+ai0nL2G!u7Q9Z?Y7@FWH%B8PqgM4#H5s1+tHelW33qB$=:miVB[c6]BDIFXZWjX4UY\Ys%F\O#^%'D<YQLrEU_7Jn*1"1`N#S1[Y1b`?hGAb+X'q%6mKlSN>*%'pim?js:%p..aqF11PZ0X;Kt:bdpDSPr(rH4j>eh]@TJt4=<Op:Y'fh85A?"G/iN#[eo26DiQ!i2%rUKL<iu<#"gCuHJKZOML<TD%=H]2T8q_nI%c<P"`RoSr)'N#Bab3E0%hE0O='FI`a=ji07XTtX7nsBBRRro:GYpRe5F$^]hr;XRB^=eVR#ZG/3M">I,kE_'3hC?9%bek:`MMm*G&$&OY7pHGn0HE'Eqaf&N!n2FPX*,QHDOp-dBpmklTSkY0aEa08jV?J3E.4/LEf041G9.NS/V9a/oibiV%kOj,=3f$B%jO!Q4(=A24ga1B2Lq"O"aW^pIKt!?.[&YOT$hialCodn9(*0rhUj=8D<eN1b^'EcN\p1e.dG!hNL<Ah.,n5B>F$XYf9h*re8Jc/F%Sds26Li5nRHC>%qpmag*"QPUGj^2=GZ0b'1dVc?LX5CZo0MD-"m;hZE`bcc]4Dce_gcQ"7QAbo)&&Y9Z-P"r0%\*E91>acR)HT$1%-?_D)?=EOi[jF5\%1+3b/,*tj)5k>DL<5g<WDL.Cgi1E.O[P?p",8oh[V@G_?14>V3O>sn8I*NHVFI('P+4p.P_$)!Gb\Q*gi`aB%4+lhFAE?O3j4R9[p[1e,O'Y!qN5afD=L!5G*u-&`\G&Rh3Y0@*VGBG"k%3fQXP=V:.B@H\(<P\D4oL]EIYkfl')>f[@hJ"pB5hul%(Q4[>030/&ae$(h.f&lO+!,fH%a`[+/kkV)8e0GpIQNBj-*%&P;MW!=d\jg.b&V0(s.Xc(8)mU=mqTuf+!=Q=U;:1[(\`^Iropq3%=-p;mpA%\Yqa&U84!"-A05j9STOkIhhY;@'DO&YGZO^X#!iM'-$535Oq\UF!cVq2HqNGe[C>bg:C(0_cSM)9LA)P_YDop=\6n'7q%+&.XTi5+Z%GQ.AYa`s6le+E=i+*I0So(s^Vp<fuN?p2,DU#uo)Y_X9)B"5Wc97l=&r32tpn&"h/%np.M?^L<W+&t4gl<E.AnaG2t%ZN`9bPKdDkY;dDid\`mPKfXjQmcch3Bts32;p"Kpq!0IES%]ui9l`&r+.#V1T+5S!Tt4&MM_$6%ZKnugUt[A<4PoL]2^16_<JJ\j%i:f=7?W-6Dc8@\K+(=.#7E>:Q72=TS>r5UAY6-S(0I8Z(\4<EPm@Q,N0%?6?+E:Si@$aZ%5Cr"V\?n+h06fDOQsNkiF@t@>nRH$7%A^N^&[PkM[Ofp7XBP:_&>>N(:;D,i&7obsaV8A2'ciWP+M6?j*FHV>FqEIh0d<E3_8VDQHfj/*"kE6Ia/Iqp_E;N8-f*fnIUJ&\3%@nPo\h5dTi6gcE2?M,AAnk`Wc9;Yi=5Gg63BMLU<5Kd=WFI)TXmS^Ci@.HWq4(6H&n>`6]IftrsoM("^SbXY[A'-h6n^l((nEKjj%3dk7X8@Ep+ppn,Y?d"Y(o?EJ)/JHM1$e/lLpe-o^j]d-SqR#%)^:rq>$4<Fa5J9]O+)-leNj,[>67:`DO/CGh'bj$Jo14EHRa(<E%!V!qol)H45/eTRB*?h>DC5>r2Rc86QMoR/<1WcVNJm2MD8&a,'*SBX0SZBO]9<2^sd"#<dlrm/sf\Wl2M?Mc"mc;gHZ[?,3o2+-9%oa^T_RWgm!G3,!LUFO-`1I:81o$aR`pnau2E5#c5HV'KT1iS3\7ZZZ>a6?2L;W-;(oaNWPEL3CPD_?C;CktVbd8-+,3qX==n%nY:%jg+HU&s:V[=EE?NTe4XE/h.k-KlOf(RA5(i\qb:F1NR$r+KH*e>I]>dN+t]*<t7P=;bGpr-j1D4RSX@9N-5.4(tnUjLh[!1qDMh%%?plZ)bDi%Kp.>kW&]YM'Bo1ke.SS4u6T5ONVG2g(R,=%1*ts+_4T%H[0m%gb3c7QmT<ig11&H24[J:[rD(mTEq-@+R@$oXCS_)cQ%4(1k<Z5f#D([`h::sK<]"X;iCRB&k.'@e/t<U9Bt'eBm.AY;!Hb1J6A@hnGa^i%'uJ@AViHQ.86nG*0mZ6W0#&Sl1(631%&V,r[i%[FSZU9V_f)r0LJ*e+5W/Y^3B%0>?(-6"!8W['sP60bJDerC8``^%U_!jpof-OY*p)VhO55V0%4uQ.B3nT,.?,hic!+XQsku2KVsU%PcPI'(!\'!XfWm0UYa)3SbU\mJ[Gm@H"]I(Q(B(#!gac\9R6rP6A/(9j,j4bW<u'S*$IP(\T0Tib;$8]3cV8P$)^Mf8h@eZB)5.Q%JIeOFOd/5!dV5tUY-=]#jodRRZgrWP%D!K44d&51Ma*d<,a3GDW.]=c"!5,!6RR9#mr7P7a85DsPKYH-HR>U"`D%dQKX48<JZp=>%1g;,qF32u?O+=$f-^1PEY$I8E/f$^e'?cm!03*NYhTqht+-m99f2RQ'"-g\45:Us;nS\>'FVtqQ1L>^gq_l2`kRWTpAKH<%f8?5?%6V-f[2M,h8Y=HM*VE@-T]%gK."!H**1%R%sfF"0Ck&B-kb=Cc2*@-U"&;?r?AG'.uki>=>Po4,905Zk<4T+S8fSPi!@oU,S&(R9r%<^W&,>*GYk85#[Y^]aD/K.TTiJINlj.bm`k%/6m-g-9]c\K=M2]f%_'\:]BR<P)]S`/D#@lALFJ1A[!mR6rZ+#ee'>dX`L)A0(u(%]%.;/qGNK(3\V]$Ko2&k4)]I>!BoEO#5b7!.>mf[S0D;L"JWRWL&*+CA9sl,Y"ALBTr(r#FCUPo54`%JCN(=1QC383*R)FVlIVf8%Sqk_$h\*q<`o"7A?b`K$GFdG)L=r#N)>Gf"(H/5kPdjQQ@I]bGf&7jo+5VLGekpT2O7"ZJ2+_b;5KiY$a-+WBd>5Vn8"N]7f\<Vt%QEF]Tc]W\6;qh_'\eg=_,=sp[[;A+L+,<'>>>;B2GuVX!Rto^D:466So>!O:iI?6%U<,JNGVR)1"s7s86V46cH#Q&*&A5Hl/*%X6%?-kZ3'5l(1`)#5\_+3@'.8BI^4>oTg#glk#RQi.VjIg2Y>+N;l8Jiaa`4L,7Rhfq/nad+VDFdGh6h3F`#[Q_QUOKd2l"(I(4r9R>%n+.bO]h:\V/A*@';tU%44EOhXq"HM/#O]K)fX`F#)30";M-?&aOXuiqkPdc:gTR-&RF!%oC"5l9I"V%[)4R6P(\:Im95Yt5&*noV%Q7fAH,(Ys5&pU[19D[n<+RYUj]1E'c41Ql^5=jj`;gsCWGD+[".2aHc'k9HX\bBeZC26%DTB>*6R\n]!Ng+s5QYbVRYQ"[a*.@I&%#ecGKRlWE`T(>JeUu-b]\aMo-s6O&M-SL26>T^[p6Ic=,gL=!MK)+;eW['ck<<_e<fj#>m*o[cY/-pH?2*UpT0KZXF#q^@4Vf]NV%#cqH3_(f[@43<1(fC[uRlUc#`<-iAT]9g#ae)f+*$R.\FGLOLN&gkQUXb%5X6T<nLf-a#^?H^6R.?g^V/p;miR\m!2k>Y[uMq#*E%&:`J_/Lfec52s'6@;N<KnH[B-n)F\ocHYf;l48dT1VZ0*/15i.B"+\0*hOa]Xi=^1&(BN.JW;C.g%C6Kr[AkA\45VS[e4fNJFg"@%Fnq&hfUteUngBA#S?,-%@_`T>;>&<EnrqO^*ak>iH+J!'-T4,[9/-p<O?&aDA#D?2em>aIB&s'RUQ_9?-t;cp8^L;qEAQ7eUBnes%4?tIs.@UCPcp_guq6^f5qIjH\N-GVr\t->QEm"NORI66KSO29$Y]Nt_1$._Q_K(Jfc\a'[f6N=5AkA`_Mj3W3=EErdI9cm:P)lX:%+>E<\%ICgIg0IQ39km#ObY(I#?_(skcU59!U0^qDqP;9JAo'=LP?8LKqmhr>b-rpQ-$'NHSg_e(4U9']BSK0M\`>L,hkTAb8$ZLq%nAhiK_bTO)9,BE:/,Dmh+';)uT#3ng?&MuldS)K"a&PUMM"$bL?ucl5LcffTX+TX/^m=`\jM6#\-&HIoqYh/Gn!SsY[lFb93kkc-%RlgQ;Guu?XXP%6$*er-fGTWZ*=933ip>s8iFi'cRpRYoSq';[(/4Ss1-"CT:^1QM9K!ZeMeAlmWkHbLsDf<bX6D^_h#DpVla#O!O%H)RfkNc-ieHa<R]&%,sCV=RMdQe8g>-9[M$^].%\)&M-leE2p6.F5nB6t[FQKnMF;jL;iU%E'C/4e/",N^.i$Y?$-TdVm?&bWrZY%e6BG4EI#t;?VVF]%ULRBn;+Z=R,fHVTkmi^)GUkI-UK9*RoY@HLmUZ>lS#MdCcSpZ^R`h.\U*:f_`X(O-`^1?=5$\\'.88Z`t%1%%RWoc.a:`uT3Go=EM,;m7X#IudlW[:`AaGk/3"GjKe950_LXc8Wf$bP(6k\I4\lP2+N-EW_iB4UG&Epp+"f@-2,Z;s&l"G&oPp)Z%%K>Lqto`XEgd":7&>I4Kr/@%,)Rb+3+"RH4(W67:r8;qYGY4JRf:JlnG^$\PJXGTY@S<jr]-B^D%I>T>$@OG`R0Its']>V<;fR,#+%8;8m.Q7.VHGV)Tg+>QtPfL\boIAgsop*NnWn=,iK7p5To^>iAaN;4RjW\X:CjY^R:2(52/DtX6YDQPt*()%_:bt(b2CUf/PYR]lO%/I@kS$!`)O;5"im$T7>aaI\YaMt1^(ZMc;SA.g_UP5];qo2g;X9l_`e=E0kHb`ToMOru(0lA]b"O=t:/j456J<>b>C>L<\)30m6L%h$`SV\geN)ZlU>5pTuVY*`WK$ka=PZLQdTkMm4o'dgn(r]H'X\.?^Wok\bM`eR`8[/[`Vn&!L_pcj/!HL>GN!Y&SU%b&Bne%(9$9%<Zqeh*K535nrT/Z/W2oDZr4MpS3tUYdkDM"4(YaW-$GQD_g1S?01sNP"_hnWBc>7dZm'QN/DCIoa,JGJd$IbmMDHstUU=XLqYB_:%Zi82+f?QJeW[T]PW9.MCWmVL2_*![iQAbo,%kC:G``5)2;e/L2)#!d]#&>RZKfBTal"<$%d6&suh;s+[cGQ/f\L8]b5sdsKm44?=%HtrJBgN>Su\KGs;W)K2!o'.;a"C'8m!`CR])$hI8LiV'gJ`t!s#cgJu`]I-oXpf40I]VX)q(A=/W:IW$7@()8cYU3m7H;"!J2HHR%-/!hF,n"&Il&fH+AQCpU<qNBCJn#h];DMeG",Z$ZlZ-rWMC+<&V^`uU$@[<<7NG^VoWgI@IEE8in&2pLdY'.dYk)F:<e)9M+Me+(%%B?6>W4gVp*Wg3$k1DO=hZmgk2u8JslI(T=P\>YdR'0^pSZghqJm1>Z*,fBUWqtml62j[NgRu1*H!W'<$@hNh?b;6dNA<CLB`gKV%1qIoQN&F=8`6@[2SVQm;MJ616o=N^u1W1k#%sk7a(t\[JXEHaW50J2"Q`^f)5;\<FWaXW1Ju5/IFB!76-u5sdHHD?sflGMg($9dD%!]JkC&^8-*O?S%nq)k`rCGr9JH!%CbG_J;X]J@7>C^#MU1ClRe8qn'?&*r\nVBAJ@/K&-?4NIpoPUJ$,W?AK0N/1DqYe6E`93m#C%i*LST3^a_u"h314BET<NKH\F.Bu$HqJ"7'(I5_HCTQAqNJrDI^j[*;n^$BU2,^H3,Y<7Vndq!D->#+t4C2%+X)u$"H6@Cm1jXkG[%M&8%nJWJVN#aJ@fZp-3Xe)$j_bL+#MO"K\*8RfO_`g.9)gdPIGm-)-kQAkLUo''GQC?<NtX.Z!On7jZ,(8L3X(%)Ha\u,C[g>^T?%I=s5MmPfUMjR]Uogb?]J\E0dGO1,Z)de6X0;_j^2\0"kMbCnU8Mr''+5IoiW-2lc$+^*U(s,<(_`c$o`katReki"Wt\G=B9&%U;f%K(<Q_Lsl8]0&LVnQA7Kq;/r0%IcN/ZTm]R\>oc/jio.071V6W<iIK`Us0!;Wp<)f*N)Do@3n^V^7:_\,Ls#<gqj5M?ji,4:MB?X'%\Y\o_(Yq;b-Z[kjo,t!59gh=Hrb/_S_KWB3.":;EUtDDm=,.bIQX->Ehbi>I"k>_k5&7LoFN?&/mq9#L-r9"l7V\.ZEZ2F_khZc@%Z/Yhe^<VN0\?+4/c0^V_#Kf/.p=fSVU\T9-7Okulai9DV^>H)^pk.7/,t.gT0$Ytpk!*8e&\`0)48geF2^H+drGMOb<i-",4I<sg%M#%<MP)UdlqlP'M@V(`EO*o$Wi*KV\;PmIN_2nG;@dPRVk^K3sM0Wc%>IGX>*)3]HM1MuuHA7BOV=g*;jP&Zk]":T,Judb_M>$4l%6`"q6a#[\s,o,sg=\6!'a1.A]**ZNgo>Oc:=f=u@E,S#WF^k=]W\2H-[b8.a`BqPLZg>*-A<`5J:g:s_Nm'W0NDlg40h;oC];]/O%j/tD]a"2YdB6L(R>@P(j'4ZGfWNL"JAdK)AhgK$V,n5C`/V%%NntPF:oqfo<q)do]=s@M/-]4b=^2q.J<;!@HD;MWPDtaM[9s[A_%oi>Chab,"&FkIA3](/e!p)VtpFH;4B(GcTd]m.EJ1,r`cOn#:<B@;*5rF0e,\Wi%p/utjOlDAK:Bp"b\]s<%6@Ju#;]PSZ&0oVc?%Gp;tI)I=UniEjeb[1,afTbAb!TAbE8a<%!3027TqGu#c(qFR)J>G<QhduY63gil@%L;A6.:j86jY#O*;UGR&Ui9hpP$*WQS^m1n;%ld%<q%8KS^%`FXp$t1,:Xf?+=KI&[Cl?XP&6Sp`sl\Ps45@&/H+2K2Xa!DbmGh\NgGZW12[a9)q5bE.fOk:;u[bNN/`5c.G%m/7@%P&W/"n,A+q\ZhsoGFa$d)qWY'//FFSq\kiWg%RZ?5I9r8UOL2$fp^g/P$XOA0$M0pb^kW5+PZ$E?>\]9BS*L;1G7M8n!eUT0j6?8%ep1Au[P%M&S;5'r%]LQQk<Z98a28[_LCLcEY$\(fQMuh`H3*-@V1`IH7M<Cn9M#dtrM<pm:2n)JJQD3td.tSB(Z.ZYmq?qmJMic2%j'+J"rks63MYt^U[#<toS<0jle9(_VSJEOCYHl&iDc'.?$^&fZ:4ZMo*>c(**YiDHg01ed9)[sp/)T'hCp2&QMdo8qg00YETpuVc%erm;H3AX1f"7S/MoXDlp[M]XqTT[9A8[5^i,[M&pN:`F^?9=&E#B.1Oq3Ck$[c%D2F7C?DFhYj"%O]i0Ut8BE[YIu:]R:&0<aMAt%aotMl`O]ZE2A.)*\r@Tn0%9K&Yh8E$<DCJd,Cb.m4%B96e]-h^/^GMFfV5/aaZ6]li;oZRB=f?]`)4C=4NeSpr65kG3n=dPkG<8L%II.A<+R"Z<&7K_9o!p>@9PhKb6fG)o\]t1:R+\fAC11>PNc4\MhWh5>FZ.D9mn9e<l\DHXdI\i48H#AcL64A18#S%7Z<OB5$RN11%A2NXQ0_g\t9TJ*#BDUoA+tF%LGmS1\Z4FXNqaBH\p;8_:l$KV:HfH7tX]2hu/^j@9MYf8SrjV)A$FQ_Hb.UP#`Ucph=B")W'l7uJ%[?Uji;dBaY?LNdUW`"N3E*Kg'E4;kRVGT%4,/fNeVKUCj''#<$btW(RjD*J/&1)TB2D/jM)ed\7<[G>f]m*c7o?m=Jn(eqmm1q]5%HJs#.8<*KRSqg<[.k@]qGuttC)dtA^@>:MdNe9C-_\iY'%+G+ad!%2?e+i.W>bW=>@E3@)UNtMdlgSp6@")2MFs)LH3"O2JM,-@@%3n[i8HLG[3_"/ZKChnd%3"Lpd'>a=.,UKiMVAb7qlhX^3NS$V!UApqr"!."Q%oMg<W\)'#0^I"#98uF^f=2Kd&n?5>BCA\sf3!ap%G"W4fnj1iVnM+2+`DT!NL#Z+`$7<&D]%sgl<*n!-1FaXHXhEs\.gc3Qp6(Jrqc*>[rjT=Q[@VZ.(Jckg[Xt@Fd-%5lKut_b]el77%\m?iT@lt:.Bg2mH5@*TGZb[IE.62ILrNl@W(%sGsk+b?899l6V6EIcJia64"Fm9kJM2t9shqe/r6Cjg*&YFJEaL1T_OMsR*R:Yj6%kp)V94q=-NLDGJY)S[b-6XC0d4@]P5=o^k5EGpY37D0P8or"5q>E=2[lH<h%f8^nZni?_WZU3q=;?Wuimbul<F]mF"jdt)Xeo$gQ%AD"6\d.qT$&U.l9Y:_-C"UM1o.sa<!'!>3Q8s[;c):cDU)XC$f$HaV2;naMpbZ"IXW\FZbn.o#E3cqGU:"""am-tL#=q%>_c`GU^%G%jl^]_g9H@E8%=_L0I#7PQf%EJrN;2&l6c?(.Q3'lp"7C\U>iGrV?WNf2(!oh/_BV`12uED#A%R-dt/;432H\r9@uFQR!l/E,nA%D]U5N*[l#(cd/ij>on4C4RATA9#>Qk4FkFIg(?e\04;a&'#r1elmopKYol3-6I5XFJp/aHfp7fOkPOB.(qi<Ig7>7Wh)4ja:WGNg%@V%bhEM:Wq"&91Y=,1<m?@ar?Nn>lQ_Rni[C#'RUGBuEBi[5PCEMfT4aFb1BHcPB7)s^NnSqs0rR$_Js<.?i@s5H/JTY7#r*d!lL%DWdd#Frrp90tGW^IT1>JL(dI;j)9-#[hj+f*d:t\I$gZ"]6e+_Z5/DL^%;#%LRfYM4EU9](=>Zkl&2rHHXunA@h:-1G3L%forT(Y%SJ#$<VTP9Gr!?*,KcWTu5K0meGo3$!j(>/Q;`C,C79J0EfA^I'8A*2\Z]_#jQAkL5,]d1k9r8Aan\MTI%MLU$`,^1<IE_*+(+ltc%fhqJ,'l*_"3I?^#;]`.@(Zmf-9BNk9cZd78X^n@p&%2AiaF'26r`1T?A@f(TOk+GFFc:b2i\.O!U&I1(2B@#a)PIE*a_8qJQ\-pC%\3FNMYRgBRbGO0hBcRYH.Qi;0)q9:_r>na$\;IB!>8P&A%Zb3.+c5fH5M2S!?k,MgP3QZ5)DiTQW[i/KQ@aML':-4OHfVRQ6HA9J%bBb5#9`0sIqL3'=0((5p(,A0bmX^!b9;s3$;-_GdIr],>-='&//6tkWCfLAd>tc'nJ@"$\Ub7"NRJh8$\\-S1b)7*G`f4_AWp>dR%%F+WVcB+M9@"#,-ic%\#\*NcXUHH9Z`2\os/?hKP3)*GLX>k]b-L.DTf8pdCS]G`M-IJ7?3)j\m[MY%`d#31:$K&0DW,fUmP\+Tj%R'8YD"+9-_YuV"n/TcPaOO@L#:l3WkF61ZU?Oq"t6Z(`6Pf7^CWDe>POrF"kIIcQp]$m;8aWh_0A<4SBea1mT_<u+1:sX6b:fCQX%P9$"NWfCe`f!r@2MgN*`GNgbt29WW`GMPHco2%O6\!.Gq(B:rKgNqh4hOUi7DX)MGX<g7,q;#K)#1EHH.h@Dtq`k3tC`=7/buXH]%L5<)WP</;iVLtXE].@1p:@;K[M^a*NK;i=c819ZZUs9(4rM=LoGE'T6gq.9XAuMlu7SL7lBe,>f_sY'%rV95*UG:HiJ"FdlX@Rn[%]s(%L6OV=:]VZq^jN0G\iA9HiiFC;e,&:GHJ:<5`;p3(>PMK?Z7a6A18XXFS.jl+o*KPH-MS"P[gl<^K3D=o3olZCO(8OeXW0pQA%',Ls+GHZ7>b??FVdW4uK#-b,ZLG++MR'72U*aV1]*f_0/WnZ;LET<,k:Y2d5Y@XDdd.7+Al26Z6\)F7Dmf^kPE11B)ACQj0N5:(%%-'Zih`krC;SF:]hDL%pY4J3r=@+6BS=+KBIh@JO,I+e=.=?=h3GY8M1r#Nm?q<a7-0GO4Rf.UVGfoWG"$M(T\ml.U/ZY!';F_JmE%8f0(7T9&o9/#2#\$t2p='Il9=LrQ!K54N:_.A_0^:fg8Z(>V)Q0RYW4nT1FX/c!M!-FE&SFh1XC?oAIF?Ge(j4Bac;dOP,0kFoS.%\q_@ROtoB@!;<K%lhAA6,&?Hfr*u#'IAfD@ad_K9<(7TH+!itDNGDIgP9M[T+Q08?\Wi0EV[6u3)V`dkXnV)o-d3p=VQ\`IY*n;<%<<H9BLRtcEmEfEP_Y!O@[m%<t?&o3@"acc>6A\aQ+3i*?:tqechW]<!+=Q#E:+?ZNnL+\a@pMl+<eccK[el)8oiJV@d1jesDPB'A%bnu@G?GBNjJE6?tg$(8sc,\r>!LniKJth1mR>8M*?(4:\c[B&aid-FP<bV`pXZsRCXe;j\%ru?-h9+H6b6s5,!A$;:/t;8X3Sc8f%2TZ]69?I+9J/iqSKJ9us!Nao/BY'W<ptG)n(.oT:fHQ"pU#c83)^_Du>?A[phZfEcYAmXg+-P+_S>,<mIU"p%+lSZE:\<J%oC*X`%H2,barYfu]dp$s6k[#bt-GF*'%,p&nnspDm:=lZLWHkXjeVa]s>8%3G&ig-X,5nd#H)U*,9"1JOOLE%e,oZ`p/lcS6ErS!S#c.KE%GAKtO<ibZ:!CM=*KZ`mjeTWhEaOP5.#c<ZFI_I'LVq]XEI94)qaAAn(do9e7qc>b:+HOmg?@8O'X86jPX%T3sH8)QN?MXq5R"tNM%ZM>8(YA'_YGo$&[16<X(6KdKFc9/!WCp:Am/XMt$?Fs1uWC(3L9>n4s.A%dC8'3="H0+W!Zf&QV<IG3mdUq$:,DRYMC!&o'RYNN>%DZclVKdKbgF#b<XZE[m;"rH/t>_j4d.BE4eN6J4:>H*)GQK;V;9NL>X/VHtt!1:7!A!8*_Oij4K:,9uO=GeQ`6Nd%U<E2)Ngc$)m%A@MJ+$@>)\V%hUErbKq2ne.c=GpEt2B1uWBEt,lIN=0*j^.'PcK+d7@/m]p#]MS)JCEBA%G9Hh?q<aDh+@n_^Ld#S:HOp=2(3[=9%:D^'/g$N7C\,og)"Y:cJVjHt':bWBfcMtj&n256.",7>)-T<(<`VU@Q7f%*"q@kTWA>:tDRsN;2(^@(2VApM67_N_D)PHsgamOf/%\Z4#*fbh(0&MS'm"3g@0H)7P@i@p#?-3Z%??,mVkl"1R4[>QKE*asBOZb@b*`Xte0Zj2Q-f\`l7mEkTQB[I:jRFo6L/Ns,%=O6Eu%KPo(RASX#"Q\)dp6qQH\C@FcKqt58_B-g7b`4Q1W6?c<_1_>].]FplCr8[uhRK2^fC-+*WVZ5oM#PiZunf81RCn3BlW@(ijbOa$2%k(2dW(>g40rh[WXf_H6VqB`@T1X6D,@-S`g^V&&]s6Y*aD8Dn=gI%6>&l?BTGoeDdQL#57A">h0D^DX&-qep]U6sZ#m2%^EZTTH\%r.a4EW>riLmTu["#g&i4X`mda(M:\`Jsm(Ea0+fp2>N:(7p\=9c7M?[gJiPM\G2Q[>HH*aI7T$H[5MaG;Y'X%CgX[.0'@5s6O(2M%@j:j)H)SE&jm15[:SW:W:"E`jc*Hj_<u>AgEW"+LN#&a&atHm6a+]2EN3oa'R(Zrt?/"3)g-3\IC+gJ?LJh&J=,jfp*Vqc,/Hh,:%BLgm910R*[@S=cD&Ds6l3RN'O`K`e-.o'YeQZIqB2"<-BNd*(39BuT+Te*9X3U&k9/*LbA3UN"ATa=Atd99@-4KPI[c(-d7\%cq2%7$'qH-GnF#08mSTGK[=Q_cR\uW'&R0mt#9/ERa.0H_KireTprHk3a?a8`F";U0nU*.(O\i7S!tu0Y\(lT#>6JBj(@W2.6)&N^,QR%$a(2TZ`[os#Y)%Kr?c!llOC,q4B10c5D-T+HqMU=!Tk,Ipd=2;p<k(3I4ZnKCH*6`k?!J*e7HBpk9$$6YPp:RCio\R*a4uBM5eGK%"JJE;cX[*r*$Yl;mKq'\FeAA%l;V,BnKh)QjQG4.RGTn[.Nics?KZX2`"g'M-U5&=CQ]BuWki8dW-/W)88L%@#E)F3#g*YoH`lAB%ls!F4!P/U\:%&He66<5>k?k@Cc/3fjcR@)hJjjF?71a^e"SY'JhZigWaOUk:Lh);"NPbQ&S!WRrj"ICn+-uUl*Xi#8hIn'_Jj5.K%kUn<t"quPF1B^$sl`B\PWn4?u_(63jcOU(5hP,o#>.B.FM.9TqZ7rm$"`X<`W5&+cgW*anhse'':MsI3GYB!s]^!@'gR%&rmTR:?%Im$$YK[f]X\$pBclUBol.U(ph7,lkr[V*!r+6T=`ImWX1O+\=>]%J6NjjJ:>%.oK%@@CWXb`-fnYG-B8'!r<aT%\EJ/,W[IPU9&D%b:(ZA#'<;=^Em/8K?OdkI-L?hY[l:GeZYSW=5c$4gpKPYD_?8_M&D,3=I68eqAh8M2t6@)V&Z+31h'$HFp/K;%/;u6G?M"B8U8t[%l5jI1rm9m>LoTF;DhH5hp.`\BZ4+I[g@tR)?[5)>EaS-.Z[rfZHu!,)Yh:<DFpHedW#]*Hq$Lt08K+qi4lL6ZE6*pH3=m)ej1T?e%?(]Pn`M>g.[`:`Sl9`bn'2$Y,.O9"POD@h(<Q^:'9F$!Jfj8S/Y3n"IU/(fjJX18u?FuP9+%5^=m[N\d.iH&X&)VAi\6]]lJm0N9%3KJ_k+$GNHGTLTQ7ushq6ku;>gKr[Co0LY655$R`#@Y(]6BCSrDc)kI`Nr^6VaZqO?&f\H5`dZ/_jS`fgQO5l6t=d,k(N[W7_:4+%Z-p\[p!kpcV)uRYe"o-M.P'S!F+\[S+U5??loJ5-dU(+!dFpegT0(buAL(U>=W_$kq]K\,_tF_bd!N;1p'*]b.BfsEkgsEY'KP5"%[hN9;g8Q\>J['tKYMU)-H"uN],<7*bNG^JIlL3?]Pfj-\'(%V(nH7oI'!oFC.ViuL1O(LJ-J/U_MKVR"HFHZGgM]9%>i)\XfV:]q%WAr+.9pQ-F0X`"&>&<*"K]*9qRbo7sk>D$-HHL31>Z@6X?GQ2aL.`qR^q.-Xo^2_IIp9p/=,jlc+KClp1e4a@A`=85d5M2,#0m.,%[9jUI7X(1nCijuJaCiojrL&Gp92j+u(9K4HYO?\^]>DVN@>aGg%mq_>c5)e<l]cQ1a'gH7?]X`<WcXEcEGMT5mt#;<2p$?l;I@/p%RsS\t9^/J?fWY0cECATf*upA1X/;Z30A6*;\*!EXreU,;JY"3@jbg_:^mI[NABLK3*:Dni2XB_\B.6rU%K;$cb;QooIq'3<kue(-%PU_U5V%a8HYtdD71$51K:&?Mg2RL-Hhnb)rX`5c>$L`*VRDHm-b8I4MJhkF>65Xj^k!OOm("oG-*u^rJQ[!cN!"HE6E]%G9!cr[%%]+r"RWGTu!MmPXVd8S_,F0BdOpTK70(VZ_$Vt)<O_^$"]/oHYB0f4,DoMdd>K'*Us?!simIK\tCj"lE?Eu](nfeeh3ao""R=#YKd%k0[0@IIj1sB@I6'ZIBt-3UU5]DTD60ksH(0-L>NF5GR%W5</?c$u]f(`3k\4anWWph$0`=PrM8'n+3b+QG2ZT>:-^Ja^/fFbMdDm%p:T].oW0#1T(QENY[hZF.'X''ZJP6,@:1'V\htr5GMp>(HJ3;2$aqj>-g'CZRm!I[>HYu$nJQ&QaNXR#N6%a]X\fue=qFlFEG)c&%]cKm*46'Al-"<=W^jH/k7cr8LcVsRF>2Qf4NBqCb]p00kY]nTR_,u-SO&?\bYR/I^bi'k+T:'<pM.SF'e5oU2dAS7%P[`*]4c5Xs%'5`^_TjatOATB`G9XNo>jd80hrqZ9M.X]0Kn_A;p/8Q>eiFK06beTJ^DcL,AD>]4?p@d9jf]\<sr?Ig2,>.Oo6h6K/2a+o\=':,#%g1tH@ktpnSEI?X4&Mt7@N3@45Aq;GG7L#qa`aJ_^4ET"t`5;0:r#?=(Ns=<frViI8W,)W)FU_nZeF<"^+?`Oe=L#I]ioPL;MnYP=%>mGOs4,Kt&:]EE==Rlpae)hoABm]dJh<BnrQi=4OH%oOVG1I#*"5)V/4@?>jAl8?mdX1ni[6(j*qNS8M6:93S7`ZPTC^LWTC>Q=E%LV>e\+MI+J-jeCHA?GA*4eGV0Y72jC^7dQI)'_Jr=K6d)(ZUV*Ma)R_VCelULK:0IGj@c.(H;<RXe,>pkdO)l%DS_",fF!)\h%b!%Pr4%P!7+PI"nH+J%+P2UF^dM`T5hm=k;0;;:AaCIVoY/pM]>O(4,0B5U8D!(jPHbhP'c.@b?I`fM=Hf^"-D&dTkVoh;sU>T1l1QE%E5#8o1#00Ah>GTIM[8;ODsjM0Wn@'rVYd@a:cZaR)o0!Mb8I&o2D&4e2RY;5+uUVMn`DX=ZSF,i\Z90lIWI;."OGA;$b@7riBG8E%@*L<+YHPI=LG,j7pi#J"*l1m/[/22r7/+\HVpQ`*Is>&M3dAtn;;`3J2TO03-h$r!r2eiU/Z"HP7IS>SA;[g2e5VJ'n[KEIO]hBa%pu1F%!nKSj/g[&^I3k^Kl-R>Ri9M"]l)@DZF^5&Dg3%hKJQHC@q9+f>,3uddDs5)!E;Fn*6?c>JKor#^#(.J@qtcEOqE0.P\L[V4%l-OPo$HWuX(iuJK0,EPrZ:p`nau,N!?R_1u%G<nFl.*&70?`,dN^dC-e1T%Z$)gAFo1c3P1#V_.deH_a+4#=EV>F=n`OQ7jXR.?=%clJdjZfF]Qmt]NJi'6V*9TKh$%9[jiRtmiMr,n9;i+abRaXVdIq%&EYg\&-)A$Te(b>LT`[(*3Qpm"i7$[OncY-5Na'p/sV*2'S1%\)`ED`S0:h$GR^:@=-@n_V>?L_V0/_8a(dk,$6M_8=41NW@.\8AU+)E5e@u>Y^="&/<9b>);BhM0CN\ee+f$llaCeTA&Q..6_B^^%gE5\QqUm@MjPn(\LYk$$[9&j3IScc$eT.eP9;/28l$C+8'#l;9?[;(pku'q_Nm!GP\Pq:MkCI3j`EaLBk\!e/p]U:;O[_4:\cenB%VE578Cb0"\7J]!Uc,AOBdCe,"-!5S>[#;D&B&]3YQDb!tQX\c=@8Ncno1[:gZFe@Yo9Zu(g$VkhY1.kQ]3;r"]SXo\I_@GM:&2qY%=4SSdS_4e@d]T$0ZZ`t*+Uci`O4>JbC$Gpd*nLHKf2Z'T8!V>i%&Sh,k<q4>l5jFaG?W`=DkY.R_O$QCAXFL9ib7fWo&tg2e8\pI%gI5OTq61b[]ACl"8QW)mci@uskisV[Sc8AcKCEl/Ek2D[^m2\7TpHCB%<KmPU#2+IU4c6@'-29B[(&`.o!iqIZ1d=!m[EmAZ-3;Z%l-)gu%K4`Shd%pW`'&<AXIJp0?TdnrB]1i#'JgmUZD?Wg+AmAGiMR+OpN"E3h\,Tgq*BGnDO52/lCC31Vf,J[EjdujkI<r-o'0_F%";>[=oZIQH\pR\"%2jt6;T#S#+[:@'a>3Ab:C3/**2qU)'[=-p:,A1HFa]foGq?T.#p,#m,=)!bI^Q#8g'QX4nn`!C>$hU_>GRGV%/,i5Q0DXl,qW5HSS";89D'!^0X"J?:CuXk9=M:G-YSH3-;p0kRCoUdrhj-[6AYYOp8MiBm2U5C2GaDP)nmo(orC]Bt`G<l.*O^[A%QVH^XDhcr%'*V"\>+t2oJO"Vkg>Af<.n.R(1j($,MN&20[%j[_H@Lu38#l1$hU7NsJ%O2ZV@A5-8F4,SeGb8((C"lH0BbX-a^:aa%1KG6+[T^R=_Q<T0Bqnt-^8t/MqN=T'=?V4*Fj%KO<Q?g).mcHaML0M:]"_Q2ZA>R5><f^cZZg1u+qrRV(Ku)V;f&ghS46(ViUpL)%DMlXVMahHf+mC\tX::LQEs3Psmn6Z>VHEHD?>&H%V6.7n6T.ctbY;>D\E*(=@_q.Dn6cFI@kgVb'G%J/gPHP'r6]%]j1;BC`/_$n%j1?@sf8u#-@Dh)-OpGIZEQjf'+I:lR"BZXWMb3\j(ks@2QGQJbhXpB4O#06UYN'J.XaIA4+qTfEm:1I@LXp%j1@Od[3QMmMR>82&%`0X\0)G+q)NM%f,/hjr@A3OADH+J2IS6"ptG52F'nr&77rs?Mb+"KeJ[@HBF3HbAM_.c(7mFr)ljtn0M"DI4GD0<hkK%Jc'f\Ea.%U_pOXgc3M\nqu86IBhtq1Df@@XshJRXB)AiGk.SifH/2OD5n!$Gr'RVM)Y%\i%g;)N7+sJg7V(E)aD'YXmGC\FpjAM?i@Dn^E)4%%(F-GO$sQDPLKP\.Kt0!]@G\ns.l6(+_:hqo\7`9a?XB6igDS0ueQ&1/-)AC:%Z[aOfu1<XZX0N9]c$Z(%kW1gIsF2c'DoNkdn`m2%lA_'aD/V-7.lMDP-SV#/[_`h=r*GLDD"J6=b5nq7EEjPTnW@*,@20N#e)1o6bNn#^M+j7Wa2G+S]8KY6/'W[g.CnaqrK0l;`:YhX%IILV-HAi?2S9lP#5Q2JD6g`uEoC]LcOUL_*/Rq5SjbcU7fA2GK-TsNL.n9]2:4m%Ys);'WX#Jb,F(;#GQp+6Cit43:/d.\"Cu8tC%lZ_"[l)%C3mH8S(\GK%(Y5<+^D:"enCkKoTMW5s5ZBn9eFic8QRJ-;oRr>.)PX";_M$q6,KiGAoLPoAoFXXW`n*gd%0764'//E:u%/)Xt[/SBX(T?8aR&GD(J;Iu"b>sWP*;*XL)-bJ2&(JGm"XcB`Q!aEq`hko:OZ"9o\=)8s`9f%qfhctO'ZHqh)>,k`h5)\ADZh\'?%'2g#`Se,l$e)\L=VCXqM>l43@lo[,7R5p<lVY9E@=tYh,1_5kBh@t`3^<`33T:dEKp4c)dZOrK,dU8NC3W>?LK$^8tn_e&/I"io'%EBV')Q,ZmtLWWp>o_f,j0Ke-!L'li8IW-&Up[c;[IdHLkT>$j'Z,F[qfsp+J=eO&P9X9?CjfUGZqX[P\].dapF;Pq*rcl$(_sKRs%mE=s<<%-<B*p):jSO?7b@uhMn+`>T0D>A5'ZVhlOnj6]0]]ftG4[f6$q/]l/->[r3`D_ra55r*1g\][QSE%uB_fo.Nr_)kPSP?7A%U[msLj2*cX_tPAZh/tkf3=Mb`_.h'C5gc&qf08]l!c)W2dttAJ/1o'SbQY+2f!58+i$1"OUcjXmj,\rI7B<P+am!rQ`UDNaoNF9?%\1>XoSTki&riAcVTt^1F/=ZI7]=DJJ[K'XJ["ZPW?CtT;0<c5kP`+(4MRph5*T\\tnEf>LO!&79\Yeusl8fF_O4U_>]^XmQI'$.9%aW\F2X_^+?iU-.G@<!?5@.'J>Eb+:##\!@G.:IS'Q7O,`!<'BCj<]KR8]3:PW%X\P9jWt.it'Rl"b#h/gp&4C.CLXBE?MsA06A53%nQi$-p1SeZIE6"=Pnk2tbi*5-XSfLF3?5bM4V:5J2a(a5HkU=DEk=/'3SXHp8r))\k3#ZnNHNQr@Eu?mct:sBi`Bq'GYL&f=]=b[%2h-bIklOjXMBFi-J_BI!/p5'9'om0,00/"7MbGPb[`.#F_V#-.PdgEl<_6YJ*bqmA=-Khk(GA+95&Dq+JJE!mNYVkJqmbZ7L'Bl;%d2'@>qUce"Na?H*js3ZgXX1Q59TFV8LO7[W]Lru(78fMZ)`N8aoKDqoCUj7Sn$lE7`rFZHdIjqb"+Pn$K3es3^q,Vn6qZd/PI3a^%G:eti$SW!?(Md`>g+F@XD?'S&GXq="nlc:^dulc"chnE$4Pi"%`[N!n[M%QcGj%ILDe^>>4-Y2AZp#r`kpcC$)1$\;+UX?;5,bcq%p__jKDKK97iarpTmUJp0OX3L.e5c\?(E\:2Ln=.V(EkrC\F>lB/3>RJ*an%=KW:J#A1nBOlt,KmCeWon)(<Y8e5quZd^m-9`6/o@%iF??L#q[n%csB4*1P$5]8*gZIePuq:p?-!N7Wo=7dV"B(C*+Iu"^,]KUNen=eC;It`ph\O;k.C54c`9i3\b"/V+HZ3TK^E<&!E-$%&UpPq<Pt"f=cM_tO\>DHeDEId!=dX@$R0V?<WcH!U``nNZO=He3uf/2)OatUN@,.c2hmG#j-<K#7k4Eg=PrIFN\Jce0%:!)o^k1a%(lRJSqgm/7lTED&nnM8aZQ&I$Pek40M\@V&HrMs7<A9GARf>r)fjtpCO`&J)4[+T')Yfbd*Q!fQf,VDuioAuW-K[kG3aFh6AG.U1%r2[E.gmHD$2,gK/jheG]3C9!([acL`6]XBr[`$%j=j#*n.dg6C*F%_E<XXCc:F]a"PMM6l%chW8[!52'*"eOAb"`0_\h,"K,)@c/%RLq$*LsVYKH/),kfsr?(&b4"n>Ht#-0"+_7h:Z7H*2XhQeQ_<Bg3>/)CXNil)GHDrP=iIJV6<$p2"o>HP%gTc+uW7Pb[oKr2`H)_%k&1[SmSrs5-!8`\VRl$3(XY`FIMAH4nQq4<-U5)A^=&'?AR9me&KYkXai!?[2S)j6"aE-"PSe5W/mF#iGhcjhNP$EZX,-\1BhNUE%WiEH!KV+"e4`>&k@cHb%]grdfZ4nq.314?"K.p'n#Z5VQF\]Zu7*LYe10.cdJP62`j4KLuMWG]l07jm+ek%cQV&?2dRFMsbG*7$S%aU'%&4)$1<K[:CJ,pRnUZLOFV"[8g%%PUfMH^Ot6op[sMflJ-miBBZZ9C,#6X2Zqh7]RH)>VX4*9IWIP$.DM0@]N6nW^Jn2DWJpo%8Q^+7H[.-a(6t'794uen,\G>j/i#kWn>mbOWfK*H&2e%5<dHeT:*jh&\RjfR0L6D]D#M.i=30&o[UYAtmW1Li3'u]2:KO)KbV>]1%Ib4o>e!:NOlsQacDa"YBrS_`5?,cH=p*/KY$MeS.c#XmYY,ejmY?2k99PgKp,1U;Bs!Co2ZGD9Lkhs8hOaB]Y,%<:Zq96n7WjH!?%WlrsUno+e8SpN=9[EI+!i^d3:U(YIZ^2LDljJerT+/u'4`D>/ij5d6o@U[7tGu%/X)!S+Dl!<(d9MZ=&AcG[?i%;k;jbKg?eh/D)%<6*<K/h<Wa\hc1N+VI,B+cT?!>Ze"@a4^$>jFDTm>:%=/?_`n!"5#G"-=7Ni`T6/l[b^n,J%N>MX;BX;jUV?3VBqkSPDan[^-%jT%GNJYc_e-M2:H+@#j[8ieoAR4W%Z2;F+Og+,>b53g[eK+"o'#^fG'j+r]%H?bfI@VPl,<EbRhtgCmrhZT>(<C8]`3nJ4q"p.iU$Qi%ZDX2JDR6(ccf%lGjjA'nrEFh5W%bU\Ao06#S"OBp"t.0:?X$j_!*fFTlge$V>QQ?tD-]S^Smb>^EUe+;gV#B^qT";rGbEa@;Po>:%KK5d<LUQ.l)7n*I:XMa@DW<JLRdtSE*kVUN$ZITNR#Pp,qMHW[H3"c[L(>@,V(cSd/o=T91LQ+Nmsq_N2D8APe'=[ue#JQO-H?1V%$%71C/ei,+EeXapSi$&f(<K!t*FO;?EuR/jF%p`V4#*'h@jpU,F))6(kD0U&Rhfbn7`2ehr[Q8Jes>s>r`k+h?5APu#,gd]^h]DZ%VE)X1A@2g:f%LH5(_&5A(t8X!GYQ'`nAk%rKglTC\P$7u-[)rn5>Cp<T"2\H5Uj]O$,A]f3P"qh2Y#12N<BQfT$5K^IG98*_1"*"%aiePY?`fY6TG$54@b%*SQi/<,m#\Mi[\)UCkJ_\-s1QND#S^/"i#Oa,.bnl`n7Hf.^q10$LbtZd`k_f)4n9J'T!4i$06_)-_W)fs%)!3R7*L<KO/`E@B_&3^_L7C0[<!W+0:7;Zfc[f:*KRknmD.uhoq:B%Q#*:9M\5J590ck7HLF"\m9S"t5`satn$PgQRUn]XbJhDCO%ioh7f*]3!Vf8_:dZS/'.GU3n3a(p5SpFV-;BFD/u1^T!_iBHl>"0+&o]=^trh;[riqE3R1(A"b#=<Q62VIMt2:mOKRJdU'd$<^2j%A;:q+BM`>EiPgi@?dN7s5S0Z-6O+amM@O%Y;`Q*8%C)kB2=r.]<\JUJL<CXYK0#N-++DLN3doqF>s<Zgr\$)*<Vj@@$3@_N&d<gj%9R$2e<4_mk<;J*7LkcMVRKH%+-,c>/i![pGs8I\$d;@he]W!CAn_o;4%Mtuh$<*_G#Y<&TMK=OM*BmTbC!507qua.gO-79DJmIYZ%\6M7bbg%AU>Q4VW.@400U&^dRZ<Z'$o/29`2eiUsKZurr%PKY^aLK)YK3iiEb[Oaa&G@X3:c+l"2cINRo%,'MAq\D4bi(.="9WWj%BEo6Q,)P,6kR5e&Q,B7jK)iQ[(68=_".TO2mRE+S1g=kslq9U'fBYARh7N6"qtTXjA=UpAj"O\VCgOk*-Di\dRDRO0T@QspNW-3T%N<(BNSXicef"n"aK,W5'Mdca.\i44c%d$\4%-8fETO6R6B_D]a=6"`&'V&%tXCHX*!i"Ff\^fi?`FO/Kgq6`BkDR[bp=V7uI+mK6%Y61Rc?7#.mq#;$r?/OU*;`4oOs&g>4/XG/j\=BbsGC=N1C4:=)A,/J090PjKd@)"&$X]j]T6H?m]l_nUnP.B"!oBVG2u#@3*4m78%o)o*6#Hd7k8_*NbEkV/&Bpu\;h">TpMu36&8Tt]'J,42j?6fKsIt2I[]5@QJldV73mku7"!``_"alLG,Qc6^T/.,e~>%AI9_PrivateDataEnd